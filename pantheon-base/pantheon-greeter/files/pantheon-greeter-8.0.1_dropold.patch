From 17f7e99d0f6fa556ffe4eafc18997a71dba06272 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Danielle=20For=C3=A9?= <danielle@elementary.io>
Date: Sun, 10 Nov 2024 12:04:26 -0800
Subject: [PATCH 1/5] Require Mutter >=45

---
 README.md                                     |   2 +-
 compositor/Background/Animation.vala          |   4 -
 compositor/PantheonShell.vala                 |  19 --
 compositor/ShellClients/ManagedClient.vala    |   4 -
 compositor/ShellClients/PanelWindow.vala      |   8 -
 compositor/WindowManager.vala                 |  16 --
 compositor/WingpanelManager/FocusManager.vala |   4 +-
 compositor/meson.build                        |  37 +--
 vapi/Clutter-10-custom.vala                   |  53 -----
 vapi/Clutter-10.metadata                      | 194 ----------------
 vapi/Clutter-11-custom.vala                   |  53 -----
 vapi/Clutter-11.metadata                      | 194 ----------------
 vapi/Clutter-12-custom.vala                   |  53 -----
 vapi/Clutter-12.metadata                      | 194 ----------------
 vapi/Cogl-10-custom.vala                      | 161 -------------
 vapi/Cogl-10.metadata                         |  68 ------
 vapi/Cogl-11-custom.vala                      | 161 -------------
 vapi/Cogl-11.metadata                         |  69 ------
 vapi/Cogl-12-custom.vala                      | 161 -------------
 vapi/Cogl-12.metadata                         |  73 ------
 vapi/Meta-10.metadata                         | 189 ----------------
 vapi/Meta-11.metadata                         | 205 -----------------
 vapi/Meta-12.metadata                         | 199 ----------------
 vapi/libmutter-10.deps                        |   1 -
 vapi/libmutter-10.vapi                        |   1 -
 vapi/libmutter-11.deps                        |   1 -
 vapi/libmutter-11.vapi                        |   1 -
 vapi/libmutter-12.deps                        |   1 -
 vapi/libmutter-12.vapi                        |   1 -
 vapi/meson.build                              | 213 ------------------
 vapi/mutter-clutter-10.deps                   |   6 -
 vapi/mutter-clutter-10.vapi                   |   1 -
 vapi/mutter-clutter-11.deps                   |   6 -
 vapi/mutter-clutter-11.vapi                   |   1 -
 vapi/mutter-clutter-12.deps                   |   6 -
 vapi/mutter-clutter-12.vapi                   |   1 -
 vapi/mutter-cogl-10.deps                      |   1 -
 vapi/mutter-cogl-10.vapi                      |   1 -
 vapi/mutter-cogl-11.deps                      |   1 -
 vapi/mutter-cogl-11.vapi                      |   1 -
 vapi/mutter-cogl-12.deps                      |   1 -
 vapi/mutter-cogl-12.vapi                      |   1 -
 vapi/mutter-cogl-pango-10.vapi                |   1 -
 vapi/mutter-cogl-pango-11.vapi                |   1 -
 vapi/mutter-cogl-pango-12.vapi                |   1 -
 45 files changed, 4 insertions(+), 2366 deletions(-)
 delete mode 100644 vapi/Clutter-10-custom.vala
 delete mode 100644 vapi/Clutter-10.metadata
 delete mode 100644 vapi/Clutter-11-custom.vala
 delete mode 100644 vapi/Clutter-11.metadata
 delete mode 100644 vapi/Clutter-12-custom.vala
 delete mode 100644 vapi/Clutter-12.metadata
 delete mode 100644 vapi/Cogl-10-custom.vala
 delete mode 100644 vapi/Cogl-10.metadata
 delete mode 100644 vapi/Cogl-11-custom.vala
 delete mode 100644 vapi/Cogl-11.metadata
 delete mode 100644 vapi/Cogl-12-custom.vala
 delete mode 100644 vapi/Cogl-12.metadata
 delete mode 100644 vapi/Meta-10.metadata
 delete mode 100644 vapi/Meta-11.metadata
 delete mode 100644 vapi/Meta-12.metadata
 delete mode 120000 vapi/libmutter-10.deps
 delete mode 120000 vapi/libmutter-10.vapi
 delete mode 120000 vapi/libmutter-11.deps
 delete mode 120000 vapi/libmutter-11.vapi
 delete mode 120000 vapi/libmutter-12.deps
 delete mode 120000 vapi/libmutter-12.vapi
 delete mode 100644 vapi/mutter-clutter-10.deps
 delete mode 120000 vapi/mutter-clutter-10.vapi
 delete mode 100644 vapi/mutter-clutter-11.deps
 delete mode 120000 vapi/mutter-clutter-11.vapi
 delete mode 100644 vapi/mutter-clutter-12.deps
 delete mode 120000 vapi/mutter-clutter-12.vapi
 delete mode 120000 vapi/mutter-cogl-10.deps
 delete mode 120000 vapi/mutter-cogl-10.vapi
 delete mode 120000 vapi/mutter-cogl-11.deps
 delete mode 120000 vapi/mutter-cogl-11.vapi
 delete mode 120000 vapi/mutter-cogl-12.deps
 delete mode 120000 vapi/mutter-cogl-12.vapi
 delete mode 120000 vapi/mutter-cogl-pango-10.vapi
 delete mode 120000 vapi/mutter-cogl-pango-11.vapi
 delete mode 120000 vapi/mutter-cogl-pango-12.vapi

diff --git a/README.md b/README.md
index 5fdf8ba17..58ae3c390 100644
--- a/README.md
+++ b/README.md
@@ -15,7 +15,7 @@ You'll need the following dependencies:
 * libgtk-3-dev
 * libhandy-1-dev >= 0.90.0
 * liblightdm-gobject-1-dev
-* libmutter-6-dev
+* libmutter-13-dev
 * libx11-dev
 * meson
 * valac
diff --git a/compositor/Background/Animation.vala b/compositor/Background/Animation.vala
index fa4c17c08..b34b5806a 100644
--- a/compositor/Background/Animation.vala
+++ b/compositor/Background/Animation.vala
@@ -30,11 +30,7 @@ namespace GreeterCompositor {
             yield;
         }
 
-#if HAS_MUTTER45
         public void update (Mtk.Rectangle monitor) {
-#else
-        public void update (Meta.Rectangle monitor) {
-#endif
             string[] key_frame_files = {};
 
             if (show == null)
diff --git a/compositor/PantheonShell.vala b/compositor/PantheonShell.vala
index e53b69eff..8e1819434 100644
--- a/compositor/PantheonShell.vala
+++ b/compositor/PantheonShell.vala
@@ -5,32 +5,13 @@
  */
 
 namespace GreeterCompositor {
-#if !HAS_MUTTER45
-    [Compact]
-    public class FakeMetaWaylandCompositor : GLib.Object {
-        // It is the third field and Vala adds a FakeMetaWaylandCompositorPrivate *priv
-        public Wl.Display wayland_display;
-
-        [CCode (cname = "meta_context_get_wayland_compositor")]
-        public extern static unowned GreeterCompositor.FakeMetaWaylandCompositor from_context (Meta.Context context);
-    }
-#endif
     public static inline unowned Wl.Display? get_display_from_context (Meta.Context context) {
-#if HAS_MUTTER45
         unowned Meta.WaylandCompositor? compositor = context.get_wayland_compositor ();
         if (compositor == null) {
             return null;
         }
 
         return (Wl.Display) compositor.get_wayland_display ();
-#else
-        unowned FakeMetaWaylandCompositor compositor = GreeterCompositor.FakeMetaWaylandCompositor.from_context (context);
-        if (compositor == null) {
-            return null;
-        }
-
-        return compositor.wayland_display;
-#endif
     }
 
     private static Pantheon.Desktop.ShellInterface wayland_pantheon_shell_interface;
diff --git a/compositor/ShellClients/ManagedClient.vala b/compositor/ShellClients/ManagedClient.vala
index 51f579204..895956f47 100644
--- a/compositor/ShellClients/ManagedClient.vala
+++ b/compositor/ShellClients/ManagedClient.vala
@@ -50,11 +50,7 @@ public class GreeterCompositor.ManagedClient : Object {
     private async void start_wayland () {
         var subprocess_launcher = new GLib.SubprocessLauncher (STDERR_PIPE | STDOUT_PIPE);
         try {
-#if HAS_MUTTER44
             wayland_client = new Meta.WaylandClient (display.get_context (), subprocess_launcher);
-#else
-            wayland_client = new Meta.WaylandClient (subprocess_launcher);
-#endif
             subprocess = wayland_client.spawnv (display, args);
 
             yield subprocess.wait_async ();
diff --git a/compositor/ShellClients/PanelWindow.vala b/compositor/ShellClients/PanelWindow.vala
index 422013b0d..675c9e4f3 100644
--- a/compositor/ShellClients/PanelWindow.vala
+++ b/compositor/ShellClients/PanelWindow.vala
@@ -112,21 +112,13 @@ public class GreeterCompositor.PanelWindow : Object {
         update_strut ();
     }
 
-#if HAS_MUTTER45
     private void position_window_top (Mtk.Rectangle monitor_geom, Mtk.Rectangle window_rect) {
-#else
-    private void position_window_top (Meta.Rectangle monitor_geom, Meta.Rectangle window_rect) {
-#endif
         var x = monitor_geom.x + (monitor_geom.width - window_rect.width) / 2;
 
         move_window_idle (x, monitor_geom.y);
     }
 
-#if HAS_MUTTER45
     private void position_window_bottom (Mtk.Rectangle monitor_geom, Mtk.Rectangle window_rect) {
-#else
-    private void position_window_bottom (Meta.Rectangle monitor_geom, Meta.Rectangle window_rect) {
-#endif
         var x = monitor_geom.x + (monitor_geom.width - window_rect.width) / 2;
         var y = monitor_geom.y + monitor_geom.height - window_rect.height;
 
diff --git a/compositor/WindowManager.vala b/compositor/WindowManager.vala
index ae92172b1..cca7b1ac4 100644
--- a/compositor/WindowManager.vala
+++ b/compositor/WindowManager.vala
@@ -260,11 +260,7 @@ namespace GreeterCompositor {
             var subprocess_launcher = new GLib.SubprocessLauncher (GLib.SubprocessFlags.INHERIT_FDS);
             try {
                 Meta.WaylandClient daemon_client;
-#if HAS_MUTTER44
                 daemon_client = new Meta.WaylandClient (display.get_context (), subprocess_launcher);
-#else
-                daemon_client = new Meta.WaylandClient (subprocess_launcher);
-#endif
                 var subprocess = daemon_client.spawnv (display, command);
 
                 yield subprocess.wait_async ();
@@ -332,11 +328,7 @@ namespace GreeterCompositor {
             }
         }
 
-#if HAS_MUTTER45
         public override void show_window_menu_for_rect (Meta.Window window, Meta.WindowMenuType menu, Mtk.Rectangle rect) {
-#else
-        public override void show_window_menu_for_rect (Meta.Window window, Meta.WindowMenuType menu, Meta.Rectangle rect) {
-#endif
             show_window_menu (window, menu, rect.x, rect.y);
         }
 
@@ -388,11 +380,7 @@ namespace GreeterCompositor {
             }
         }
 
-#if HAS_MUTTER45
         public override void size_change (Meta.WindowActor actor, Meta.SizeChange which_change, Mtk.Rectangle old_frame_rect, Mtk.Rectangle old_buffer_rect) {
-#else
-        public override void size_change (Meta.WindowActor actor, Meta.SizeChange which_change, Meta.Rectangle old_frame_rect, Meta.Rectangle old_buffer_rect) {
-#endif
             unowned Meta.Window window = actor.get_meta_window ();
             if (window.get_tile_match () != null) {
                 size_change_completed (actor);
@@ -490,12 +478,8 @@ namespace GreeterCompositor {
         }
 
         public override void confirm_display_change () {
-#if HAS_MUTTER44
             unowned var monitor_manager = get_display ().get_context ().get_backend ().get_monitor_manager ();
             var timeout = monitor_manager.get_display_configuration_timeout ();
-#else
-            var timeout = Meta.MonitorManager.get_display_configuration_timeout ();
-#endif
             var summary = ngettext (
                 "Changes will automatically revert after %i second.",
                 "Changes will automatically revert after %i seconds.",
diff --git a/compositor/WingpanelManager/FocusManager.vala b/compositor/WingpanelManager/FocusManager.vala
index 47d0280de..3ab322004 100644
--- a/compositor/WingpanelManager/FocusManager.vala
+++ b/compositor/WingpanelManager/FocusManager.vala
@@ -100,10 +100,8 @@ public class GreeterCompositor.FocusManager : GLib.Object {
 #if HAS_MUTTER46
             Graphene.Point pos_hint = {x, y};
             window.begin_grab_op (Meta.GrabOp.MOVING, null, null, time, pos_hint);
-#elif HAS_MUTTER44
-            window.begin_grab_op (Meta.GrabOp.MOVING, null, null, time);
 #else
-            window.begin_grab_op (Meta.GrabOp.MOVING, true, time);
+            window.begin_grab_op (Meta.GrabOp.MOVING, null, null, time);
 #endif
             return true;
         }
diff --git a/compositor/meson.build b/compositor/meson.build
index 806fe3308..0abd83402 100644
--- a/compositor/meson.build
+++ b/compositor/meson.build
@@ -14,38 +14,6 @@ vala_flags = []
 compositor_c_args =['-DCLUTTER_ENABLE_COMPOSITOR_API', '-DCLUTTER_ENABLE_EXPERIMENTAL_API',
 		'-DCOGL_ENABLE_EXPERIMENTAL_API', '-DCOGL_ENABLE_EXPERIMENTAL_2_0_API']
 
-mutter42_dep = dependency('libmutter-10', version: ['>= 42', '< 43'], required: false)
-if mutter42_dep.found()
-	libmutter_dep = dependency('libmutter-10', version: '>= 42')
-	mutter_dep = [
-		libmutter_dep,
-		dependency('mutter-cogl-10'), dependency('mutter-cogl-pango-10'),
-		dependency('mutter-clutter-10')
-	]
-endif
-
-mutter43_dep = dependency('libmutter-11', version: ['>= 43', '< 44'], required: false)
-if mutter43_dep.found()
-	libmutter_dep = dependency('libmutter-11', version: '>= 43')
-	mutter_dep = [
-		libmutter_dep,
-		dependency('mutter-cogl-11'), dependency('mutter-cogl-pango-11'),
-		dependency('mutter-clutter-11')
-	]
-	vala_flags = ['--define', 'HAS_MUTTER43']
-endif
-
-mutter44_dep = dependency('libmutter-12', version: ['>= 44', '< 45'], required: false)
-if mutter44_dep.found()
-	libmutter_dep = dependency('libmutter-12', version: '>= 44')
-	mutter_dep = [
-		libmutter_dep,
-		dependency('mutter-cogl-12'), dependency('mutter-cogl-pango-12'),
-		dependency('mutter-clutter-12')
-	]
-	vala_flags = ['--define', 'HAS_MUTTER43', '--define', 'HAS_MUTTER44']
-endif
-
 mutter45_dep = dependency('libmutter-13', version: ['>= 45', '< 46'], required: false)
 if mutter45_dep.found()
 	libmutter_dep = dependency('libmutter-13', version: '>= 45')
@@ -54,7 +22,6 @@ if mutter45_dep.found()
 		dependency('mutter-mtk-13'), dependency('mutter-cogl-13'),
 		dependency('mutter-cogl-pango-13'), dependency('mutter-clutter-13')
 	]
-	vala_flags = ['--define', 'HAS_MUTTER43', '--define', 'HAS_MUTTER44', '--define', 'HAS_MUTTER45']
 endif
 
 mutter46_dep = dependency('libmutter-14', version: ['>= 46', '< 47'], required: false)
@@ -65,7 +32,7 @@ if mutter46_dep.found()
 		dependency('mutter-mtk-14'), dependency('mutter-cogl-14'),
 		dependency('mutter-cogl-pango-14'), dependency('mutter-clutter-14')
 	]
-	vala_flags = ['--define', 'HAS_MUTTER43', '--define', 'HAS_MUTTER44', '--define', 'HAS_MUTTER45', '--define', 'HAS_MUTTER46']
+	vala_flags = ['--define', 'HAS_MUTTER46']
 endif
 
 mutter47_dep = dependency('libmutter-15', version: ['>= 47', '< 48'], required: false)
@@ -76,7 +43,7 @@ if mutter47_dep.found()
 		dependency('mutter-mtk-15'), dependency('mutter-cogl-15'),
 		dependency('mutter-cogl-pango-15'), dependency('mutter-clutter-15')
 	]
-	vala_flags = ['--define', 'HAS_MUTTER43', '--define', 'HAS_MUTTER44', '--define', 'HAS_MUTTER45', '--define', 'HAS_MUTTER46', '--define', 'HAS_MUTTER47']
+	vala_flags = ['--define', 'HAS_MUTTER46', '--define', 'HAS_MUTTER47']
 endif
 
 if mutter_dep.length() == 0
diff --git a/vapi/Clutter-10-custom.vala b/vapi/Clutter-10-custom.vala
deleted file mode 100644
index e5c71c2d8..000000000
--- a/vapi/Clutter-10-custom.vala
+++ /dev/null
@@ -1,53 +0,0 @@
-namespace Clutter {
-	public struct Color {
-		[CCode (cname = "_vala_clutter_color_from_hls")]
-		public static Clutter.Color? from_hls (float hue, float luminance, float saturation) {
-			var color = Clutter.Color.alloc ();
-			color.init_from_hls (hue, luminance, saturation);
-			return color;
-		}
-		[CCode (cname = "_vala_clutter_color_from_pixel")]
-		public static Clutter.Color? from_pixel (uint32 pixel) {
-			var color = Clutter.Color.alloc ();
-			color.init_from_pixel (pixel);
-			return color;
-		}
-		[CCode (cname = "_vala_clutter_color_from_string")]
-		public static Clutter.Color? from_string (string str) {
-			var color = Clutter.Color.alloc ();
-			color.init_from_string (str);
-			return color;
-		}
-		[CCode (cname = "clutter_color_from_string")]
-		public bool parse_string (string str);
-	}
-
-	public interface Container : GLib.Object {
-		public void add (params Clutter.Actor[] actors);
-		[CCode (cname = "clutter_container_class_find_child_property")]
-		public class unowned GLib.ParamSpec find_child_property (string property_name);
-		[CCode (cname = "clutter_container_class_list_child_properties")]
-		public class unowned GLib.ParamSpec[] list_child_properties ();
-	}
-
-	public struct Units {
-		[CCode (cname = "clutter_units_from_cm")]
-		public Units.from_cm (float cm);
-		[CCode (cname = "clutter_units_from_em")]
-		public Units.from_em (float em);
-		[CCode (cname = "clutter_units_from_em_for_font")]
-		public Units.from_em_for_font (string font_name, float em);
-		[CCode (cname = "clutter_units_from_mm")]
-		public Units.from_mm (float mm);
-		[CCode (cname = "clutter_units_from_pixels")]
-		public Units.from_pixels (int px);
-		[CCode (cname = "clutter_units_from_pt")]
-		public Units.from_pt (float pt);
-		[CCode (cname = "clutter_units_from_string")]
-		public Units.from_string (string str);
-	}
-
-	[CCode (cheader_filename = "clutter/clutter.h", has_copy_function = false, has_destroy_function = false, has_type_id = false)]
-	public struct Capture {
-	}
-}
diff --git a/vapi/Clutter-10.metadata b/vapi/Clutter-10.metadata
deleted file mode 100644
index dde029270..000000000
--- a/vapi/Clutter-10.metadata
+++ /dev/null
@@ -1,194 +0,0 @@
-// Non mini-object
-ActorBox struct
-Color struct
-Knot struct
-Margin struct
-PaintVolume struct
-PathNode struct
-Perspective struct
-Units struct
-
-*.ref unowned
-
-Actor
-	.apply_transform.matrix ref
-	.get_abs_allocation_vertices.verts out=false
-Canvas
-	.new symbol_type="constructor"
-Event.type#method name="get_type"
-Image
-	.new symbol_type="constructor"
-
-// ???
-Actor.has_pointer#method name="get_has_pointer"
-ScriptError errordomain
-ImageError errordomain
-
-// Not all backing symbols are deprecated
-Actor.pick deprecated=false
-
-// Nullable return values
-Actor
-	.get_parent nullable
-value_get_color nullable
-
-// method/virtual-method/signal don't match
-Actor
-	.event#method name="emit_event"
-	.get_paint_volume#virtual_method name="get_paint_volume_vfunc"
-	.get_paint_volume#virtual_method.volume out
-Container
-	.add_actor skip=false
-	.class_* skip
-Text
-	.activate#method name="try_activate"
-	.insert_text#signal skip
-TextBuffer.get_text#virtual_method name="get_text_with_length"
-
-// virtual/abstract distinction
-Container
-	.*_child_meta#virtual_method virtual
-
-// Default values
-Stage.read_pixels
-	.width default=-1
-	.height default=-1
-Stage.paint_to_buffer
-    .data type="uint8[]"
-Text
-	.position_to_coords.line_height default=null
-
-// Reparented funcs methods can't be instance methods
-feature_available skip
-feature_get_all skip
-
-// Skipped by g-i for unknown reasons
-LayoutManager
-	.create_child_meta skip=false
-
-// Variadic arguments
-Backend
-	.get_cogl_context skip=false
-Container
-	.child_get skip=false
-	.child_set skip=false
-	.remove skip=false
-Interval
-	.new skip=false
-	.get_interval skip=false
-	.set_final skip=false
-	.set_initial skip=false
-	.set_interval skip=false
-LayoutManager
-	.child_get skip=false
-	.child_set skip=false
-Script
-	.get_objects skip=false
-
-// Skipped upstream for unknown reasons
-Interval.register_progress_func skip=false
-threads_add_idle skip=false
-threads_add_idle_full skip=false
-threads_add_timeout skip=false
-threads_add_timeout_full skip=false
-
-// struct/class confusion
-ActorBox
-	.new skip
-	.from_vertices skip
-Units.from_* skip
-Margin
-	.new skip
-
-// Class methods
-container_class_find_child_property skip
-container_class_list_child_properties skip
-
-// Move symbols
-units_from_* skip
-
-// Struct return values
-color_get_static nullable
-
-// Upstream
-Event
-	.get_position.position out
-
-FrameListenerIface skip
-FrameClock.new skip
-
-// Remove for clutter-2.0
-/////////////////////////
-
-StageView.layout skip
-
-Stage
-	.paint_view.redraw_clip type="Cairo.Region"
-
-Capture
-  .image type="Cairo.ImageSurface"
-
-// *Event should be compact classes derived from Clutter.Event
-Event.type skip=false
-AnyEvent struct=false base_type="Clutter.Event"
-ButtonEvent struct=false base_type="Clutter.Event"
-CrossingEvent struct=false base_type="Clutter.Event"
-DeviceEvent struct=false base_type="Clutter.Event"
-IMEvent struct=false base_type="Clutter.Event"
-KeyEvent struct=false base_type="Clutter.Event"
-MotionEvent struct=false base_type="Clutter.Event"
-PadButtonEvent struct=false base_type="Clutter.Event"
-PadRingEvent struct=false base_type="Clutter.Event"
-PadStripEvent struct=false base_type="Clutter.Event"
-ProximityEvent struct=false base_type="Clutter.Event"
-ScrollEvent struct=false base_type="Clutter.Event"
-TouchEvent struct=false base_type="Clutter.Event"
-TouchpadHoldEvent struct=false base_type="Clutter.Event"
-TouchpadPinchEvent struct=false base_type="Clutter.Event"
-TouchpadSwipeEvent struct=false base_type="Clutter.Event"
-
-// Keysyms used to be CLUTTER_X instead of CLUTTER_KEY_X
-*#constant skip
-COGL skip=false
-CURRENT_TIME skip=false
-FLAVOUR skip=false
-PATH_RELATIVE skip=false
-PRIORITY_REDRAW skip=false
-
-// Clutter devs don't like us creating nested namespaces
-value_* name="value_(.+)" parent="Clutter.Value"
-threads_* name="threads_(.+)" parent="Clutter.Threads"
-threads_add_idle name="add" parent="Clutter.Threads.Idle"
-threads_add_idle_full name="add_full" parent="Clutter.Threads.Idle"
-threads_add_timeout name="add" parent="Clutter.Threads.Timeout"
-threads_add_timeout_full name="add_full" parent="Clutter.Threads.Timeout"
-
-// Backwards compatibility
-Color.alloc symbol_type="function"
-
-Color.from_hls name="init_from_hls"
-Color.from_pixel name="init_from_pixel"
-Color.from_string name="init_from_string"
-
-Color.new name="from_rgba" symbol_type="function"
-	.alpha default=0
-	.blue default=0
-	.green default=0
-	.red default=0
-
-Color.init
-	.alpha default=0
-	.blue default=0
-	.green default=0
-	.red default=0
-
-BinAlignment deprecated=false deprecated_since=null
-BinAlignment.* deprecated
-BinAlignment.start deprecated=false
-BinLayout.new.*_align default=Clutter.BinAlignment.START
-
-// Possibly keep
-KEY_* skip=false name="KEY_(.+)" type="uint" parent="Clutter.Key"
-BUTTON_* skip=false name="BUTTON_(.+)" type="uint32" parent="Clutter.Button"
-EVENT_STOP skip=false type="bool"
-EVENT_PROPAGATE skip=false type="bool"
diff --git a/vapi/Clutter-11-custom.vala b/vapi/Clutter-11-custom.vala
deleted file mode 100644
index e5c71c2d8..000000000
--- a/vapi/Clutter-11-custom.vala
+++ /dev/null
@@ -1,53 +0,0 @@
-namespace Clutter {
-	public struct Color {
-		[CCode (cname = "_vala_clutter_color_from_hls")]
-		public static Clutter.Color? from_hls (float hue, float luminance, float saturation) {
-			var color = Clutter.Color.alloc ();
-			color.init_from_hls (hue, luminance, saturation);
-			return color;
-		}
-		[CCode (cname = "_vala_clutter_color_from_pixel")]
-		public static Clutter.Color? from_pixel (uint32 pixel) {
-			var color = Clutter.Color.alloc ();
-			color.init_from_pixel (pixel);
-			return color;
-		}
-		[CCode (cname = "_vala_clutter_color_from_string")]
-		public static Clutter.Color? from_string (string str) {
-			var color = Clutter.Color.alloc ();
-			color.init_from_string (str);
-			return color;
-		}
-		[CCode (cname = "clutter_color_from_string")]
-		public bool parse_string (string str);
-	}
-
-	public interface Container : GLib.Object {
-		public void add (params Clutter.Actor[] actors);
-		[CCode (cname = "clutter_container_class_find_child_property")]
-		public class unowned GLib.ParamSpec find_child_property (string property_name);
-		[CCode (cname = "clutter_container_class_list_child_properties")]
-		public class unowned GLib.ParamSpec[] list_child_properties ();
-	}
-
-	public struct Units {
-		[CCode (cname = "clutter_units_from_cm")]
-		public Units.from_cm (float cm);
-		[CCode (cname = "clutter_units_from_em")]
-		public Units.from_em (float em);
-		[CCode (cname = "clutter_units_from_em_for_font")]
-		public Units.from_em_for_font (string font_name, float em);
-		[CCode (cname = "clutter_units_from_mm")]
-		public Units.from_mm (float mm);
-		[CCode (cname = "clutter_units_from_pixels")]
-		public Units.from_pixels (int px);
-		[CCode (cname = "clutter_units_from_pt")]
-		public Units.from_pt (float pt);
-		[CCode (cname = "clutter_units_from_string")]
-		public Units.from_string (string str);
-	}
-
-	[CCode (cheader_filename = "clutter/clutter.h", has_copy_function = false, has_destroy_function = false, has_type_id = false)]
-	public struct Capture {
-	}
-}
diff --git a/vapi/Clutter-11.metadata b/vapi/Clutter-11.metadata
deleted file mode 100644
index 8195fee1a..000000000
--- a/vapi/Clutter-11.metadata
+++ /dev/null
@@ -1,194 +0,0 @@
-// Non mini-object
-ActorBox struct
-Color struct
-Knot struct
-Margin struct
-PaintVolume struct
-PathNode struct
-Perspective struct
-Units struct
-
-*.ref unowned
-
-Actor
-	.apply_transform.matrix ref
-	.get_abs_allocation_vertices.verts out=false
-Canvas
-	.new symbol_type="constructor"
-Event.type#method name="get_type"
-Image
-	.new symbol_type="constructor"
-
-// ???
-Actor.has_pointer#method name="get_has_pointer"
-ScriptError errordomain
-
-// Not all backing symbols are deprecated
-Actor.pick deprecated=false
-
-// Nullable return values
-Actor
-	.get_parent nullable
-value_get_color nullable
-
-// method/virtual-method/signal don't match
-Actor
-	.event#method name="emit_event"
-	.get_paint_volume#virtual_method name="get_paint_volume_vfunc"
-	.get_paint_volume#virtual_method.volume out
-Container
-	.add_actor skip=false
-	.class_* skip
-Text
-	.activate#method name="try_activate"
-	.insert_text#signal skip
-TextBuffer.get_text#virtual_method name="get_text_with_length"
-
-// virtual/abstract distinction
-Container
-	.*_child_meta#virtual_method virtual
-
-// Default values
-Stage.read_pixels
-	.width default=-1
-	.height default=-1
-Stage.paint_to_buffer
-    .data type="uint8[]"
-Text
-	.position_to_coords.line_height default=null
-
-// Skipped by g-i for unknown reasons
-LayoutManager
-	.create_child_meta skip=false
-
-// Variadic arguments
-Backend
-	.get_cogl_context skip=false
-Container
-	.child_get skip=false
-	.child_set skip=false
-	.remove skip=false
-Interval
-	.new skip=false
-	.get_interval skip=false
-	.set_final skip=false
-	.set_initial skip=false
-	.set_interval skip=false
-LayoutManager
-	.child_get skip=false
-	.child_set skip=false
-Script
-	.get_objects skip=false
-
-// Skipped upstream for unknown reasons
-Interval.register_progress_func skip=false
-threads_add_idle skip=false
-threads_add_idle_full skip=false
-threads_add_timeout skip=false
-threads_add_timeout_full skip=false
-
-// struct/class confusion
-ActorBox
-	.new skip
-	.from_vertices skip
-Units.from_* skip
-Margin
-	.new skip
-
-// Class methods
-container_class_find_child_property skip
-container_class_list_child_properties skip
-
-// Move symbols
-units_from_* skip
-
-// Struct return values
-color_get_static nullable
-
-// Upstream
-Event
-	.get_position.position out
-
-FrameListenerIface skip
-FrameClock.new skip
-
-// Remove for clutter-2.0
-/////////////////////////
-
-StageView.layout skip
-
-Stage
-	.paint_view.redraw_clip type="Cairo.Region"
-
-Capture
-  .image type="Cairo.ImageSurface"
-
-// *Event should be compact classes derived from Clutter.Event
-Event.type skip=false
-AnyEvent struct=false base_type="Clutter.Event"
-ButtonEvent struct=false base_type="Clutter.Event"
-CrossingEvent struct=false base_type="Clutter.Event"
-DeviceEvent struct=false base_type="Clutter.Event"
-IMEvent struct=false base_type="Clutter.Event"
-KeyEvent struct=false base_type="Clutter.Event"
-MotionEvent struct=false base_type="Clutter.Event"
-PadButtonEvent struct=false base_type="Clutter.Event"
-PadRingEvent struct=false base_type="Clutter.Event"
-PadStripEvent struct=false base_type="Clutter.Event"
-ProximityEvent struct=false base_type="Clutter.Event"
-ScrollEvent struct=false base_type="Clutter.Event"
-TouchEvent struct=false base_type="Clutter.Event"
-TouchpadHoldEvent struct=false base_type="Clutter.Event"
-TouchpadPinchEvent struct=false base_type="Clutter.Event"
-TouchpadSwipeEvent struct=false base_type="Clutter.Event"
-
-// Keysyms used to be CLUTTER_X instead of CLUTTER_KEY_X
-*#constant skip
-COGL skip=false
-CURRENT_TIME skip=false
-FLAVOUR skip=false
-PATH_RELATIVE skip=false
-PRIORITY_REDRAW skip=false
-
-// Clutter devs don't like us creating nested namespaces
-value_* name="value_(.+)" parent="Clutter.Value"
-threads_* name="threads_(.+)" parent="Clutter.Threads"
-threads_add_idle name="add" parent="Clutter.Threads.Idle"
-threads_add_idle_full name="add_full" parent="Clutter.Threads.Idle"
-threads_add_timeout name="add" parent="Clutter.Threads.Timeout"
-threads_add_timeout_full name="add_full" parent="Clutter.Threads.Timeout"
-
-// There is no way to know sealed classes before GLib 2.70
-ColorState sealed
-FrameClock sealed
-TextureContent sealed
-
-// Backwards compatibility
-Color.alloc symbol_type="function"
-
-Color.from_hls name="init_from_hls"
-Color.from_pixel name="init_from_pixel"
-Color.from_string name="init_from_string"
-
-Color.new name="from_rgba" symbol_type="function"
-	.alpha default=0
-	.blue default=0
-	.green default=0
-	.red default=0
-
-Color.init
-	.alpha default=0
-	.blue default=0
-	.green default=0
-	.red default=0
-
-BinAlignment deprecated=false deprecated_since=null
-BinAlignment.* deprecated
-BinAlignment.start deprecated=false
-BinLayout.new.*_align default=Clutter.BinAlignment.START
-
-// Possibly keep
-KEY_* skip=false name="KEY_(.+)" type="uint" parent="Clutter.Key"
-BUTTON_* skip=false name="BUTTON_(.+)" type="uint32" parent="Clutter.Button"
-EVENT_STOP skip=false type="bool"
-EVENT_PROPAGATE skip=false type="bool"
diff --git a/vapi/Clutter-12-custom.vala b/vapi/Clutter-12-custom.vala
deleted file mode 100644
index e5c71c2d8..000000000
--- a/vapi/Clutter-12-custom.vala
+++ /dev/null
@@ -1,53 +0,0 @@
-namespace Clutter {
-	public struct Color {
-		[CCode (cname = "_vala_clutter_color_from_hls")]
-		public static Clutter.Color? from_hls (float hue, float luminance, float saturation) {
-			var color = Clutter.Color.alloc ();
-			color.init_from_hls (hue, luminance, saturation);
-			return color;
-		}
-		[CCode (cname = "_vala_clutter_color_from_pixel")]
-		public static Clutter.Color? from_pixel (uint32 pixel) {
-			var color = Clutter.Color.alloc ();
-			color.init_from_pixel (pixel);
-			return color;
-		}
-		[CCode (cname = "_vala_clutter_color_from_string")]
-		public static Clutter.Color? from_string (string str) {
-			var color = Clutter.Color.alloc ();
-			color.init_from_string (str);
-			return color;
-		}
-		[CCode (cname = "clutter_color_from_string")]
-		public bool parse_string (string str);
-	}
-
-	public interface Container : GLib.Object {
-		public void add (params Clutter.Actor[] actors);
-		[CCode (cname = "clutter_container_class_find_child_property")]
-		public class unowned GLib.ParamSpec find_child_property (string property_name);
-		[CCode (cname = "clutter_container_class_list_child_properties")]
-		public class unowned GLib.ParamSpec[] list_child_properties ();
-	}
-
-	public struct Units {
-		[CCode (cname = "clutter_units_from_cm")]
-		public Units.from_cm (float cm);
-		[CCode (cname = "clutter_units_from_em")]
-		public Units.from_em (float em);
-		[CCode (cname = "clutter_units_from_em_for_font")]
-		public Units.from_em_for_font (string font_name, float em);
-		[CCode (cname = "clutter_units_from_mm")]
-		public Units.from_mm (float mm);
-		[CCode (cname = "clutter_units_from_pixels")]
-		public Units.from_pixels (int px);
-		[CCode (cname = "clutter_units_from_pt")]
-		public Units.from_pt (float pt);
-		[CCode (cname = "clutter_units_from_string")]
-		public Units.from_string (string str);
-	}
-
-	[CCode (cheader_filename = "clutter/clutter.h", has_copy_function = false, has_destroy_function = false, has_type_id = false)]
-	public struct Capture {
-	}
-}
diff --git a/vapi/Clutter-12.metadata b/vapi/Clutter-12.metadata
deleted file mode 100644
index 8195fee1a..000000000
--- a/vapi/Clutter-12.metadata
+++ /dev/null
@@ -1,194 +0,0 @@
-// Non mini-object
-ActorBox struct
-Color struct
-Knot struct
-Margin struct
-PaintVolume struct
-PathNode struct
-Perspective struct
-Units struct
-
-*.ref unowned
-
-Actor
-	.apply_transform.matrix ref
-	.get_abs_allocation_vertices.verts out=false
-Canvas
-	.new symbol_type="constructor"
-Event.type#method name="get_type"
-Image
-	.new symbol_type="constructor"
-
-// ???
-Actor.has_pointer#method name="get_has_pointer"
-ScriptError errordomain
-
-// Not all backing symbols are deprecated
-Actor.pick deprecated=false
-
-// Nullable return values
-Actor
-	.get_parent nullable
-value_get_color nullable
-
-// method/virtual-method/signal don't match
-Actor
-	.event#method name="emit_event"
-	.get_paint_volume#virtual_method name="get_paint_volume_vfunc"
-	.get_paint_volume#virtual_method.volume out
-Container
-	.add_actor skip=false
-	.class_* skip
-Text
-	.activate#method name="try_activate"
-	.insert_text#signal skip
-TextBuffer.get_text#virtual_method name="get_text_with_length"
-
-// virtual/abstract distinction
-Container
-	.*_child_meta#virtual_method virtual
-
-// Default values
-Stage.read_pixels
-	.width default=-1
-	.height default=-1
-Stage.paint_to_buffer
-    .data type="uint8[]"
-Text
-	.position_to_coords.line_height default=null
-
-// Skipped by g-i for unknown reasons
-LayoutManager
-	.create_child_meta skip=false
-
-// Variadic arguments
-Backend
-	.get_cogl_context skip=false
-Container
-	.child_get skip=false
-	.child_set skip=false
-	.remove skip=false
-Interval
-	.new skip=false
-	.get_interval skip=false
-	.set_final skip=false
-	.set_initial skip=false
-	.set_interval skip=false
-LayoutManager
-	.child_get skip=false
-	.child_set skip=false
-Script
-	.get_objects skip=false
-
-// Skipped upstream for unknown reasons
-Interval.register_progress_func skip=false
-threads_add_idle skip=false
-threads_add_idle_full skip=false
-threads_add_timeout skip=false
-threads_add_timeout_full skip=false
-
-// struct/class confusion
-ActorBox
-	.new skip
-	.from_vertices skip
-Units.from_* skip
-Margin
-	.new skip
-
-// Class methods
-container_class_find_child_property skip
-container_class_list_child_properties skip
-
-// Move symbols
-units_from_* skip
-
-// Struct return values
-color_get_static nullable
-
-// Upstream
-Event
-	.get_position.position out
-
-FrameListenerIface skip
-FrameClock.new skip
-
-// Remove for clutter-2.0
-/////////////////////////
-
-StageView.layout skip
-
-Stage
-	.paint_view.redraw_clip type="Cairo.Region"
-
-Capture
-  .image type="Cairo.ImageSurface"
-
-// *Event should be compact classes derived from Clutter.Event
-Event.type skip=false
-AnyEvent struct=false base_type="Clutter.Event"
-ButtonEvent struct=false base_type="Clutter.Event"
-CrossingEvent struct=false base_type="Clutter.Event"
-DeviceEvent struct=false base_type="Clutter.Event"
-IMEvent struct=false base_type="Clutter.Event"
-KeyEvent struct=false base_type="Clutter.Event"
-MotionEvent struct=false base_type="Clutter.Event"
-PadButtonEvent struct=false base_type="Clutter.Event"
-PadRingEvent struct=false base_type="Clutter.Event"
-PadStripEvent struct=false base_type="Clutter.Event"
-ProximityEvent struct=false base_type="Clutter.Event"
-ScrollEvent struct=false base_type="Clutter.Event"
-TouchEvent struct=false base_type="Clutter.Event"
-TouchpadHoldEvent struct=false base_type="Clutter.Event"
-TouchpadPinchEvent struct=false base_type="Clutter.Event"
-TouchpadSwipeEvent struct=false base_type="Clutter.Event"
-
-// Keysyms used to be CLUTTER_X instead of CLUTTER_KEY_X
-*#constant skip
-COGL skip=false
-CURRENT_TIME skip=false
-FLAVOUR skip=false
-PATH_RELATIVE skip=false
-PRIORITY_REDRAW skip=false
-
-// Clutter devs don't like us creating nested namespaces
-value_* name="value_(.+)" parent="Clutter.Value"
-threads_* name="threads_(.+)" parent="Clutter.Threads"
-threads_add_idle name="add" parent="Clutter.Threads.Idle"
-threads_add_idle_full name="add_full" parent="Clutter.Threads.Idle"
-threads_add_timeout name="add" parent="Clutter.Threads.Timeout"
-threads_add_timeout_full name="add_full" parent="Clutter.Threads.Timeout"
-
-// There is no way to know sealed classes before GLib 2.70
-ColorState sealed
-FrameClock sealed
-TextureContent sealed
-
-// Backwards compatibility
-Color.alloc symbol_type="function"
-
-Color.from_hls name="init_from_hls"
-Color.from_pixel name="init_from_pixel"
-Color.from_string name="init_from_string"
-
-Color.new name="from_rgba" symbol_type="function"
-	.alpha default=0
-	.blue default=0
-	.green default=0
-	.red default=0
-
-Color.init
-	.alpha default=0
-	.blue default=0
-	.green default=0
-	.red default=0
-
-BinAlignment deprecated=false deprecated_since=null
-BinAlignment.* deprecated
-BinAlignment.start deprecated=false
-BinLayout.new.*_align default=Clutter.BinAlignment.START
-
-// Possibly keep
-KEY_* skip=false name="KEY_(.+)" type="uint" parent="Clutter.Key"
-BUTTON_* skip=false name="BUTTON_(.+)" type="uint32" parent="Clutter.Button"
-EVENT_STOP skip=false type="bool"
-EVENT_PROPAGATE skip=false type="bool"
diff --git a/vapi/Cogl-10-custom.vala b/vapi/Cogl-10-custom.vala
deleted file mode 100644
index f6034717c..000000000
--- a/vapi/Cogl-10-custom.vala
+++ /dev/null
@@ -1,161 +0,0 @@
-namespace Cogl {
-	public struct Color {
-		[Version (since = "1.4")]
-		[CCode (cname="cogl_color_init_from_4f")]
-		public Color.from_4f (float red, float green, float blue, float alpha);
-		[Version (since = "1.4")]
-		[CCode (cname="cogl_color_init_from_4fv")]
-		public Color.from_4fv (float color_array);
-		[Version (since = "1.4")]
-		[CCode (cname="cogl_color_init_from_4ub")]
-		public Color.from_4ub (uint8 red, uint8 green, uint8 blue, uint8 alpha);
-		[Version (since = "1.16")]
-		[CCode (cname="cogl_color_init_from_hsl")]
-		public Color.from_hsl (float hue, float saturation, float luminance);
-	}
-
-	[Compact]
-	[CCode (cname = "CoglHandle", cheader_filename = "cogl/cogl.h", type_id = "cogl_handle_get_gtype ()", ref_function = "cogl_object_ref", unref_function = "cogl_object_unref")]
-	public class Shader : Cogl.Handle {
-	}
-
-	[CCode (cheader_filename = "cogl/cogl.h", type_id = "cogl_primitive_get_gtype ()")]
-	public class Primitive : Cogl.Object {
-		[CCode (has_construct_function = false)]
-		protected Primitive ();
-		[Version (since = "1.10")]
-		public Cogl.Primitive copy ();
-		[Version (since = "1.16")]
-		public void draw (Cogl.Framebuffer framebuffer, Cogl.Pipeline pipeline);
-		public int get_first_vertex ();
-		public Cogl.VerticesMode get_mode ();
-		[Version (since = "1.8")]
-		public int get_n_vertices ();
-		[CCode (has_construct_function = false)]
-		[Version (since = "1.6")]
-		public Primitive.p2 (Cogl.Context context, Cogl.VerticesMode mode, [CCode (array_length_cname = "n_vertices", array_length_pos = 2.5)] Cogl.VertexP2[] data);
-		[CCode (has_construct_function = false)]
-		[Version (since = "1.6")]
-		public Primitive.p2c4 (Cogl.Context context, Cogl.VerticesMode mode, [CCode (array_length_cname = "n_vertices", array_length_pos = 2.5)] Cogl.VertexP2C4[] data);
-		[CCode (has_construct_function = false)]
-		[Version (since = "1.6")]
-		public Primitive.p2t2 (Cogl.Context context, Cogl.VerticesMode mode, [CCode (array_length_cname = "n_vertices", array_length_pos = 2.5)] Cogl.VertexP2T2[] data);
-		[CCode (has_construct_function = false)]
-		[Version (since = "1.6")]
-		public Primitive.p2t2c4 (Cogl.Context context, Cogl.VerticesMode mode, [CCode (array_length_cname = "n_vertices", array_length_pos = 2.5)] Cogl.VertexP2T2C4[] data);
-		[CCode (has_construct_function = false)]
-		[Version (since = "1.6")]
-		public Primitive.p3 (Cogl.Context context, Cogl.VerticesMode mode, [CCode (array_length_cname = "n_vertices", array_length_pos = 2.5)] Cogl.VertexP3[] data);
-		[CCode (has_construct_function = false)]
-		[Version (since = "1.6")]
-		public Primitive.p3c4 (Cogl.Context context, Cogl.VerticesMode mode, [CCode (array_length_cname = "n_vertices", array_length_pos = 2.5)] Cogl.VertexP3C4[] data);
-		[CCode (has_construct_function = false)]
-		[Version (since = "1.6")]
-		public Primitive.p3t2 (Cogl.Context context, Cogl.VerticesMode mode, [CCode (array_length_cname = "n_vertices", array_length_pos = 2.5)] Cogl.VertexP3T2[] data);
-		[CCode (has_construct_function = false)]
-		[Version (since = "1.6")]
-		public Primitive.p3t2c4 (Cogl.Context context, Cogl.VerticesMode mode, [CCode (array_length_cname = "n_vertices", array_length_pos = 2.5)] Cogl.VertexP3T2C4[] data);
-		public void set_first_vertex (int first_vertex);
-		public void set_mode (Cogl.VerticesMode mode);
-		[Version (since = "1.8")]
-		public void set_n_vertices (int n_vertices);
-	}
-
-	[Compact]
-	[CCode (cname = "CoglHandle", cheader_filename = "cogl/cogl.h", type_id = "cogl_handle_get_gtype ()", ref_function = "cogl_object_ref", unref_function = "cogl_object_unref")]
-	public class Program : Cogl.Handle {
-	}
-
-	[Compact]
-	[CCode (cheader_filename = "cogl/cogl.h", type_id = "cogl_handle_get_gtype ()", ref_function = "cogl_object_ref", unref_function = "cogl_object_unref")]
-	public class Handle {
-		[CCode (cheader_filename = "cogl/cogl.h", cname="cogl_is_material")]
-		[Version (deprecated = true, deprecated_since = "1.16")]
-		public bool is_material ();
-		[CCode (cheader_filename = "cogl/cogl.h", cname="cogl_is_program")]
-		[Version (deprecated = true, deprecated_since = "1.16")]
-		public bool is_program (Cogl.Handle handle);
-		[CCode (cheader_filename = "cogl/cogl.h", cname="cogl_is_shader")]
-		[Version (deprecated = true, deprecated_since = "1.16")]
-		public bool is_shader ();
-		[CCode (cheader_filename = "cogl/cogl.h", cname="cogl_is_texture")]
-		public bool is_texture ();
-	}
-
-	[CCode (cheader_filename = "cogl/cogl.h", has_type_id = false)]
-	[Version (since = "1.6")]
-	public struct VertexP2 {
-		public float x;
-		public float y;
-	}
-	[CCode (cheader_filename = "cogl/cogl.h", has_type_id = false)]
-	[Version (since = "1.6")]
-	public struct VertexP2C4 {
-		public float x;
-		public float y;
-		public uint8 r;
-		public uint8 g;
-		public uint8 b;
-		public uint8 a;
-	}
-	[CCode (cheader_filename = "cogl/cogl.h", has_type_id = false)]
-	[Version (since = "1.6")]
-	public struct VertexP2T2 {
-		public float x;
-		public float y;
-		public float s;
-		public float t;
-	}
-	[CCode (cheader_filename = "cogl/cogl.h", has_type_id = false)]
-	[Version (since = "1.6")]
-	public struct VertexP2T2C4 {
-		public float x;
-		public float y;
-		public float s;
-		public float t;
-		public uint8 r;
-		public uint8 g;
-		public uint8 b;
-		public uint8 a;
-	}
-	[CCode (cheader_filename = "cogl/cogl.h", has_type_id = false)]
-	[Version (since = "1.6")]
-	public struct VertexP3 {
-		public float x;
-		public float y;
-		public float z;
-	}
-	[CCode (cheader_filename = "cogl/cogl.h", has_type_id = false)]
-	[Version (since = "1.6")]
-	public struct VertexP3C4 {
-		public float x;
-		public float y;
-		public float z;
-		public uint8 r;
-		public uint8 g;
-		public uint8 b;
-		public uint8 a;
-	}
-	[CCode (cheader_filename = "cogl/cogl.h", has_type_id = false)]
-	[Version (since = "1.6")]
-	public struct VertexP3T2 {
-		public float x;
-		public float y;
-		public float z;
-		public float s;
-		public float t;
-	}
-	[CCode (cheader_filename = "cogl/cogl.h", has_type_id = false)]
-	[Version (since = "1.6")]
-	public struct VertexP3T2C4 {
-		public float x;
-		public float y;
-		public float z;
-		public float s;
-		public float t;
-		public uint8 r;
-		public uint8 g;
-		public uint8 b;
-		public uint8 a;
-	}
-}
diff --git a/vapi/Cogl-10.metadata b/vapi/Cogl-10.metadata
deleted file mode 100644
index 06197be70..000000000
--- a/vapi/Cogl-10.metadata
+++ /dev/null
@@ -1,68 +0,0 @@
-* cheader_filename="cogl/cogl.h"
-
-Color struct
-
-_ColorSizeCheck skip
-_TextureVertexSizeCheck skip
-
-Color.equal.v1 type="Cogl.Color"
-Color.equal.v2 type="Cogl.Color"
-color_equal skip
-
-Context.free_timestamp_query.query owned
-
-texture_new_* name="texture_new_(.+)" parent="Cogl.Texture"
-Texture
-  .get_data.data type="uint8[]"
-  .new_from_data.data type="uint8[]"
-  .set_data.data type="uint8[]"
-  .set_region.data type="uint8[]"
-
-Texture2D
-  .new_from_data skip=false
-  .new_from_data.data array=true
-
-shader_* name="shader_(.+)" parent="Cogl.Shader"
-shader_* symbol_type="method" instance_idx=0
-
-program_* name="program_(.+)" parent="Cogl.Program"
-program_attach_shader symbol_type="method" instance_idx=0
-program_get_uniform_location symbol_type="method" instance_idx=0
-program_link symbol_type="method" instance_idx=0
-program_set_uniform_1f symbol_type="method" instance_idx=0
-program_set_uniform_1i symbol_type="method" instance_idx=0
-program_set_uniform_float symbol_type="method" instance_idx=0
-program_set_uniform_int symbol_type="method" instance_idx=0
-program_set_uniform_matrix symbol_type="method" instance_idx=0
-
-is_bitmap parent="Cogl.Object" symbol_type="method" instance_idx=0
-is_program parent="Cogl.Handle"
-is_shader parent="Cogl.Handle"
-is_texture parent="Cogl.Object" symbol_type="method" instance_idx=0
-is_context parent="Cogl.Object" symbol_type="method" instance_idx=0
-is_framebuffer parent="Cogl.Object" symbol_type="method" instance_idx=0
-is_frame_info parent="Cogl.Object" symbol_type="method" instance_idx=0
-is_pipeline parent="Cogl.Object" symbol_type="method" instance_idx=0
-is_texture_2d parent="Cogl.Object" symbol_type="method" instance_idx=0
-is_texture_2d_sliced parent="Cogl.Object" symbol_type="method" instance_idx=0
-
-create_program type="unowned Cogl.Program" name="create" parent="Cogl.Program"
-create_shader type="unowned Cogl.Shader" name="create" parent="Cogl.Shader"
-
-foreach_feature parent="Cogl.Context" symbol_type="method" instance_idx=0
-get_graphics_reset_status parent="Cogl.Context" symbol_type="method" instance_idx=0
-has_feature parent="Cogl.Context" symbol_type="method" instance_idx=0
-
-Bitmap.error_quark parent="Cogl.BitmapError" name="quark"
-Texture.error_quark parent="Cogl.TextureError" name="quark"
-texture_error_quark skip
-Scanout.error_quark parent="Cogl.ScanoutError" name="quark"
-scanout_error_quark skip
-
-BitmapError errordomain
-BlendStringError errordomain
-RendererError errordomain
-SystemError errordomain
-TextureError errordomain
-FramebufferError errordomain
-ScanoutError errordomain
diff --git a/vapi/Cogl-11-custom.vala b/vapi/Cogl-11-custom.vala
deleted file mode 100644
index f6034717c..000000000
--- a/vapi/Cogl-11-custom.vala
+++ /dev/null
@@ -1,161 +0,0 @@
-namespace Cogl {
-	public struct Color {
-		[Version (since = "1.4")]
-		[CCode (cname="cogl_color_init_from_4f")]
-		public Color.from_4f (float red, float green, float blue, float alpha);
-		[Version (since = "1.4")]
-		[CCode (cname="cogl_color_init_from_4fv")]
-		public Color.from_4fv (float color_array);
-		[Version (since = "1.4")]
-		[CCode (cname="cogl_color_init_from_4ub")]
-		public Color.from_4ub (uint8 red, uint8 green, uint8 blue, uint8 alpha);
-		[Version (since = "1.16")]
-		[CCode (cname="cogl_color_init_from_hsl")]
-		public Color.from_hsl (float hue, float saturation, float luminance);
-	}
-
-	[Compact]
-	[CCode (cname = "CoglHandle", cheader_filename = "cogl/cogl.h", type_id = "cogl_handle_get_gtype ()", ref_function = "cogl_object_ref", unref_function = "cogl_object_unref")]
-	public class Shader : Cogl.Handle {
-	}
-
-	[CCode (cheader_filename = "cogl/cogl.h", type_id = "cogl_primitive_get_gtype ()")]
-	public class Primitive : Cogl.Object {
-		[CCode (has_construct_function = false)]
-		protected Primitive ();
-		[Version (since = "1.10")]
-		public Cogl.Primitive copy ();
-		[Version (since = "1.16")]
-		public void draw (Cogl.Framebuffer framebuffer, Cogl.Pipeline pipeline);
-		public int get_first_vertex ();
-		public Cogl.VerticesMode get_mode ();
-		[Version (since = "1.8")]
-		public int get_n_vertices ();
-		[CCode (has_construct_function = false)]
-		[Version (since = "1.6")]
-		public Primitive.p2 (Cogl.Context context, Cogl.VerticesMode mode, [CCode (array_length_cname = "n_vertices", array_length_pos = 2.5)] Cogl.VertexP2[] data);
-		[CCode (has_construct_function = false)]
-		[Version (since = "1.6")]
-		public Primitive.p2c4 (Cogl.Context context, Cogl.VerticesMode mode, [CCode (array_length_cname = "n_vertices", array_length_pos = 2.5)] Cogl.VertexP2C4[] data);
-		[CCode (has_construct_function = false)]
-		[Version (since = "1.6")]
-		public Primitive.p2t2 (Cogl.Context context, Cogl.VerticesMode mode, [CCode (array_length_cname = "n_vertices", array_length_pos = 2.5)] Cogl.VertexP2T2[] data);
-		[CCode (has_construct_function = false)]
-		[Version (since = "1.6")]
-		public Primitive.p2t2c4 (Cogl.Context context, Cogl.VerticesMode mode, [CCode (array_length_cname = "n_vertices", array_length_pos = 2.5)] Cogl.VertexP2T2C4[] data);
-		[CCode (has_construct_function = false)]
-		[Version (since = "1.6")]
-		public Primitive.p3 (Cogl.Context context, Cogl.VerticesMode mode, [CCode (array_length_cname = "n_vertices", array_length_pos = 2.5)] Cogl.VertexP3[] data);
-		[CCode (has_construct_function = false)]
-		[Version (since = "1.6")]
-		public Primitive.p3c4 (Cogl.Context context, Cogl.VerticesMode mode, [CCode (array_length_cname = "n_vertices", array_length_pos = 2.5)] Cogl.VertexP3C4[] data);
-		[CCode (has_construct_function = false)]
-		[Version (since = "1.6")]
-		public Primitive.p3t2 (Cogl.Context context, Cogl.VerticesMode mode, [CCode (array_length_cname = "n_vertices", array_length_pos = 2.5)] Cogl.VertexP3T2[] data);
-		[CCode (has_construct_function = false)]
-		[Version (since = "1.6")]
-		public Primitive.p3t2c4 (Cogl.Context context, Cogl.VerticesMode mode, [CCode (array_length_cname = "n_vertices", array_length_pos = 2.5)] Cogl.VertexP3T2C4[] data);
-		public void set_first_vertex (int first_vertex);
-		public void set_mode (Cogl.VerticesMode mode);
-		[Version (since = "1.8")]
-		public void set_n_vertices (int n_vertices);
-	}
-
-	[Compact]
-	[CCode (cname = "CoglHandle", cheader_filename = "cogl/cogl.h", type_id = "cogl_handle_get_gtype ()", ref_function = "cogl_object_ref", unref_function = "cogl_object_unref")]
-	public class Program : Cogl.Handle {
-	}
-
-	[Compact]
-	[CCode (cheader_filename = "cogl/cogl.h", type_id = "cogl_handle_get_gtype ()", ref_function = "cogl_object_ref", unref_function = "cogl_object_unref")]
-	public class Handle {
-		[CCode (cheader_filename = "cogl/cogl.h", cname="cogl_is_material")]
-		[Version (deprecated = true, deprecated_since = "1.16")]
-		public bool is_material ();
-		[CCode (cheader_filename = "cogl/cogl.h", cname="cogl_is_program")]
-		[Version (deprecated = true, deprecated_since = "1.16")]
-		public bool is_program (Cogl.Handle handle);
-		[CCode (cheader_filename = "cogl/cogl.h", cname="cogl_is_shader")]
-		[Version (deprecated = true, deprecated_since = "1.16")]
-		public bool is_shader ();
-		[CCode (cheader_filename = "cogl/cogl.h", cname="cogl_is_texture")]
-		public bool is_texture ();
-	}
-
-	[CCode (cheader_filename = "cogl/cogl.h", has_type_id = false)]
-	[Version (since = "1.6")]
-	public struct VertexP2 {
-		public float x;
-		public float y;
-	}
-	[CCode (cheader_filename = "cogl/cogl.h", has_type_id = false)]
-	[Version (since = "1.6")]
-	public struct VertexP2C4 {
-		public float x;
-		public float y;
-		public uint8 r;
-		public uint8 g;
-		public uint8 b;
-		public uint8 a;
-	}
-	[CCode (cheader_filename = "cogl/cogl.h", has_type_id = false)]
-	[Version (since = "1.6")]
-	public struct VertexP2T2 {
-		public float x;
-		public float y;
-		public float s;
-		public float t;
-	}
-	[CCode (cheader_filename = "cogl/cogl.h", has_type_id = false)]
-	[Version (since = "1.6")]
-	public struct VertexP2T2C4 {
-		public float x;
-		public float y;
-		public float s;
-		public float t;
-		public uint8 r;
-		public uint8 g;
-		public uint8 b;
-		public uint8 a;
-	}
-	[CCode (cheader_filename = "cogl/cogl.h", has_type_id = false)]
-	[Version (since = "1.6")]
-	public struct VertexP3 {
-		public float x;
-		public float y;
-		public float z;
-	}
-	[CCode (cheader_filename = "cogl/cogl.h", has_type_id = false)]
-	[Version (since = "1.6")]
-	public struct VertexP3C4 {
-		public float x;
-		public float y;
-		public float z;
-		public uint8 r;
-		public uint8 g;
-		public uint8 b;
-		public uint8 a;
-	}
-	[CCode (cheader_filename = "cogl/cogl.h", has_type_id = false)]
-	[Version (since = "1.6")]
-	public struct VertexP3T2 {
-		public float x;
-		public float y;
-		public float z;
-		public float s;
-		public float t;
-	}
-	[CCode (cheader_filename = "cogl/cogl.h", has_type_id = false)]
-	[Version (since = "1.6")]
-	public struct VertexP3T2C4 {
-		public float x;
-		public float y;
-		public float z;
-		public float s;
-		public float t;
-		public uint8 r;
-		public uint8 g;
-		public uint8 b;
-		public uint8 a;
-	}
-}
diff --git a/vapi/Cogl-11.metadata b/vapi/Cogl-11.metadata
deleted file mode 100644
index 81480a3a2..000000000
--- a/vapi/Cogl-11.metadata
+++ /dev/null
@@ -1,69 +0,0 @@
-* cheader_filename="cogl/cogl.h"
-
-Color struct
-
-_ColorSizeCheck skip
-_TextureVertexSizeCheck skip
-
-Color.equal.v1 type="Cogl.Color"
-Color.equal.v2 type="Cogl.Color"
-color_equal skip
-
-Context.free_timestamp_query.query owned
-
-Texture
-  .get_data.data type="uint8[]"
-  .set_data.data type="uint8[]"
-  .set_region.data type="uint8[]"
-
-Texture2D
-  .new_from_data skip=false
-  .new_from_data.data array=true
-
-shader_* name="shader_(.+)" parent="Cogl.Shader"
-shader_* symbol_type="method" instance_idx=0
-
-program_* name="program_(.+)" parent="Cogl.Program"
-program_attach_shader symbol_type="method" instance_idx=0
-program_get_uniform_location symbol_type="method" instance_idx=0
-program_link symbol_type="method" instance_idx=0
-program_set_uniform_1f symbol_type="method" instance_idx=0
-program_set_uniform_1i symbol_type="method" instance_idx=0
-program_set_uniform_float symbol_type="method" instance_idx=0
-program_set_uniform_int symbol_type="method" instance_idx=0
-program_set_uniform_matrix symbol_type="method" instance_idx=0
-
-is_bitmap parent="Cogl.Object" symbol_type="method" instance_idx=0
-is_program parent="Cogl.Handle"
-is_shader parent="Cogl.Handle"
-is_texture parent="Cogl.Object" symbol_type="method" instance_idx=0
-is_context parent="Cogl.Object" symbol_type="method" instance_idx=0
-is_framebuffer parent="Cogl.Object" symbol_type="method" instance_idx=0
-is_frame_info parent="Cogl.Object" symbol_type="method" instance_idx=0
-is_pipeline parent="Cogl.Object" symbol_type="method" instance_idx=0
-is_texture_2d parent="Cogl.Object" symbol_type="method" instance_idx=0
-is_texture_2d_sliced parent="Cogl.Object" symbol_type="method" instance_idx=0
-is_snippet parent="Cogl.Object" symbol_type="method" instance_idx=0
-
-create_program type="unowned Cogl.Program" name="create" parent="Cogl.Program"
-create_shader type="unowned Cogl.Shader" name="create" parent="Cogl.Shader"
-
-foreach_feature parent="Cogl.Context" symbol_type="method" instance_idx=0
-get_graphics_reset_status parent="Cogl.Context" symbol_type="method" instance_idx=0
-has_feature parent="Cogl.Context" symbol_type="method" instance_idx=0
-
-Bitmap.error_quark parent="Cogl.BitmapError" name="quark"
-Texture.error_quark parent="Cogl.TextureError" name="quark"
-texture_error_quark skip
-Scanout.error_quark parent="Cogl.ScanoutError" name="quark"
-scanout_error_quark skip
-
-BitmapError errordomain
-BlendStringError errordomain
-RendererError errordomain
-SystemError errordomain
-TextureError errordomain
-FramebufferError errordomain
-ScanoutError errordomain
-
-Offscreen sealed
diff --git a/vapi/Cogl-12-custom.vala b/vapi/Cogl-12-custom.vala
deleted file mode 100644
index f6034717c..000000000
--- a/vapi/Cogl-12-custom.vala
+++ /dev/null
@@ -1,161 +0,0 @@
-namespace Cogl {
-	public struct Color {
-		[Version (since = "1.4")]
-		[CCode (cname="cogl_color_init_from_4f")]
-		public Color.from_4f (float red, float green, float blue, float alpha);
-		[Version (since = "1.4")]
-		[CCode (cname="cogl_color_init_from_4fv")]
-		public Color.from_4fv (float color_array);
-		[Version (since = "1.4")]
-		[CCode (cname="cogl_color_init_from_4ub")]
-		public Color.from_4ub (uint8 red, uint8 green, uint8 blue, uint8 alpha);
-		[Version (since = "1.16")]
-		[CCode (cname="cogl_color_init_from_hsl")]
-		public Color.from_hsl (float hue, float saturation, float luminance);
-	}
-
-	[Compact]
-	[CCode (cname = "CoglHandle", cheader_filename = "cogl/cogl.h", type_id = "cogl_handle_get_gtype ()", ref_function = "cogl_object_ref", unref_function = "cogl_object_unref")]
-	public class Shader : Cogl.Handle {
-	}
-
-	[CCode (cheader_filename = "cogl/cogl.h", type_id = "cogl_primitive_get_gtype ()")]
-	public class Primitive : Cogl.Object {
-		[CCode (has_construct_function = false)]
-		protected Primitive ();
-		[Version (since = "1.10")]
-		public Cogl.Primitive copy ();
-		[Version (since = "1.16")]
-		public void draw (Cogl.Framebuffer framebuffer, Cogl.Pipeline pipeline);
-		public int get_first_vertex ();
-		public Cogl.VerticesMode get_mode ();
-		[Version (since = "1.8")]
-		public int get_n_vertices ();
-		[CCode (has_construct_function = false)]
-		[Version (since = "1.6")]
-		public Primitive.p2 (Cogl.Context context, Cogl.VerticesMode mode, [CCode (array_length_cname = "n_vertices", array_length_pos = 2.5)] Cogl.VertexP2[] data);
-		[CCode (has_construct_function = false)]
-		[Version (since = "1.6")]
-		public Primitive.p2c4 (Cogl.Context context, Cogl.VerticesMode mode, [CCode (array_length_cname = "n_vertices", array_length_pos = 2.5)] Cogl.VertexP2C4[] data);
-		[CCode (has_construct_function = false)]
-		[Version (since = "1.6")]
-		public Primitive.p2t2 (Cogl.Context context, Cogl.VerticesMode mode, [CCode (array_length_cname = "n_vertices", array_length_pos = 2.5)] Cogl.VertexP2T2[] data);
-		[CCode (has_construct_function = false)]
-		[Version (since = "1.6")]
-		public Primitive.p2t2c4 (Cogl.Context context, Cogl.VerticesMode mode, [CCode (array_length_cname = "n_vertices", array_length_pos = 2.5)] Cogl.VertexP2T2C4[] data);
-		[CCode (has_construct_function = false)]
-		[Version (since = "1.6")]
-		public Primitive.p3 (Cogl.Context context, Cogl.VerticesMode mode, [CCode (array_length_cname = "n_vertices", array_length_pos = 2.5)] Cogl.VertexP3[] data);
-		[CCode (has_construct_function = false)]
-		[Version (since = "1.6")]
-		public Primitive.p3c4 (Cogl.Context context, Cogl.VerticesMode mode, [CCode (array_length_cname = "n_vertices", array_length_pos = 2.5)] Cogl.VertexP3C4[] data);
-		[CCode (has_construct_function = false)]
-		[Version (since = "1.6")]
-		public Primitive.p3t2 (Cogl.Context context, Cogl.VerticesMode mode, [CCode (array_length_cname = "n_vertices", array_length_pos = 2.5)] Cogl.VertexP3T2[] data);
-		[CCode (has_construct_function = false)]
-		[Version (since = "1.6")]
-		public Primitive.p3t2c4 (Cogl.Context context, Cogl.VerticesMode mode, [CCode (array_length_cname = "n_vertices", array_length_pos = 2.5)] Cogl.VertexP3T2C4[] data);
-		public void set_first_vertex (int first_vertex);
-		public void set_mode (Cogl.VerticesMode mode);
-		[Version (since = "1.8")]
-		public void set_n_vertices (int n_vertices);
-	}
-
-	[Compact]
-	[CCode (cname = "CoglHandle", cheader_filename = "cogl/cogl.h", type_id = "cogl_handle_get_gtype ()", ref_function = "cogl_object_ref", unref_function = "cogl_object_unref")]
-	public class Program : Cogl.Handle {
-	}
-
-	[Compact]
-	[CCode (cheader_filename = "cogl/cogl.h", type_id = "cogl_handle_get_gtype ()", ref_function = "cogl_object_ref", unref_function = "cogl_object_unref")]
-	public class Handle {
-		[CCode (cheader_filename = "cogl/cogl.h", cname="cogl_is_material")]
-		[Version (deprecated = true, deprecated_since = "1.16")]
-		public bool is_material ();
-		[CCode (cheader_filename = "cogl/cogl.h", cname="cogl_is_program")]
-		[Version (deprecated = true, deprecated_since = "1.16")]
-		public bool is_program (Cogl.Handle handle);
-		[CCode (cheader_filename = "cogl/cogl.h", cname="cogl_is_shader")]
-		[Version (deprecated = true, deprecated_since = "1.16")]
-		public bool is_shader ();
-		[CCode (cheader_filename = "cogl/cogl.h", cname="cogl_is_texture")]
-		public bool is_texture ();
-	}
-
-	[CCode (cheader_filename = "cogl/cogl.h", has_type_id = false)]
-	[Version (since = "1.6")]
-	public struct VertexP2 {
-		public float x;
-		public float y;
-	}
-	[CCode (cheader_filename = "cogl/cogl.h", has_type_id = false)]
-	[Version (since = "1.6")]
-	public struct VertexP2C4 {
-		public float x;
-		public float y;
-		public uint8 r;
-		public uint8 g;
-		public uint8 b;
-		public uint8 a;
-	}
-	[CCode (cheader_filename = "cogl/cogl.h", has_type_id = false)]
-	[Version (since = "1.6")]
-	public struct VertexP2T2 {
-		public float x;
-		public float y;
-		public float s;
-		public float t;
-	}
-	[CCode (cheader_filename = "cogl/cogl.h", has_type_id = false)]
-	[Version (since = "1.6")]
-	public struct VertexP2T2C4 {
-		public float x;
-		public float y;
-		public float s;
-		public float t;
-		public uint8 r;
-		public uint8 g;
-		public uint8 b;
-		public uint8 a;
-	}
-	[CCode (cheader_filename = "cogl/cogl.h", has_type_id = false)]
-	[Version (since = "1.6")]
-	public struct VertexP3 {
-		public float x;
-		public float y;
-		public float z;
-	}
-	[CCode (cheader_filename = "cogl/cogl.h", has_type_id = false)]
-	[Version (since = "1.6")]
-	public struct VertexP3C4 {
-		public float x;
-		public float y;
-		public float z;
-		public uint8 r;
-		public uint8 g;
-		public uint8 b;
-		public uint8 a;
-	}
-	[CCode (cheader_filename = "cogl/cogl.h", has_type_id = false)]
-	[Version (since = "1.6")]
-	public struct VertexP3T2 {
-		public float x;
-		public float y;
-		public float z;
-		public float s;
-		public float t;
-	}
-	[CCode (cheader_filename = "cogl/cogl.h", has_type_id = false)]
-	[Version (since = "1.6")]
-	public struct VertexP3T2C4 {
-		public float x;
-		public float y;
-		public float z;
-		public float s;
-		public float t;
-		public uint8 r;
-		public uint8 g;
-		public uint8 b;
-		public uint8 a;
-	}
-}
diff --git a/vapi/Cogl-12.metadata b/vapi/Cogl-12.metadata
deleted file mode 100644
index 828aa5b5e..000000000
--- a/vapi/Cogl-12.metadata
+++ /dev/null
@@ -1,73 +0,0 @@
-* cheader_filename="cogl/cogl.h"
-
-Color struct
-
-_ColorSizeCheck skip
-_TextureVertexSizeCheck skip
-
-Color.equal.v1 type="Cogl.Color"
-Color.equal.v2 type="Cogl.Color"
-color_equal skip
-
-Context.free_timestamp_query.query owned
-
-Texture
-  .get_data.data type="uint8[]"
-  .set_data.data type="uint8[]"
-  .set_region.data type="uint8[]"
-
-Texture2D
-  .new_from_data skip=false
-  .new_from_data.data array=true
-
-shader_* name="shader_(.+)" parent="Cogl.Shader"
-shader_* symbol_type="method" instance_idx=0
-
-Pipeline.get_layer_filters
-  .min_filter out
-  .mag_filter out
-
-program_* name="program_(.+)" parent="Cogl.Program"
-program_attach_shader symbol_type="method" instance_idx=0
-program_get_uniform_location symbol_type="method" instance_idx=0
-program_link symbol_type="method" instance_idx=0
-program_set_uniform_1f symbol_type="method" instance_idx=0
-program_set_uniform_1i symbol_type="method" instance_idx=0
-program_set_uniform_float symbol_type="method" instance_idx=0
-program_set_uniform_int symbol_type="method" instance_idx=0
-program_set_uniform_matrix symbol_type="method" instance_idx=0
-
-is_bitmap parent="Cogl.Object" symbol_type="method" instance_idx=0
-is_program parent="Cogl.Handle"
-is_shader parent="Cogl.Handle"
-is_texture parent="Cogl.Object" symbol_type="method" instance_idx=0
-is_context parent="Cogl.Object" symbol_type="method" instance_idx=0
-is_framebuffer parent="Cogl.Object" symbol_type="method" instance_idx=0
-is_frame_info parent="Cogl.Object" symbol_type="method" instance_idx=0
-is_pipeline parent="Cogl.Object" symbol_type="method" instance_idx=0
-is_texture_2d parent="Cogl.Object" symbol_type="method" instance_idx=0
-is_texture_2d_sliced parent="Cogl.Object" symbol_type="method" instance_idx=0
-is_snippet parent="Cogl.Object" symbol_type="method" instance_idx=0
-
-create_program type="unowned Cogl.Program" name="create" parent="Cogl.Program"
-create_shader type="unowned Cogl.Shader" name="create" parent="Cogl.Shader"
-
-foreach_feature parent="Cogl.Context" symbol_type="method" instance_idx=0
-get_graphics_reset_status parent="Cogl.Context" symbol_type="method" instance_idx=0
-has_feature parent="Cogl.Context" symbol_type="method" instance_idx=0
-
-Bitmap.error_quark parent="Cogl.BitmapError" name="quark"
-Texture.error_quark parent="Cogl.TextureError" name="quark"
-texture_error_quark skip
-Scanout.error_quark parent="Cogl.ScanoutError" name="quark"
-scanout_error_quark skip
-
-BitmapError errordomain
-BlendStringError errordomain
-RendererError errordomain
-SystemError errordomain
-TextureError errordomain
-FramebufferError errordomain
-ScanoutError errordomain
-
-Offscreen sealed
diff --git a/vapi/Meta-10.metadata b/vapi/Meta-10.metadata
deleted file mode 100644
index e44384139..000000000
--- a/vapi/Meta-10.metadata
+++ /dev/null
@@ -1,189 +0,0 @@
-* skip=false
-*.* skip=false
-* cheader_filename="meta/main.h"
-
-Backend cheader_filename="meta/meta-backend.h"
-Backend.gpu_added skip
-get_backend parent="Meta.Backend" cheader_filename="meta/meta-backend.h"
-Background cheader_filename="meta/meta-background.h"
-Background.set_file.file nullable
-BackgroundContent.new symbol_type="constructor"
-BackgroundActor cheader_filename="meta/meta-background-actor.h"
-BackgroundContent cheader_filename="meta/meta-background-content.h"
-BackgroundGroup cheader_filename="meta/meta-background-group.h"
-BackgroundImage cheader_filename="meta/meta-background-image.h"
-BackgroundImageCache cheader_filename="meta/meta-background-image.h"
-Barrier cheader_filename="meta/barrier.h"
-BarrierDirection cheader_filename="meta/barrier.h"
-BarrierEvent cheader_filename="meta/barrier.h"
-ButtonFunction cheader_filename="meta/common.h"
-ButtonLayout cheader_filename="meta/common.h"
-Compositor cheader_filename="meta/compositor.h"
-Compositor.sync_stack.stack type_arguments="Meta.Window"
-get_feedback_group_for_display parent="Meta.Display" symbol_type="method" name="get_feedback_group" instance_idx=0 cheader_filename="meta/compositor-mutter.h"
-get_stage_for_display parent="Meta.Display" symbol_type="method" name="get_stage" instance_idx=0 cheader_filename="meta/compositor-mutter.h"
-get_top_window_group_for_display parent="Meta.Display" symbol_type="method" name="get_top_window_group" instance_idx=0 cheader_filename="meta/compositor-mutter.h"
-get_window_group_for_display parent="Meta.Display" symbol_type="method" name="get_window_group" instance_idx=0 cheader_filename="meta/compositor-mutter.h"
-disable_unredirect_for_display parent="Meta.Display" symbol_type="method" name="disable_unredirect" instance_idx=0 cheader_filename="meta/compositor-mutter.h"
-enable_unredirect_for_display parent="Meta.Display" symbol_type="method" name="enable_unredirect" instance_idx=0 cheader_filename="meta/compositor-mutter.h"
-
-get_window_actors parent="Meta.Display" symbol_type="method" instance_idx=0 cheader_filename="meta/compositor-mutter.h" type_arguments="Meta.WindowActor"
-focus_stage_window parent="Meta.Display" symbol_type="method" instance_idx=0 cheader_filename="meta/compositor-mutter.h"
-
-CompEffect cheader_filename="meta/compositor.h"
-CloseDialog cheader_filename="meta/meta-close-dialog.h"
-CloseDialogResponse cheader_filename="meta/meta-close-dialog.h"
-Context cheader_filename="meta/meta-context.h"
-Cursor cheader_filename="meta/common.h"
-CursorTracker cheader_filename="meta/meta-cursor-tracker.h"
-CursorTracker.get_for_display parent="Meta.Display" symbol_type="method" instance_idx=0 name="get_cursor_tracker"
-CursorTracker.get_pointer.mods out
-DebugTopic cheader_filename="meta/util.h"
-Direction cheader_filename="meta/common.h"
-Display cheader_filename="meta/display.h"
-DisplayCorner cheader_filename="meta/display.h"
-DisplayDirection cheader_filename="meta/display.h"
-Dnd cheader_filename="meta/meta-dnd.h"
-EdgeType cheader_filename="meta/boxes.h"
-Edge cheader_filename="meta/boxes.h"
-Frame cheader_filename="meta/types.h"
-FrameBorders cheader_filename="meta/common.h"
-FrameFlags cheader_filename="meta/common.h"
-FrameType cheader_filename="meta/common.h"
-GrabOp cheader_filename="meta/common.h"
-Group cheader_filename="meta/group.h"
-Group.property_notify.event type="X.Event" ref
-IdleMonitor cheader_filename="meta/meta-idle-monitor.h"
-IdleMonitorWatchFunc cheader_filename="meta/meta-idle-monitor.h"
-InhibitShortcutsDialog cheader_filename="meta/meta-inhibit-shortcuts-dialog.h"
-InhibitShortcutsDialogResponse cheader_filename="meta/meta-inhibit-shortcuts-dialog.h"
-KeyBinding cheader_filename="meta/keybindings.h"
-keybindings_set_custom_handler parent="Meta.KeyBinding" name="set_custom_handler" cheader_filename="meta/keybindings.h"
-KeyBindingAction cheader_filename="meta/prefs.h"
-KeyBindingFlags cheader_filename="meta/prefs.h"
-KeyHandlerFunc cheader_filename="meta/prefs.h"
-KeyHandlerFunc.event type="Clutter.KeyEvent?"
-KeyHandlerFunc.window nullable
-LaunchContext cheader_filename="meta/meta-launch-context.h"
-Laters cheader_filename="meta/types.h"
-LaterType cheader_filename="meta/util.h"
-LocaleDirection cheader_filename="meta/util.h"
-MaximizeFlags cheader_filename="meta/window.h"
-MonitorManager cheader_filename="meta/meta-monitor-manager.h"
-MonitorSwitchConfigType cheader_filename="meta/meta-monitor-manager.h"
-MotionDirection cheader_filename="meta/common.h"
-PadActionType cheader_filename="meta/display.h"
-Plugin cheader_filename="meta/meta-plugin.h"
-Plugin.xevent_filter.event type="X.Event" ref
-PluginInfo cheader_filename="meta/meta-plugin.h"
-Preference cheader_filename="meta/prefs.h"
-PrefsChangedFunc cheader_filename="meta/prefs.h"
-Rectangle cheader_filename="meta/boxes.h" struct
-RemoteAccessController cheader_filename="meta/meta-remote-access-controller.h"
-RemoteAccessHandle cheader_filename="meta/meta-remote-access-controller.h"
-Selection cheader_filename="meta/meta-selection.h"
-SelectionSource cheader_filename="meta/meta-selection-source.h"
-SelectionSourceMemory cheader_filename="meta/meta-selection-source-memory.h"
-SelectionType cheader_filename="meta/meta-selection-source.h"
-Settings cheader_filename="meta/meta-settings.h"
-Shadow cheader_filename="meta/meta-shadow-factory.h"
-ShadowFactory cheader_filename="meta/meta-shadow-factory.h"
-ShadowMode cheader_filename="meta/meta-window-actor.h"
-ShadowParams cheader_filename="meta/meta-shadow-factory.h"
-ShapedTexture cheader_filename="meta/meta-shaped-texture.h"
-Side cheader_filename="meta/common.h"
-SizeChange cheader_filename="meta/compositor.h"
-SoundPlayer cheader_filename="meta/meta-sound-player.h"
-StartupNotification cheader_filename="meta/meta-startup-notification.h"
-StartupNotification.changed.object type="Meta.StartupSequence"
-StartupNotification.get_sequences type_arguments="Meta.StartupSequence"
-StartupSequence cheader_filename="meta/meta-startup-notification.h"
-StackLayer cheader_filename="meta/common.h"
-Stage cheader_filename="meta/meta-stage.h"
-Stage.is_focused parent="Meta.Display" symbol_type="method" name="stage_is_focused" instance_idx=0 cheader_filename="meta/compositor-mutter.h"
-Strut cheader_filename="meta/boxes.h"
-TabList cheader_filename="meta/display.h"
-TabShowType cheader_filename="meta/display.h"
-Theme cheader_filename="meta/theme.h"
-theme_get_default cheader_filename="meta/theme.h"
-theme_new cheader_filename="meta/theme.h"
-VirtualModifier cheader_filename="meta/common.h"
-Workspace cheader_filename="meta/workspace.h"
-WorkspaceManager cheader_filename="meta/meta-workspace-manager.h"
-Window cheader_filename="meta/window.h"
-Window.focus#signal name="focused"
-Window.icon type="Cairo.Surface"
-Window.mini_icon type="Cairo.Surface"
-WindowActor cheader_filename="meta/meta-window-actor.h"
-WindowClientType cheader_filename="meta/window.h"
-WindowForeachFunc cheader_filename="meta/window.h"
-WindowGroup cheader_filename="meta/meta-window-group.h"
-WindowMenuType cheader_filename="meta/compositor.h"
-WindowShape cheader_filename="meta/meta-window-shape.h"
-WindowType cheader_filename="meta/window.h"
-X11Display cheader_filename="meta/meta-x11-display.h"
-
-// As per https://gitlab.gnome.org/GNOME/mutter/-/merge_requests/2287
-MonitorManager.monitor_privacy_screen_changed skip
-
-rect skip
-prefs_* parent="Meta.Prefs" name="prefs_(.+)" cheader_filename="meta/prefs.h"
-
-g_utf8_strndup skip
-
-preference_to_string cheader_filename="meta/prefs.h"
-frame_type_to_string cheader_filename="meta/util.h"
-topic_to_string parent="Meta.DebugTopic" name="to_string"
-
-CURRENT_TIME cheader_filename="meta/common.h"
-ICON_WIDTH cheader_filename="meta/common.h"
-ICON_HEIGHT cheader_filename="meta/common.h"
-MINI_ICON_WIDTH cheader_filename="meta/common.h"
-MINI_ICON_HEIGHT cheader_filename="meta/common.h"
-DEFAULT_ICON_NAME cheader_filename="meta/common.h"
-PRIORITY_RESIZE cheader_filename="meta/common.h"
-PRIORITY_BEFORE_REDRAW cheader_filename="meta/common.h"
-PRIORITY_REDRAW cheader_filename="meta/common.h"
-PRIORITY_PREFS_NOTIFY cheader_filename="meta/common.h"
-VIRTUAL_CORE_POINTER_ID cheader_filename="meta/common.h"
-VIRTUAL_CORE_KEYBOARD_ID cheader_filename="meta/common.h"
-
-Display.window_visibility_updated
-	.object name="unplaced" type="GLib.List<unowned Meta.Window>"
-	.p0 name="should_show" type="GLib.List<unowned Meta.Window>"
-	.p1 name="should_hide" type="GLib.List<unowned Meta.Window>"
-
-add_verbose_topic parent="Meta.Util" cheader_filename="meta/util.h"
-bug parent="Meta.Util" cheader_filename="meta/util.h"
-external_binding_name_for_action parent="Meta.Util" cheader_filename="meta/util.h"
-fatal parent="Meta.Util" cheader_filename="meta/util.h"
-get_locale_direction parent="Meta.Util" cheader_filename="meta/util.h"
-is_syncing parent="Meta.Util" cheader_filename="meta/util.h"
-is_verbose parent="Meta.Util" cheader_filename="meta/util.h"
-is_wayland_compositor parent="Meta.Util" cheader_filename="meta/util.h"
-later_add parent="Meta.Util" cheader_filename="meta/util.h"
-later_remove parent="Meta.Util" cheader_filename="meta/util.h"
-pop_no_msg_prefix parent="Meta.Util" cheader_filename="meta/util.h"
-push_no_msg_prefix parent="Meta.Util" cheader_filename="meta/util.h"
-remove_verbose_topic parent="Meta.Util" cheader_filename="meta/util.h"
-show_dialog parent="Meta.Util" cheader_filename="meta/util.h"
-show_dialog.columns type_arguments="string" nullable default=null
-show_dialog.entries type_arguments="string" nullable default=null
-show_dialog.transient_for default=0
-show_dialog.icon_name nullable default=null
-show_dialog.cancel_text nullable default=null
-show_dialog.ok_text nullable default=null
-show_dialog.display nullable default=null
-show_dialog.timeout nullable default=null
-unsigned_long_equal parent="Meta.Util" name="ulong_equal" cheader_filename="meta/util.h"
-unsigned_long_equal.v1 type="ulong?"
-unsigned_long_equal.v2 type="ulong?"
-unsigned_long_hash parent="Meta.Util" name="ulong_hash" cheader_filename="meta/util.h"
-unsigned_long_hash.v type="ulong?"
-warning parent="Meta.Util" cheader_filename="meta/util.h"
-create_context parent="Meta.Context" name="new" symbol_type="constructor" cheader_filename="meta/meta-context.h"
-
-x11_error_trap_pop parent="Meta.X11Display" symbol_type="method" name="error_trap_pop" instance_idx=0 cheader_filename="meta/meta-x11-errors.h"
-x11_error_trap_pop_with_return parent="Meta.X11Display" symbol_type="method" name="error_trap_pop_with_return" instance_idx=0 cheader_filename="meta/meta-x11-errors.h"
-x11_error_trap_push parent="Meta.X11Display" symbol_type="method" name="error_trap_push" instance_idx=0 cheader_filename="meta/meta-x11-errors.h"
-x11_init_gdk_display parent="Meta.X11Display" cheader_filename="meta/meta-x11-display.h"
diff --git a/vapi/Meta-11.metadata b/vapi/Meta-11.metadata
deleted file mode 100644
index 4d8917680..000000000
--- a/vapi/Meta-11.metadata
+++ /dev/null
@@ -1,205 +0,0 @@
-* skip=false
-*.* skip=false
-* cheader_filename="meta/main.h"
-
-Backend cheader_filename="meta/meta-backend.h"
-Backend.gpu_added skip
-get_backend parent="Meta.Backend" cheader_filename="meta/meta-backend.h"
-Background cheader_filename="meta/meta-background.h"
-Background.set_file.file nullable
-BackgroundContent.new symbol_type="constructor"
-BackgroundActor cheader_filename="meta/meta-background-actor.h"
-BackgroundContent cheader_filename="meta/meta-background-content.h"
-BackgroundGroup cheader_filename="meta/meta-background-group.h"
-BackgroundImage cheader_filename="meta/meta-background-image.h"
-BackgroundImageCache cheader_filename="meta/meta-background-image.h"
-Barrier cheader_filename="meta/barrier.h"
-BarrierDirection cheader_filename="meta/barrier.h"
-BarrierEvent cheader_filename="meta/barrier.h"
-ButtonFunction cheader_filename="meta/common.h"
-ButtonLayout cheader_filename="meta/common.h"
-Compositor cheader_filename="meta/compositor.h"
-Compositor.sync_stack.stack type_arguments="Meta.Window"
-get_feedback_group_for_display parent="Meta.Display" symbol_type="method" name="get_feedback_group" instance_idx=0 cheader_filename="meta/compositor-mutter.h"
-get_stage_for_display parent="Meta.Display" symbol_type="method" name="get_stage" instance_idx=0 cheader_filename="meta/compositor-mutter.h"
-get_top_window_group_for_display parent="Meta.Display" symbol_type="method" name="get_top_window_group" instance_idx=0 cheader_filename="meta/compositor-mutter.h"
-get_window_group_for_display parent="Meta.Display" symbol_type="method" name="get_window_group" instance_idx=0 cheader_filename="meta/compositor-mutter.h"
-disable_unredirect_for_display parent="Meta.Display" symbol_type="method" name="disable_unredirect" instance_idx=0 cheader_filename="meta/compositor-mutter.h"
-enable_unredirect_for_display parent="Meta.Display" symbol_type="method" name="enable_unredirect" instance_idx=0 cheader_filename="meta/compositor-mutter.h"
-
-get_window_actors parent="Meta.Display" symbol_type="method" instance_idx=0 cheader_filename="meta/compositor-mutter.h" type_arguments="Meta.WindowActor"
-focus_stage_window parent="Meta.Display" symbol_type="method" instance_idx=0 cheader_filename="meta/compositor-mutter.h"
-
-CompEffect cheader_filename="meta/compositor.h"
-CloseDialog cheader_filename="meta/meta-close-dialog.h"
-CloseDialogResponse cheader_filename="meta/meta-close-dialog.h"
-Context cheader_filename="meta/meta-context.h"
-CompositorType cheader_filename="meta/meta-enums.h"
-Cursor cheader_filename="meta/common.h"
-CursorTracker cheader_filename="meta/meta-cursor-tracker.h"
-CursorTracker.get_for_display parent="Meta.Display" symbol_type="method" instance_idx=0 name="get_cursor_tracker"
-CursorTracker.get_pointer.mods out
-DebugTopic cheader_filename="meta/util.h"
-DebugPaintFlag cheader_filename="meta/util.h"
-Direction cheader_filename="meta/common.h"
-Display cheader_filename="meta/display.h"
-DisplayCorner cheader_filename="meta/display.h"
-DisplayDirection cheader_filename="meta/display.h"
-Dnd cheader_filename="meta/meta-dnd.h"
-EdgeType cheader_filename="meta/boxes.h"
-Edge cheader_filename="meta/boxes.h"
-Frame cheader_filename="meta/types.h"
-FrameBorders cheader_filename="meta/common.h"
-FrameFlags cheader_filename="meta/common.h"
-FrameType cheader_filename="meta/common.h"
-GrabOp cheader_filename="meta/common.h"
-Gravity cheader_filename="meta/common.h"
-Group cheader_filename="meta/group.h"
-Group.property_notify.event type="X.Event" ref
-IdleMonitor cheader_filename="meta/meta-idle-monitor.h"
-IdleMonitorWatchFunc cheader_filename="meta/meta-idle-monitor.h"
-InhibitShortcutsDialog cheader_filename="meta/meta-inhibit-shortcuts-dialog.h"
-InhibitShortcutsDialogResponse cheader_filename="meta/meta-inhibit-shortcuts-dialog.h"
-KeyboardA11yFlags cheader_filename="meta/meta-enums.h"
-KeyBinding cheader_filename="meta/keybindings.h"
-keybindings_set_custom_handler parent="Meta.KeyBinding" name="set_custom_handler" cheader_filename="meta/keybindings.h"
-KeyBindingAction cheader_filename="meta/prefs.h"
-KeyBindingFlags cheader_filename="meta/prefs.h"
-KeyHandlerFunc cheader_filename="meta/prefs.h"
-KeyHandlerFunc.event type="Clutter.KeyEvent?"
-KeyHandlerFunc.window nullable
-LaunchContext cheader_filename="meta/meta-launch-context.h"
-Laters cheader_filename="meta/types.h"
-LaterType cheader_filename="meta/util.h"
-LocaleDirection cheader_filename="meta/util.h"
-MaximizeFlags cheader_filename="meta/window.h"
-MonitorManager cheader_filename="meta/meta-monitor-manager.h"
-MonitorSwitchConfigType cheader_filename="meta/meta-monitor-manager.h"
-MotionDirection cheader_filename="meta/common.h"
-PadActionType cheader_filename="meta/display.h"
-Plugin cheader_filename="meta/meta-plugin.h"
-Plugin.xevent_filter.event type="X.Event" ref
-PluginInfo cheader_filename="meta/meta-plugin.h"
-Preference cheader_filename="meta/prefs.h"
-PrefsChangedFunc cheader_filename="meta/prefs.h"
-Rectangle cheader_filename="meta/boxes.h" struct
-RemoteAccessController cheader_filename="meta/meta-remote-access-controller.h"
-RemoteAccessHandle cheader_filename="meta/meta-remote-access-controller.h"
-Selection cheader_filename="meta/meta-selection.h"
-SelectionSource cheader_filename="meta/meta-selection-source.h"
-SelectionSourceMemory cheader_filename="meta/meta-selection-source-memory.h"
-SelectionType cheader_filename="meta/meta-selection-source.h"
-Settings cheader_filename="meta/meta-settings.h"
-Shadow cheader_filename="meta/meta-shadow-factory.h"
-ShadowFactory cheader_filename="meta/meta-shadow-factory.h"
-ShadowMode cheader_filename="meta/meta-window-actor.h"
-ShadowParams cheader_filename="meta/meta-shadow-factory.h"
-ShapedTexture cheader_filename="meta/meta-shaped-texture.h"
-Side cheader_filename="meta/common.h"
-SizeChange cheader_filename="meta/compositor.h"
-SoundPlayer cheader_filename="meta/meta-sound-player.h"
-StartupNotification cheader_filename="meta/meta-startup-notification.h"
-StartupNotification.changed.object type="Meta.StartupSequence"
-StartupNotification.get_sequences type_arguments="Meta.StartupSequence"
-StartupSequence cheader_filename="meta/meta-startup-notification.h"
-StackLayer cheader_filename="meta/common.h"
-Stage cheader_filename="meta/meta-stage.h"
-Stage.is_focused parent="Meta.Display" symbol_type="method" name="stage_is_focused" instance_idx=0 cheader_filename="meta/compositor-mutter.h"
-Strut cheader_filename="meta/boxes.h"
-TabList cheader_filename="meta/display.h"
-TabShowType cheader_filename="meta/display.h"
-Theme cheader_filename="meta/theme.h"
-theme_get_default cheader_filename="meta/theme.h"
-theme_new cheader_filename="meta/theme.h"
-VirtualModifier cheader_filename="meta/common.h"
-WaylandClient cheader_filename="meta/meta-wayland-client.h"
-Workspace cheader_filename="meta/workspace.h"
-WorkspaceManager cheader_filename="meta/meta-workspace-manager.h"
-Window cheader_filename="meta/window.h"
-Window.focus#signal name="focused"
-Window.icon type="Cairo.Surface"
-Window.mini_icon type="Cairo.Surface"
-WindowActor cheader_filename="meta/meta-window-actor.h"
-WindowClientType cheader_filename="meta/window.h"
-WindowForeachFunc cheader_filename="meta/window.h"
-WindowGroup cheader_filename="meta/meta-window-group.h"
-WindowMenuType cheader_filename="meta/compositor.h"
-WindowShape cheader_filename="meta/meta-window-shape.h"
-WindowType cheader_filename="meta/window.h"
-X11Display cheader_filename="meta/meta-x11-display.h"
-
-// As per https://gitlab.gnome.org/GNOME/mutter/-/merge_requests/2287
-MonitorManager.monitor_privacy_screen_changed skip
-
-rect skip
-prefs_* parent="Meta.Prefs" name="prefs_(.+)" cheader_filename="meta/prefs.h"
-
-g_utf8_strndup skip
-
-preference_to_string cheader_filename="meta/prefs.h"
-frame_type_to_string cheader_filename="meta/util.h"
-topic_to_string parent="Meta.DebugTopic" name="to_string" cheader_filename="meta/util.h"
-
-CURRENT_TIME cheader_filename="meta/common.h"
-ICON_WIDTH cheader_filename="meta/common.h"
-ICON_HEIGHT cheader_filename="meta/common.h"
-MINI_ICON_WIDTH cheader_filename="meta/common.h"
-MINI_ICON_HEIGHT cheader_filename="meta/common.h"
-DEFAULT_ICON_NAME cheader_filename="meta/common.h"
-PRIORITY_RESIZE cheader_filename="meta/common.h"
-PRIORITY_BEFORE_REDRAW cheader_filename="meta/common.h"
-PRIORITY_REDRAW cheader_filename="meta/common.h"
-PRIORITY_PREFS_NOTIFY cheader_filename="meta/common.h"
-VIRTUAL_CORE_POINTER_ID cheader_filename="meta/common.h"
-VIRTUAL_CORE_KEYBOARD_ID cheader_filename="meta/common.h"
-
-Display.window_visibility_updated
-	.object name="unplaced" type="GLib.List<unowned Meta.Window>"
-	.p0 name="should_show" type="GLib.List<unowned Meta.Window>"
-	.p1 name="should_hide" type="GLib.List<unowned Meta.Window>"
-
-add_verbose_topic parent="Meta.Util" cheader_filename="meta/util.h"
-bug parent="Meta.Util" cheader_filename="meta/util.h"
-external_binding_name_for_action parent="Meta.Util" cheader_filename="meta/util.h"
-fatal parent="Meta.Util" cheader_filename="meta/util.h"
-get_locale_direction parent="Meta.Util" cheader_filename="meta/util.h"
-is_verbose parent="Meta.Util" cheader_filename="meta/util.h"
-is_wayland_compositor parent="Meta.Util" cheader_filename="meta/util.h"
-later_add parent="Meta.Util" cheader_filename="meta/util.h"
-later_remove parent="Meta.Util" cheader_filename="meta/util.h"
-pop_no_msg_prefix parent="Meta.Util" cheader_filename="meta/util.h"
-push_no_msg_prefix parent="Meta.Util" cheader_filename="meta/util.h"
-remove_verbose_topic parent="Meta.Util" cheader_filename="meta/util.h"
-unsigned_long_equal parent="Meta.Util" name="ulong_equal" cheader_filename="meta/util.h"
-unsigned_long_equal.v1 type="ulong?"
-unsigned_long_equal.v2 type="ulong?"
-unsigned_long_hash parent="Meta.Util" name="ulong_hash" cheader_filename="meta/util.h"
-unsigned_long_hash.v type="ulong?"
-warning parent="Meta.Util" cheader_filename="meta/util.h"
-create_context parent="Meta.Context" name="new" symbol_type="constructor" cheader_filename="meta/meta-context.h"
-
-x11_error_trap_pop parent="Meta.X11Display" symbol_type="method" name="error_trap_pop" instance_idx=0 cheader_filename="meta/meta-x11-errors.h"
-x11_error_trap_pop_with_return parent="Meta.X11Display" symbol_type="method" name="error_trap_pop_with_return" instance_idx=0 cheader_filename="meta/meta-x11-errors.h"
-x11_error_trap_push parent="Meta.X11Display" symbol_type="method" name="error_trap_push" instance_idx=0 cheader_filename="meta/meta-x11-errors.h"
-x11_init_gdk_display parent="Meta.X11Display" cheader_filename="meta/meta-x11-display.h"
-
-BackgroundActor sealed
-BackgroundContent sealed
-BackgroundImage sealed
-BackgroundImageCache sealed
-Background sealed
-Dnd sealed
-IdleMonitor sealed
-LaunchContext sealed
-RemoteAccessController sealed
-SelectionSourceMemory sealed
-Selection sealed
-ShadowFactory sealed
-ShapedTexture sealed
-SoundPlayer sealed
-Stage sealed
-StartupNotification sealed
-WaylandClient sealed
-WindowGroup sealed
-WorkspaceManager sealed
-X11Display sealed
diff --git a/vapi/Meta-12.metadata b/vapi/Meta-12.metadata
deleted file mode 100644
index ce2a5dee3..000000000
--- a/vapi/Meta-12.metadata
+++ /dev/null
@@ -1,199 +0,0 @@
-* skip=false
-*.* skip=false
-* cheader_filename="meta/main.h"
-
-Backend cheader_filename="meta/meta-backend.h"
-Backend.gpu_added skip
-Background cheader_filename="meta/meta-background.h"
-Background.set_file.file nullable
-BackgroundContent.new symbol_type="constructor"
-BackgroundActor cheader_filename="meta/meta-background-actor.h"
-BackgroundContent cheader_filename="meta/meta-background-content.h"
-BackgroundGroup cheader_filename="meta/meta-background-group.h"
-BackgroundImage cheader_filename="meta/meta-background-image.h"
-BackgroundImageCache cheader_filename="meta/meta-background-image.h"
-Barrier cheader_filename="meta/barrier.h"
-BarrierDirection cheader_filename="meta/barrier.h"
-BarrierEvent cheader_filename="meta/barrier.h"
-ButtonFunction cheader_filename="meta/common.h"
-ButtonLayout cheader_filename="meta/common.h"
-Compositor cheader_filename="meta/compositor.h"
-get_feedback_group_for_display parent="Meta.Display" symbol_type="method" name="get_feedback_group" instance_idx=0 cheader_filename="meta/compositor-mutter.h"
-get_stage_for_display parent="Meta.Display" symbol_type="method" name="get_stage" instance_idx=0 cheader_filename="meta/compositor-mutter.h"
-get_top_window_group_for_display parent="Meta.Display" symbol_type="method" name="get_top_window_group" instance_idx=0 cheader_filename="meta/compositor-mutter.h"
-get_window_group_for_display parent="Meta.Display" symbol_type="method" name="get_window_group" instance_idx=0 cheader_filename="meta/compositor-mutter.h"
-disable_unredirect_for_display parent="Meta.Display" symbol_type="method" name="disable_unredirect" instance_idx=0 cheader_filename="meta/compositor-mutter.h"
-enable_unredirect_for_display parent="Meta.Display" symbol_type="method" name="enable_unredirect" instance_idx=0 cheader_filename="meta/compositor-mutter.h"
-
-get_window_actors parent="Meta.Display" symbol_type="method" instance_idx=0 cheader_filename="meta/compositor-mutter.h" type_arguments="Meta.WindowActor"
-focus_stage_window parent="Meta.Display" symbol_type="method" instance_idx=0 cheader_filename="meta/compositor-mutter.h"
-
-CompEffect cheader_filename="meta/compositor.h"
-CloseDialog cheader_filename="meta/meta-close-dialog.h"
-CloseDialogResponse cheader_filename="meta/meta-close-dialog.h"
-Context cheader_filename="meta/meta-context.h"
-CompositorType cheader_filename="meta/meta-enums.h"
-Cursor cheader_filename="meta/common.h"
-CursorTracker cheader_filename="meta/meta-cursor-tracker.h"
-CursorTracker.get_for_display parent="Meta.Display" symbol_type="method" instance_idx=0 name="get_cursor_tracker"
-CursorTracker.get_pointer.mods out
-DebugTopic cheader_filename="meta/util.h"
-DebugPaintFlag cheader_filename="meta/util.h"
-Direction cheader_filename="meta/common.h"
-Display cheader_filename="meta/display.h"
-DisplayCorner cheader_filename="meta/display.h"
-DisplayDirection cheader_filename="meta/display.h"
-Dnd cheader_filename="meta/meta-dnd.h"
-EdgeType cheader_filename="meta/boxes.h"
-Edge cheader_filename="meta/boxes.h"
-Frame cheader_filename="meta/types.h"
-FrameBorders cheader_filename="meta/common.h"
-FrameFlags cheader_filename="meta/common.h"
-FrameType cheader_filename="meta/common.h"
-GrabOp cheader_filename="meta/common.h"
-Gravity cheader_filename="meta/common.h"
-Group cheader_filename="meta/group.h"
-Group.property_notify.event type="X.Event" ref
-IdleMonitor cheader_filename="meta/meta-idle-monitor.h"
-IdleMonitorWatchFunc cheader_filename="meta/meta-idle-monitor.h"
-InhibitShortcutsDialog cheader_filename="meta/meta-inhibit-shortcuts-dialog.h"
-InhibitShortcutsDialogResponse cheader_filename="meta/meta-inhibit-shortcuts-dialog.h"
-KeyboardA11yFlags cheader_filename="meta/meta-enums.h"
-KeyBinding cheader_filename="meta/keybindings.h"
-keybindings_set_custom_handler parent="Meta.KeyBinding" name="set_custom_handler" cheader_filename="meta/keybindings.h"
-KeyBindingAction cheader_filename="meta/prefs.h"
-KeyBindingFlags cheader_filename="meta/prefs.h"
-KeyHandlerFunc cheader_filename="meta/prefs.h"
-KeyHandlerFunc.event type="Clutter.KeyEvent?"
-KeyHandlerFunc.window nullable
-LaunchContext cheader_filename="meta/meta-launch-context.h"
-Laters cheader_filename="meta/types.h"
-LaterType cheader_filename="meta/util.h"
-LocaleDirection cheader_filename="meta/util.h"
-MaximizeFlags cheader_filename="meta/window.h"
-MonitorManager cheader_filename="meta/meta-monitor-manager.h"
-MonitorSwitchConfigType cheader_filename="meta/meta-monitor-manager.h"
-MotionDirection cheader_filename="meta/common.h"
-PadActionType cheader_filename="meta/display.h"
-Plugin cheader_filename="meta/meta-plugin.h"
-Plugin.xevent_filter.event type="X.Event" ref
-PluginInfo cheader_filename="meta/meta-plugin.h"
-Preference cheader_filename="meta/prefs.h"
-PrefsChangedFunc cheader_filename="meta/prefs.h"
-Rectangle cheader_filename="meta/boxes.h" struct
-RemoteAccessController cheader_filename="meta/meta-remote-access-controller.h"
-RemoteAccessHandle cheader_filename="meta/meta-remote-access-controller.h"
-Selection cheader_filename="meta/meta-selection.h"
-SelectionSource cheader_filename="meta/meta-selection-source.h"
-SelectionSourceMemory cheader_filename="meta/meta-selection-source-memory.h"
-SelectionType cheader_filename="meta/meta-selection-source.h"
-Settings cheader_filename="meta/meta-settings.h"
-Shadow cheader_filename="meta/meta-shadow-factory.h"
-ShadowFactory cheader_filename="meta/meta-shadow-factory.h"
-ShadowMode cheader_filename="meta/meta-window-actor.h"
-ShadowParams cheader_filename="meta/meta-shadow-factory.h"
-ShapedTexture cheader_filename="meta/meta-shaped-texture.h"
-Side cheader_filename="meta/common.h"
-SizeChange cheader_filename="meta/compositor.h"
-SoundPlayer cheader_filename="meta/meta-sound-player.h"
-StartupNotification cheader_filename="meta/meta-startup-notification.h"
-StartupNotification.changed.object type="Meta.StartupSequence"
-StartupNotification.get_sequences type_arguments="Meta.StartupSequence"
-StartupSequence cheader_filename="meta/meta-startup-notification.h"
-StackLayer cheader_filename="meta/common.h"
-Stage cheader_filename="meta/meta-stage.h"
-Stage.is_focused parent="Meta.Display" symbol_type="method" name="stage_is_focused" instance_idx=0 cheader_filename="meta/compositor-mutter.h"
-Strut cheader_filename="meta/boxes.h"
-TabList cheader_filename="meta/display.h"
-TabShowType cheader_filename="meta/display.h"
-VirtualModifier cheader_filename="meta/common.h"
-WaylandClient cheader_filename="meta/meta-wayland-client.h"
-Workspace cheader_filename="meta/workspace.h"
-WorkspaceManager cheader_filename="meta/meta-workspace-manager.h"
-Window cheader_filename="meta/window.h"
-Window.focus#signal name="focused"
-Window.icon type="Cairo.Surface"
-Window.mini_icon type="Cairo.Surface"
-WindowActor cheader_filename="meta/meta-window-actor.h"
-WindowClientType cheader_filename="meta/window.h"
-WindowForeachFunc cheader_filename="meta/window.h"
-WindowGroup cheader_filename="meta/meta-window-group.h"
-WindowMenuType cheader_filename="meta/compositor.h"
-WindowShape cheader_filename="meta/meta-window-shape.h"
-WindowType cheader_filename="meta/window.h"
-X11Display cheader_filename="meta/meta-x11-display.h"
-X11Display.add_event_func skip
-X11DisplayEventFunc skip
-
-// As per https://gitlab.gnome.org/GNOME/mutter/-/merge_requests/2287
-MonitorManager.monitor_privacy_screen_changed skip
-
-rect skip
-prefs_* parent="Meta.Prefs" name="prefs_(.+)" cheader_filename="meta/prefs.h"
-
-g_utf8_strndup skip
-
-preference_to_string cheader_filename="meta/prefs.h"
-frame_type_to_string cheader_filename="meta/util.h"
-topic_to_string parent="Meta.DebugTopic" name="to_string" cheader_filename="meta/util.h"
-
-CURRENT_TIME cheader_filename="meta/common.h"
-ICON_WIDTH cheader_filename="meta/common.h"
-ICON_HEIGHT cheader_filename="meta/common.h"
-MINI_ICON_WIDTH cheader_filename="meta/common.h"
-MINI_ICON_HEIGHT cheader_filename="meta/common.h"
-DEFAULT_ICON_NAME cheader_filename="meta/common.h"
-PRIORITY_RESIZE cheader_filename="meta/common.h"
-PRIORITY_BEFORE_REDRAW cheader_filename="meta/common.h"
-PRIORITY_REDRAW cheader_filename="meta/common.h"
-PRIORITY_PREFS_NOTIFY cheader_filename="meta/common.h"
-VIRTUAL_CORE_POINTER_ID cheader_filename="meta/common.h"
-VIRTUAL_CORE_KEYBOARD_ID cheader_filename="meta/common.h"
-
-Display.window_visibility_updated
-	.object name="unplaced" type="GLib.List<unowned Meta.Window>"
-	.p0 name="should_show" type="GLib.List<unowned Meta.Window>"
-	.p1 name="should_hide" type="GLib.List<unowned Meta.Window>"
-
-add_verbose_topic parent="Meta.Util" cheader_filename="meta/util.h"
-bug parent="Meta.Util" cheader_filename="meta/util.h"
-external_binding_name_for_action parent="Meta.Util" cheader_filename="meta/util.h"
-fatal parent="Meta.Util" cheader_filename="meta/util.h"
-get_locale_direction parent="Meta.Util" cheader_filename="meta/util.h"
-is_verbose parent="Meta.Util" cheader_filename="meta/util.h"
-is_wayland_compositor parent="Meta.Util" cheader_filename="meta/util.h"
-pop_no_msg_prefix parent="Meta.Util" cheader_filename="meta/util.h"
-push_no_msg_prefix parent="Meta.Util" cheader_filename="meta/util.h"
-remove_verbose_topic parent="Meta.Util" cheader_filename="meta/util.h"
-unsigned_long_equal parent="Meta.Util" name="ulong_equal" cheader_filename="meta/util.h"
-unsigned_long_equal.v1 type="ulong?"
-unsigned_long_equal.v2 type="ulong?"
-unsigned_long_hash parent="Meta.Util" name="ulong_hash" cheader_filename="meta/util.h"
-unsigned_long_hash.v type="ulong?"
-warning parent="Meta.Util" cheader_filename="meta/util.h"
-create_context parent="Meta.Context" name="new" symbol_type="constructor" cheader_filename="meta/meta-context.h"
-
-x11_error_trap_pop parent="Meta.X11Display" symbol_type="method" name="error_trap_pop" instance_idx=0 cheader_filename="meta/meta-x11-errors.h"
-x11_error_trap_pop_with_return parent="Meta.X11Display" symbol_type="method" name="error_trap_pop_with_return" instance_idx=0 cheader_filename="meta/meta-x11-errors.h"
-x11_error_trap_push parent="Meta.X11Display" symbol_type="method" name="error_trap_push" instance_idx=0 cheader_filename="meta/meta-x11-errors.h"
-
-BackgroundActor sealed
-BackgroundContent sealed
-BackgroundImage sealed
-BackgroundImageCache sealed
-Background sealed
-Dnd sealed
-IdleMonitor sealed
-LaunchContext sealed
-RemoteAccessController sealed
-SelectionSourceMemory sealed
-Selection sealed
-ShadowFactory sealed
-ShapedTexture sealed
-SoundPlayer sealed
-Stage sealed
-StartupNotification sealed
-WaylandClient sealed
-WindowGroup sealed
-WorkspaceManager sealed
-X11Display sealed
diff --git a/vapi/libmutter-10.deps b/vapi/libmutter-10.deps
deleted file mode 120000
index 7782137a6..000000000
--- a/vapi/libmutter-10.deps
+++ /dev/null
@@ -1 +0,0 @@
-libmutter.deps
\ No newline at end of file
diff --git a/vapi/libmutter-10.vapi b/vapi/libmutter-10.vapi
deleted file mode 120000
index 12f9cc52d..000000000
--- a/vapi/libmutter-10.vapi
+++ /dev/null
@@ -1 +0,0 @@
-libmutter.vapi
\ No newline at end of file
diff --git a/vapi/libmutter-11.deps b/vapi/libmutter-11.deps
deleted file mode 120000
index 2abaae88d..000000000
--- a/vapi/libmutter-11.deps
+++ /dev/null
@@ -1 +0,0 @@
-libmutter-10.deps
\ No newline at end of file
diff --git a/vapi/libmutter-11.vapi b/vapi/libmutter-11.vapi
deleted file mode 120000
index 0dc007f2d..000000000
--- a/vapi/libmutter-11.vapi
+++ /dev/null
@@ -1 +0,0 @@
-libmutter-10.vapi
\ No newline at end of file
diff --git a/vapi/libmutter-12.deps b/vapi/libmutter-12.deps
deleted file mode 120000
index 46916957d..000000000
--- a/vapi/libmutter-12.deps
+++ /dev/null
@@ -1 +0,0 @@
-libmutter-11.deps
\ No newline at end of file
diff --git a/vapi/libmutter-12.vapi b/vapi/libmutter-12.vapi
deleted file mode 120000
index 67dff0259..000000000
--- a/vapi/libmutter-12.vapi
+++ /dev/null
@@ -1 +0,0 @@
-libmutter-11.vapi
\ No newline at end of file
diff --git a/vapi/meson.build b/vapi/meson.build
index c56958619..c2cd463e1 100644
--- a/vapi/meson.build
+++ b/vapi/meson.build
@@ -6,219 +6,6 @@ vapigen_args = [
 	'--vapidir=@0@'.format(meson.current_source_dir()),
 ]
 
-if mutter42_dep.found()
-	cogl_target = custom_target('mutter-cogl-10',
-		command: [
-			vapigen,
-			mutter_typelib_dir / 'Cogl-10.gir',
-			'--library=mutter-cogl-10',
-			'--pkg=gobject-2.0',
-			'--pkg=cairo',
-			'--pkg=graphene-gobject-1.0',
-			vapigen_args,
-			files('Cogl-10-custom.vala')
-		],
-		output: 'mutter-cogl-10.vapi'
-	)
-
-	cogl_pango_target = custom_target('mutter-cogl-pango-10',
-		command: [
-			vapigen,
-			mutter_typelib_dir / 'CoglPango-10.gir',
-			'--library=mutter-cogl-pango-10',
-			'--pkg=mutter-cogl-10',
-			'--pkg=pangocairo',
-			vapigen_args
-		],
-		depends: cogl_target,
-		output: 'mutter-cogl-pango-10.vapi'
-	)
-
-	clutter_target = custom_target('mutter-clutter-10',
-		command: [
-			vapigen,
-			mutter_typelib_dir / 'Clutter-10.gir',
-			'--library=mutter-clutter-10',
-			'--pkg=graphene-gobject-1.0',
-			'--pkg=mutter-cogl-10',
-			'--pkg=mutter-cogl-pango-10',
-			'--pkg=atk',
-			'--pkg=gio-2.0',
-			'--pkg=json-glib-1.0',
-			'--pkg=pangocairo',
-			vapigen_args,
-			files('Clutter-10-custom.vala')
-		],
-		depends: [ cogl_target, cogl_pango_target ],
-		output: 'mutter-clutter-10.vapi'
-	)
-
-	libmutter_target = custom_target('libmutter-10',
-		command: [
-			vapigen,
-			mutter_typelib_dir / 'Meta-10.gir',
-			'--library=libmutter-10',
-			'--pkg=graphene-gobject-1.0',
-			'--pkg=mutter-cogl-10',
-			'--pkg=mutter-cogl-pango-10',
-			'--pkg=mutter-clutter-10',
-			'--pkg=atk',
-			'--pkg=gio-2.0',
-			'--pkg=json-glib-1.0',
-			'--pkg=pangocairo',
-			'--pkg=gtk+-3.0',
-			'--pkg=x11',
-			'--pkg=xfixes-4.0',
-			vapigen_args
-		],
-		depends: [ cogl_target, cogl_pango_target, clutter_target ],
-		output: 'libmutter-10.vapi'
-	)
-endif
-if mutter43_dep.found()
-	cogl_target = custom_target('mutter-cogl-11',
-		command: [
-			vapigen,
-			mutter_typelib_dir / 'Cogl-11.gir',
-			'--library=mutter-cogl-11',
-			'--pkg=gobject-2.0',
-			'--pkg=gio-2.0',
-			'--pkg=cairo',
-			'--pkg=graphene-gobject-1.0',
-			vapigen_args,
-			files('Cogl-11-custom.vala')
-		],
-		output: 'mutter-cogl-11.vapi'
-	)
-
-	cogl_pango_target = custom_target('mutter-cogl-pango-11',
-		command: [
-			vapigen,
-			mutter_typelib_dir / 'CoglPango-11.gir',
-			'--library=mutter-cogl-pango-11',
-			'--pkg=mutter-cogl-11',
-			'--pkg=pangocairo',
-			'--pkg=gio-2.0',
-			'--pkg=glib-2.0',
-			vapigen_args
-		],
-		depends: cogl_target,
-		output: 'mutter-cogl-pango-11.vapi'
-	)
-
-	clutter_target = custom_target('mutter-clutter-11',
-		command: [
-			vapigen,
-			mutter_typelib_dir / 'Clutter-11.gir',
-			'--library=mutter-clutter-11',
-			'--pkg=graphene-gobject-1.0',
-			'--pkg=mutter-cogl-11',
-			'--pkg=mutter-cogl-pango-11',
-			'--pkg=atk',
-			'--pkg=gio-2.0',
-			'--pkg=json-glib-1.0',
-			'--pkg=pangocairo',
-			vapigen_args,
-			files('Clutter-11-custom.vala')
-		],
-		depends: [ cogl_target, cogl_pango_target ],
-		output: 'mutter-clutter-11.vapi'
-	)
-
-	libmutter_target = custom_target('libmutter-11',
-		command: [
-			vapigen,
-			mutter_typelib_dir / 'Meta-11.gir',
-			'--library=libmutter-11',
-			'--pkg=graphene-gobject-1.0',
-			'--pkg=mutter-cogl-11',
-			'--pkg=mutter-cogl-pango-11',
-			'--pkg=mutter-clutter-11',
-			'--pkg=atk',
-			'--pkg=gio-2.0',
-			'--pkg=json-glib-1.0',
-			'--pkg=pangocairo',
-			'--pkg=gtk+-3.0',
-			'--pkg=x11',
-			'--pkg=xfixes-4.0',
-			vapigen_args
-		],
-		depends: [ cogl_target, cogl_pango_target, clutter_target ],
-		output: 'libmutter-11.vapi'
-	)
-endif
-if mutter44_dep.found()
-	cogl_target = custom_target('mutter-cogl-12',
-		command: [
-			vapigen,
-			mutter_typelib_dir / 'Cogl-12.gir',
-			'--library=mutter-cogl-12',
-			'--pkg=gobject-2.0',
-			'--pkg=gio-2.0',
-			'--pkg=cairo',
-			'--pkg=graphene-gobject-1.0',
-			vapigen_args,
-			files('Cogl-12-custom.vala')
-		],
-		output: 'mutter-cogl-12.vapi'
-	)
-
-	cogl_pango_target = custom_target('mutter-cogl-pango-12',
-		command: [
-			vapigen,
-			mutter_typelib_dir / 'CoglPango-12.gir',
-			'--library=mutter-cogl-pango-12',
-			'--pkg=mutter-cogl-12',
-			'--pkg=pangocairo',
-			'--pkg=gio-2.0',
-			'--pkg=glib-2.0',
-			vapigen_args
-		],
-		depends: cogl_target,
-		output: 'mutter-cogl-pango-12.vapi'
-	)
-
-	clutter_target = custom_target('mutter-clutter-12',
-		command: [
-			vapigen,
-			mutter_typelib_dir / 'Clutter-12.gir',
-			'--library=mutter-clutter-12',
-			'--pkg=graphene-gobject-1.0',
-			'--pkg=mutter-cogl-12',
-			'--pkg=mutter-cogl-pango-12',
-			'--pkg=atk',
-			'--pkg=gio-2.0',
-			'--pkg=json-glib-1.0',
-			'--pkg=pangocairo',
-			vapigen_args,
-			files('Clutter-12-custom.vala')
-		],
-		depends: [ cogl_target, cogl_pango_target ],
-		output: 'mutter-clutter-12.vapi'
-	)
-
-	libmutter_target = custom_target('libmutter-12',
-		command: [
-			vapigen,
-			mutter_typelib_dir / 'Meta-12.gir',
-			'--library=libmutter-12',
-			'--pkg=graphene-gobject-1.0',
-			'--pkg=mutter-cogl-12',
-			'--pkg=mutter-cogl-pango-12',
-			'--pkg=mutter-clutter-12',
-			'--pkg=atk',
-			'--pkg=gio-2.0',
-			'--pkg=json-glib-1.0',
-			'--pkg=pangocairo',
-			'--pkg=gtk+-3.0',
-			'--pkg=x11',
-			'--pkg=xfixes-4.0',
-			vapigen_args
-		],
-		depends: [ cogl_target, cogl_pango_target, clutter_target ],
-		output: 'libmutter-12.vapi'
-	)
-endif
 if mutter45_dep.found()
 	mtk_target = custom_target('mutter-mtk-13',
 		command: [
diff --git a/vapi/mutter-clutter-10.deps b/vapi/mutter-clutter-10.deps
deleted file mode 100644
index f4c6e4204..000000000
--- a/vapi/mutter-clutter-10.deps
+++ /dev/null
@@ -1,6 +0,0 @@
-atk
-cairo
-pango
-json-glib-1.0
-mutter-cogl-10
-graphene-gobject-1.0
diff --git a/vapi/mutter-clutter-10.vapi b/vapi/mutter-clutter-10.vapi
deleted file mode 120000
index e1b7159f2..000000000
--- a/vapi/mutter-clutter-10.vapi
+++ /dev/null
@@ -1 +0,0 @@
-mutter-clutter.vapi
\ No newline at end of file
diff --git a/vapi/mutter-clutter-11.deps b/vapi/mutter-clutter-11.deps
deleted file mode 100644
index c813b782d..000000000
--- a/vapi/mutter-clutter-11.deps
+++ /dev/null
@@ -1,6 +0,0 @@
-atk
-cairo
-pango
-json-glib-1.0
-mutter-cogl-11
-graphene-gobject-1.0
diff --git a/vapi/mutter-clutter-11.vapi b/vapi/mutter-clutter-11.vapi
deleted file mode 120000
index 716d1ccc9..000000000
--- a/vapi/mutter-clutter-11.vapi
+++ /dev/null
@@ -1 +0,0 @@
-mutter-clutter-10.vapi
\ No newline at end of file
diff --git a/vapi/mutter-clutter-12.deps b/vapi/mutter-clutter-12.deps
deleted file mode 100644
index e4781714f..000000000
--- a/vapi/mutter-clutter-12.deps
+++ /dev/null
@@ -1,6 +0,0 @@
-atk
-cairo
-pango
-json-glib-1.0
-mutter-cogl-12
-graphene-gobject-1.0
diff --git a/vapi/mutter-clutter-12.vapi b/vapi/mutter-clutter-12.vapi
deleted file mode 120000
index 9859a4a21..000000000
--- a/vapi/mutter-clutter-12.vapi
+++ /dev/null
@@ -1 +0,0 @@
-mutter-clutter-11.vapi
\ No newline at end of file
diff --git a/vapi/mutter-cogl-10.deps b/vapi/mutter-cogl-10.deps
deleted file mode 120000
index ca8dd2a93..000000000
--- a/vapi/mutter-cogl-10.deps
+++ /dev/null
@@ -1 +0,0 @@
-mutter-cogl.deps
\ No newline at end of file
diff --git a/vapi/mutter-cogl-10.vapi b/vapi/mutter-cogl-10.vapi
deleted file mode 120000
index 7e33c18b1..000000000
--- a/vapi/mutter-cogl-10.vapi
+++ /dev/null
@@ -1 +0,0 @@
-mutter-cogl.vapi
\ No newline at end of file
diff --git a/vapi/mutter-cogl-11.deps b/vapi/mutter-cogl-11.deps
deleted file mode 120000
index ce132cda4..000000000
--- a/vapi/mutter-cogl-11.deps
+++ /dev/null
@@ -1 +0,0 @@
-mutter-cogl-10.deps
\ No newline at end of file
diff --git a/vapi/mutter-cogl-11.vapi b/vapi/mutter-cogl-11.vapi
deleted file mode 120000
index 06333dd39..000000000
--- a/vapi/mutter-cogl-11.vapi
+++ /dev/null
@@ -1 +0,0 @@
-mutter-cogl-10.vapi
\ No newline at end of file
diff --git a/vapi/mutter-cogl-12.deps b/vapi/mutter-cogl-12.deps
deleted file mode 120000
index 509422eb5..000000000
--- a/vapi/mutter-cogl-12.deps
+++ /dev/null
@@ -1 +0,0 @@
-mutter-cogl-11.deps
\ No newline at end of file
diff --git a/vapi/mutter-cogl-12.vapi b/vapi/mutter-cogl-12.vapi
deleted file mode 120000
index 353f3f1ae..000000000
--- a/vapi/mutter-cogl-12.vapi
+++ /dev/null
@@ -1 +0,0 @@
-mutter-cogl-11.vapi
\ No newline at end of file
diff --git a/vapi/mutter-cogl-pango-10.vapi b/vapi/mutter-cogl-pango-10.vapi
deleted file mode 120000
index b099ea404..000000000
--- a/vapi/mutter-cogl-pango-10.vapi
+++ /dev/null
@@ -1 +0,0 @@
-mutter-cogl-pango.vapi
\ No newline at end of file
diff --git a/vapi/mutter-cogl-pango-11.vapi b/vapi/mutter-cogl-pango-11.vapi
deleted file mode 120000
index 08e43243c..000000000
--- a/vapi/mutter-cogl-pango-11.vapi
+++ /dev/null
@@ -1 +0,0 @@
-mutter-cogl-pango-10.vapi
\ No newline at end of file
diff --git a/vapi/mutter-cogl-pango-12.vapi b/vapi/mutter-cogl-pango-12.vapi
deleted file mode 120000
index 1be4af87b..000000000
--- a/vapi/mutter-cogl-pango-12.vapi
+++ /dev/null
@@ -1 +0,0 @@
-mutter-cogl-pango-11.vapi
\ No newline at end of file

From b191a9d683cb54636975866813d8c791ef6b1ecc Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Danielle=20For=C3=A9?= <danielle@elementary.io>
Date: Sun, 10 Nov 2024 12:30:50 -0800
Subject: [PATCH 2/5] Get rid of more ifdef

---
 vapi/libmutter.vapi      | 164 +--------------------------------------
 vapi/mutter-clutter.vapi | 151 +----------------------------------
 vapi/mutter-cogl.vapi    |  50 ------------
 3 files changed, 3 insertions(+), 362 deletions(-)

diff --git a/vapi/libmutter.vapi b/vapi/libmutter.vapi
index a5a2a9cf6..c531f6f35 100644
--- a/vapi/libmutter.vapi
+++ b/vapi/libmutter.vapi
@@ -66,11 +66,7 @@ namespace Meta {
 		[CCode (cheader_filename = "meta/prefs.h")]
 		public static int get_mouse_button_menu ();
 		[CCode (cheader_filename = "meta/prefs.h")]
-#if HAS_MUTTER44
 		public static Clutter.ModifierType get_mouse_button_mods ();
-#else
-		public static Meta.VirtualModifier get_mouse_button_mods ();
-#endif
 		[CCode (cheader_filename = "meta/prefs.h")]
 		public static int get_mouse_button_resize ();
 		[CCode (cheader_filename = "meta/prefs.h")]
@@ -112,31 +108,19 @@ namespace Meta {
 #if !HAS_MUTTER47
 		[CCode (cheader_filename = "meta/util.h", cname = "meta_get_locale_direction")]
 		public static Meta.LocaleDirection get_locale_direction ();
-#endif
-#if !HAS_MUTTER43
-		[CCode (cheader_filename = "meta/util.h", cname = "meta_is_syncing")]
-		public static bool is_syncing ();
 #endif
 		[CCode (cheader_filename = "meta/util.h", cname = "meta_is_verbose")]
 		public static bool is_verbose ();
 		[CCode (cheader_filename = "meta/util.h", cname = "meta_is_wayland_compositor")]
 		public static bool is_wayland_compositor ();
-#if !HAS_MUTTER44
-		[CCode (cheader_filename = "meta/util.h", cname = "meta_later_add")]
-		public static uint later_add (Meta.LaterType when, owned GLib.SourceFunc func);
-		[CCode (cheader_filename = "meta/util.h", cname = "meta_later_remove")]
-		public static void later_remove (uint later_id);
-#endif
 		[CCode (cheader_filename = "meta/util.h", cname = "meta_pop_no_msg_prefix")]
 		public static void pop_no_msg_prefix ();
 		[CCode (cheader_filename = "meta/util.h", cname = "meta_push_no_msg_prefix")]
 		public static void push_no_msg_prefix ();
 		[CCode (cheader_filename = "meta/util.h", cname = "meta_remove_verbose_topic")]
 		public static void remove_verbose_topic (Meta.DebugTopic topic);
-#if !HAS_MUTTER43
 		[CCode (cheader_filename = "meta/util.h", cname = "meta_show_dialog")]
 		public static GLib.Pid show_dialog (string type, string message, string? timeout = null, string? display = null, string? ok_text = null, string? cancel_text = null, string? icon_name = null, int transient_for = 0, GLib.SList<string>? columns = null, GLib.SList<string>? entries = null);
-#endif
 		[CCode (cheader_filename = "meta/util.h", cname = "meta_unsigned_long_equal")]
 		public static int ulong_equal ([CCode (type = "gconstpointer")] ulong? v1, [CCode (type = "gconstpointer")] ulong? v2);
 		[CCode (cheader_filename = "meta/util.h", cname = "meta_unsigned_long_hash")]
@@ -151,13 +135,7 @@ namespace Meta {
 #if HAS_MUTTER46
 		public void freeze_keyboard (uint32 timestamp);
 #endif
-#if !HAS_MUTTER44
-		[CCode (cheader_filename = "meta/meta-backend.h", cname = "meta_get_backend")]
-		public static unowned Meta.Backend get_backend ();
-#endif
-#if HAS_MUTTER43
 		public Meta.BackendCapabilities get_capabilities ();
-#endif
 		public unowned Meta.Context get_context ();
 		public unowned Meta.IdleMonitor get_core_idle_monitor ();
 		public unowned Meta.Dnd get_dnd ();
@@ -178,9 +156,7 @@ namespace Meta {
 #else
 		public void set_keymap (string layouts, string variants, string options);
 #endif
-#if HAS_MUTTER43
 		public Meta.BackendCapabilities capabilities { get; }
-#endif
 		public Meta.Context context { get; construct; }
 		public signal void keymap_changed ();
 		public signal void keymap_layout_group_changed (uint object);
@@ -279,36 +255,22 @@ namespace Meta {
 		public void purge (GLib.File file);
 	}
 	[CCode (cheader_filename = "meta/barrier.h", type_id = "meta_barrier_get_type ()")]
-#if HAS_MUTTER43
 	public class Barrier : GLib.Object, GLib.Initable {
 		[CCode (has_construct_function = false)]
-#if HAS_MUTTER45
 		public Barrier (Meta.Backend backend, int x1, int y1, int x2, int y2, Meta.BarrierDirection directions, Meta.BarrierFlags flags) throws GLib.Error;
-#else
-		public Barrier (Meta.Backend backend, int x1, int y1, int x2, int y2, Meta.BarrierDirection directions) throws GLib.Error;
-#endif
-#else
-	public class Barrier : GLib.Object {
-		[CCode (has_construct_function = false)]
-		protected Barrier ();
-#endif
 		public void destroy ();
 		public bool is_active ();
 		public void release (Meta.BarrierEvent event);
-#if HAS_MUTTER43
 		[NoAccessorMethod]
 		public Meta.Backend backend { owned get; construct; }
-#endif
 		[NoAccessorMethod]
 		public Meta.BarrierDirection directions { get; construct; }
 #if !HAS_MUTTER46
 		[NoAccessorMethod]
 		public Meta.Display display { owned get; construct; }
 #endif
-#if HAS_MUTTER45
 		[NoAccessorMethod]
 		public Meta.BarrierFlags flags { get; construct; }
-#endif
 		[NoAccessorMethod]
 		public int x1 { get; construct; }
 		[NoAccessorMethod]
@@ -338,34 +300,8 @@ namespace Meta {
 	public abstract class Compositor : GLib.Object {
 		[CCode (has_construct_function = false)]
 		protected Compositor ();
-#if HAS_MUTTER44
 		public unowned Clutter.Actor get_feedback_group ();
-#else
-		public void add_window (Meta.Window window);
-		public void destroy ();
-		public bool filter_keybinding (Meta.KeyBinding binding);
-		public void flash_display (Meta.Display display);
-#endif
 		public unowned Meta.Laters get_laters ();
-#if !HAS_MUTTER44
-		public void hide_tile_preview ();
-		public void hide_window (Meta.Window window, Meta.CompEffect effect);
-		public void manage ();
-		public void queue_frame_drawn (Meta.Window window, bool no_delay_frame);
-		public void remove_window (Meta.Window window);
-		public void show_tile_preview (Meta.Window window, Meta.Rectangle tile_rect, int tile_monitor_number);
-		public void show_window (Meta.Window window, Meta.CompEffect effect);
-		public void show_window_menu (Meta.Window window, Meta.WindowMenuType menu, int x, int y);
-		public void show_window_menu_for_rect (Meta.Window window, Meta.WindowMenuType menu, Meta.Rectangle rect);
-		public void size_change_window (Meta.Window window, Meta.SizeChange which_change, Meta.Rectangle old_frame_rect, Meta.Rectangle old_buffer_rect);
-		public void switch_workspace (Meta.Workspace from, Meta.Workspace to, Meta.MotionDirection direction);
-		public void sync_stack (GLib.List<Meta.Window> stack);
-		public void sync_updates_frozen (Meta.Window window);
-		public void sync_window_geometry (Meta.Window window, bool did_placement);
-		public void unmanage ();
-		public void window_opacity_changed (Meta.Window window);
-		public void window_shape_changed (Meta.Window window);
-#endif
 		[NoAccessorMethod]
 		public Meta.Backend backend { owned get; construct; }
 		[NoAccessorMethod]
@@ -408,10 +344,8 @@ namespace Meta {
 #endif
 		[NoAccessorMethod]
 		public bool unsafe_mode { get; set; }
-#if HAS_MUTTER44
 		public signal void prepare_shutdown ();
 		public signal void started ();
-#endif
 	}
 	[CCode (cheader_filename = "meta/meta-cursor-tracker.h", type_id = "meta_cursor_tracker_get_type ()")]
 	public class CursorTracker : GLib.Object {
@@ -445,22 +379,13 @@ namespace Meta {
 	public class Display : GLib.Object {
 		[CCode (has_construct_function = false)]
 		protected Display ();
-#if !HAS_MUTTER44
-		public void add_ignored_crossing_serial (ulong serial);
-#endif
 		public uint add_keybinding (string name, GLib.Settings settings, Meta.KeyBindingFlags flags, owned Meta.KeyHandlerFunc handler);
-#if !HAS_MUTTER44
-		public bool begin_grab_op (Meta.Window window, Meta.GrabOp op, bool pointer_already_grabbed, bool frame_action, int button, ulong modmask, uint32 timestamp, int root_x, int root_y);
-#endif
 		public void clear_mouse_mode ();
 		public void close (uint32 timestamp);
 		[CCode (cheader_filename = "meta/compositor-mutter.h", cname = "meta_disable_unredirect_for_display")]
 		public void disable_unredirect ();
 		[CCode (cheader_filename = "meta/compositor-mutter.h", cname = "meta_enable_unredirect_for_display")]
 		public void enable_unredirect ();
-#if !HAS_MUTTER44
-		public void end_grab_op (uint32 timestamp);
-#endif
 		public void focus_default_window (uint32 timestamp);
 #if !HAS_MUTTER46
 		[CCode (cheader_filename = "meta/compositor-mutter.h", cname = "meta_focus_stage_window")]
@@ -480,9 +405,6 @@ namespace Meta {
 		public unowned Clutter.Actor get_feedback_group ();
 #endif
 		public unowned Meta.Window get_focus_window ();
-#if !HAS_MUTTER44
-		public Meta.GrabOp get_grab_op ();
-#endif
 		public uint get_keybinding_action (uint keycode, ulong mask);
 		public uint32 get_last_user_time ();
 #if HAS_MUTTER45
@@ -491,20 +413,12 @@ namespace Meta {
 		public Meta.Rectangle get_monitor_geometry (int monitor);
 #endif
 		public bool get_monitor_in_fullscreen (int monitor);
-#if HAS_MUTTER45
 		public int get_monitor_index_for_rect (Mtk.Rectangle rect);
-#else
-		public int get_monitor_index_for_rect (Meta.Rectangle rect);
-#endif
 		public int get_monitor_neighbor_index (int which_monitor, Meta.DisplayDirection dir);
 		public float get_monitor_scale (int monitor);
 		public int get_n_monitors ();
-#if HAS_MUTTER45
 		public string get_pad_button_label (Clutter.InputDevice pad, int button_number);
 		public string get_pad_feature_label (Clutter.InputDevice pad, Meta.PadFeatureType feature, Meta.PadDirection direction, int feature_number);
-#else
-		public string get_pad_action_label (Clutter.InputDevice pad, Meta.PadActionType action_type, uint action_number);
-#endif
 		public int get_primary_monitor ();
 		public unowned Meta.Selection get_selection ();
 		public void get_size (out int width, out int height);
@@ -524,9 +438,7 @@ namespace Meta {
 		public unowned Meta.WorkspaceManager get_workspace_manager ();
 		public unowned Meta.X11Display get_x11_display ();
 		public uint grab_accelerator (string accelerator, Meta.KeyBindingFlags flags);
-#if HAS_MUTTER44
 		public bool is_grabbed ();
-#endif
 		public bool is_pointer_emulating_sequence (Clutter.EventSequence? sequence);
 		public GLib.List<weak Meta.Window> list_all_windows ();
 		public bool remove_keybinding (string name);
@@ -639,27 +551,17 @@ namespace Meta {
 	[Compact]
 	public class KeyBinding {
 		public uint get_mask ();
-#if HAS_MUTTER44
 		public Clutter.ModifierType get_modifiers ();
-#else
-		public Meta.VirtualModifier get_modifiers ();
-#endif
 		public unowned string get_name ();
 		public bool is_builtin ();
 		public bool is_reversed ();
 		[CCode (cheader_filename = "meta/keybindings.h", cname = "meta_keybindings_set_custom_handler")]
 		public static bool set_custom_handler (string name, owned Meta.KeyHandlerFunc? handler);
 	}
-#if HAS_MUTTER44
 	[CCode (cheader_filename = "meta/types.h", type_id = "meta_laters_get_type ()")]
 	public class Laters : GLib.Object {
 		[CCode (has_construct_function = false)]
 		protected Laters ();
-#else
-	[CCode (cheader_filename = "meta/types.h", has_type_id = false)]
-	[Compact]
-	public class Laters {
-#endif
 		public uint add (Meta.LaterType when, owned GLib.SourceFunc func);
 		public void remove (uint later_id);
 	}
@@ -681,12 +583,7 @@ namespace Meta {
 		[CCode (has_construct_function = false)]
 		protected MonitorManager ();
 		public bool can_switch_config ();
-#if HAS_MUTTER44
 		public int get_display_configuration_timeout ();
-#else
-		public static unowned Meta.MonitorManager @get ();
-		public static int get_display_configuration_timeout ();
-#endif
 		public bool get_is_builtin_display_on ();
 		public int get_monitor_for_connector (string connector);
 		public bool get_panel_orientation_managed ();
@@ -700,10 +597,8 @@ namespace Meta {
 #endif
 		[NoAccessorMethod]
 		public bool has_builtin_panel { get; }
-#if HAS_MUTTER43
 		[NoAccessorMethod]
 		public bool night_light_supported { get; }
-#endif
 		public bool panel_orientation_managed { get; }
 		public signal void confirm_display_change ();
 		public signal void monitors_changed ();
@@ -954,10 +849,8 @@ namespace Meta {
 		public unowned string? get_wmclass ();
 		public int get_workspace ();
 		public string application_id { get; construct; }
-#if HAS_MUTTER44
 		[NoAccessorMethod]
 		public Meta.Display display { owned get; construct; }
-#endif
 		public string icon_name { get; construct; }
 		public string id { get; construct; }
 		public string name { get; construct; }
@@ -982,11 +875,7 @@ namespace Meta {
 	[CCode (cheader_filename = "meta/meta-wayland-client.h", type_id = "meta_wayland_client_get_type ()")]
 	public sealed class WaylandClient : GLib.Object {
 		[CCode (has_construct_function = false)]
-#if HAS_MUTTER44
 		public WaylandClient (Meta.Context context, GLib.SubprocessLauncher launcher) throws GLib.Error;
-#else
-		public WaylandClient (GLib.SubprocessLauncher launcher) throws GLib.Error;
-#endif
 		public void hide_from_window_list (Meta.Window window);
 #if HAS_MUTTER45
 		public void make_desktop (Meta.Window window);
@@ -998,9 +887,7 @@ namespace Meta {
 		public void show_in_window_list (Meta.Window window);
 		public GLib.Subprocess spawn (Meta.Display display, GLib.Error? error, string argv0, ...);
 		public GLib.Subprocess spawnv (Meta.Display display, [CCode (array_length = false, array_null_terminated = true)] string[] argv) throws GLib.Error;
-#if HAS_MUTTER44
 		public signal void client_destroyed ();
-#endif
 	}
 #if HAS_MUTTER45
 	[CCode (cheader_filename = "meta/meta-wayland-compositor.h", type_id = "meta_wayland_compositor_get_type ()")]
@@ -1029,11 +916,7 @@ namespace Meta {
 	}
 #endif
 	[CCode (cheader_filename = "meta/window.h", type_id = "meta_window_get_type ()")]
-#if HAS_MUTTER44
 	public abstract class Window : GLib.Object, GLib.Initable {
-#else
-	public abstract class Window : GLib.Object {
-#endif
 		[CCode (has_construct_function = false)]
 		protected Window ();
 		public void activate (uint32 current_time);
@@ -1042,10 +925,8 @@ namespace Meta {
 		public bool allows_resize ();
 #if HAS_MUTTER46
 		public bool begin_grab_op (Meta.GrabOp op, Clutter.InputDevice? device, Clutter.EventSequence? sequence, uint32 timestamp, Graphene.Point? pos_hint);
-#elif HAS_MUTTER44
-		public bool begin_grab_op (Meta.GrabOp op, Clutter.InputDevice? device, Clutter.EventSequence? sequence, uint32 timestamp);
 #else
-		public void begin_grab_op (Meta.GrabOp op, bool frame_action, uint32 timestamp);
+		public bool begin_grab_op (Meta.GrabOp op, Clutter.InputDevice? device, Clutter.EventSequence? sequence, uint32 timestamp);
 #endif
 		public bool can_close ();
 		public bool can_maximize ();
@@ -1230,11 +1111,9 @@ namespace Meta {
 		public bool decorated { get; }
 		[NoAccessorMethod]
 		public bool demands_attention { get; }
-#if HAS_MUTTER44
 		public Meta.Display display { get; construct; }
 		[NoAccessorMethod]
 		public int effect { get; construct; }
-#endif
 		[NoAccessorMethod]
 		public bool fullscreen { get; }
 		public string gtk_app_menu_object_path { get; }
@@ -1276,7 +1155,7 @@ namespace Meta {
 		public uint user_time { get; }
 		public Meta.WindowType window_type { get; }
 		public string wm_class { get; }
-#if HAS_MUTTER44 && !HAS_MUTTER47
+#if HAS_MUTTER46 && !HAS_MUTTER47
 		public ulong xwindow { get; construct; }
 #endif
 		[CCode (cname = "focus")]
@@ -1417,9 +1296,6 @@ namespace Meta {
 	public sealed class X11Display : GLib.Object {
 		[CCode (has_construct_function = false)]
 		protected X11Display ();
-#if !HAS_MUTTER44
-		public void clear_stage_input_region ();
-#endif
 #if !HAS_MUTTER47
 		[CCode (cheader_filename = "meta/meta-x11-errors.h", cname = "meta_x11_error_trap_pop")]
 		public void error_trap_pop ();
@@ -1457,10 +1333,6 @@ namespace Meta {
 #else
 		public void set_stage_input_region (X.XserverRegion region);
 #endif
-#if !HAS_MUTTER44
-		[CCode (cheader_filename = "meta/meta-x11-display.h", cname = "meta_x11_init_gdk_display")]
-		public static bool x11_init_gdk_display () throws GLib.Error;
-#endif
 #if !HAS_MUTTER45
 		public bool xwindow_is_a_no_focus_window (X.Window xwindow);
 #endif
@@ -1506,7 +1378,6 @@ namespace Meta {
 		public Meta.Side side_type;
 		public Meta.EdgeType edge_type;
 	}
-#if HAS_MUTTER44
 	[CCode (cheader_filename = "meta/main.h", has_type_id = false)]
 	public struct FrameBorder {
 		public int16 left;
@@ -1514,18 +1385,11 @@ namespace Meta {
 		public int16 top;
 		public int16 bottom;
 	}
-#endif
 	[CCode (cheader_filename = "meta/common.h", has_type_id = false)]
 	public struct FrameBorders {
-#if HAS_MUTTER44
 		public Meta.FrameBorder visible;
 		public Meta.FrameBorder invisible;
 		public Meta.FrameBorder total;
-#else
-		public Gtk.Border visible;
-		public Gtk.Border invisible;
-		public Gtk.Border total;
-#endif
 		public void clear ();
 	}
 	[CCode (cheader_filename = "meta/meta-plugin.h", has_type_id = false)]
@@ -1575,14 +1439,12 @@ namespace Meta {
 #endif
 		public Meta.Side side;
 	}
-#if HAS_MUTTER43
 	[CCode (cheader_filename = "meta/main.h", cprefix = "META_BACKEND_CAPABILITY_", type_id = "meta_backend_capabilities_get_type ()")]
 	[Flags]
 	public enum BackendCapabilities {
 		NONE,
 		BARRIERS
 	}
-#endif
 	[CCode (cheader_filename = "meta/barrier.h", cprefix = "META_BARRIER_DIRECTION_", type_id = "meta_barrier_direction_get_type ()")]
 	[Flags]
 	public enum BarrierDirection {
@@ -1688,9 +1550,7 @@ namespace Meta {
 		SCREEN_CAST,
 		REMOTE_DESKTOP,
 		BACKEND,
-#if HAS_MUTTER43
 		COLOR,
-#endif
 #if HAS_MUTTER45
 		INPUT_EVENTS,
 		EIS,
@@ -1779,14 +1639,8 @@ namespace Meta {
 	public enum GrabOp {
 		NONE,
 		WINDOW_BASE,
-#if !HAS_MUTTER44
-		WAYLAND_POPUP,
-		FRAME_BUTTON,
-#endif
 		MOVING,
-#if HAS_MUTTER44
 		MOVING_UNCONSTRAINED,
-#endif
 		RESIZING_NW,
 		RESIZING_N,
 		RESIZING_NE,
@@ -1939,7 +1793,6 @@ namespace Meta {
 #endif
 		NO_AUTO_GRAB
 	}
-#if HAS_MUTTER43
 	[CCode (cheader_filename = "meta/meta-enums.h", cprefix = "META_A11Y_", type_id = "meta_keyboard_a11y_flags_get_type ()")]
 	[Flags]
 	public enum KeyboardA11yFlags {
@@ -1958,7 +1811,6 @@ namespace Meta {
 		STICKY_KEYS_BEEP,
 		FEATURE_STATE_CHANGE_BEEP
 	}
-#endif
 	[CCode (cheader_filename = "meta/util.h", cprefix = "META_LATER_", type_id = "meta_later_type_get_type ()")]
 	public enum LaterType {
 		RESIZE,
@@ -2120,9 +1972,7 @@ namespace Meta {
 		MAXIMIZE,
 		UNMAXIMIZE,
 		FULLSCREEN,
-#if HAS_MUTTER43
 		MONITOR_MOVE,
-#endif
 		UNFULLSCREEN
 	}
 	[CCode (cheader_filename = "meta/common.h", cprefix = "META_LAYER_", type_id = "meta_stack_layer_get_type ()")]
@@ -2214,10 +2064,8 @@ namespace Meta {
 	public const int VIRTUAL_CORE_KEYBOARD_ID;
 	[CCode (cheader_filename = "meta/common.h", cname = "META_VIRTUAL_CORE_POINTER_ID")]
 	public const int VIRTUAL_CORE_POINTER_ID;
-#if HAS_MUTTER44
 	[CCode (cheader_filename = "meta/main.h")]
 	public static string accelerator_name (Clutter.ModifierType accelerator_mods, uint accelerator_key);
-#endif
 	[CCode (cheader_filename = "meta/main.h")]
 	public static void add_clutter_debug_flags (Clutter.DebugFlag debug_flags, Clutter.DrawDebugFlag draw_flags, Clutter.PickDebugFlag pick_flags);
 	[CCode (cheader_filename = "meta/main.h")]
@@ -2228,29 +2076,21 @@ namespace Meta {
 #endif
 	[CCode (cheader_filename = "meta/main.h")]
 	public static void exit (Meta.ExitCode code);
-#if HAS_MUTTER44
 	[CCode (cheader_filename = "meta/main.h")]
 	public static void get_clutter_debug_flags (out Clutter.DebugFlag debug_flags, out Clutter.DrawDebugFlag draw_flags, out Clutter.PickDebugFlag pick_flags);
-#endif
 	[CCode (cheader_filename = "meta/main.h")]
 	public static Meta.DebugPaintFlag get_debug_paint_flags ();
 	[CCode (cheader_filename = "meta/main.h")]
 	public static bool is_restart ();
 	[CCode (cheader_filename = "meta/main.h")]
 	public static bool is_topic_enabled (Meta.DebugTopic topic);
-#if HAS_MUTTER44
 	[CCode (cheader_filename = "meta/main.h")]
 	public static void log (string format, ...);
-#endif
 	[CCode (cheader_filename = "meta/main.h")]
 	public static void remove_clutter_debug_flags (Clutter.DebugFlag debug_flags, Clutter.DrawDebugFlag draw_flags, Clutter.PickDebugFlag pick_flags);
 	[CCode (cheader_filename = "meta/main.h")]
 	public static void remove_debug_paint_flag (Meta.DebugPaintFlag flag);
 	[CCode (cheader_filename = "meta/main.h")]
-#if HAS_MUTTER43
 	public static void restart (string? message, Meta.Context context);
-#else
-	public static void restart (string? message);
-#endif
 }
 
diff --git a/vapi/mutter-clutter.vapi b/vapi/mutter-clutter.vapi
index 3c5ff67a9..820c59f5e 100644
--- a/vapi/mutter-clutter.vapi
+++ b/vapi/mutter-clutter.vapi
@@ -4627,10 +4627,8 @@ namespace Clutter {
 		[NoWrapper]
 		public virtual bool register_sequence (Clutter.Event event);
 #endif
-#if HAS_MUTTER44
 		[NoWrapper]
 		public virtual void sequence_cancelled (Clutter.InputDevice device, Clutter.EventSequence sequence);
-#endif
 #if HAS_MUTTER47
 		[NoWrapper]
 		public virtual int setup_sequence_relationship (Clutter.Action action_2, Clutter.InputDevice device, Clutter.EventSequence sequence);
@@ -4698,9 +4696,7 @@ namespace Clutter {
 		public GLib.List<weak Clutter.Actor> get_children ();
 		public void get_clip (out float xoff, out float yoff, out float width, out float height);
 		public bool get_clip_to_allocation ();
-#if HAS_MUTTER43
 		public unowned Clutter.ColorState get_color_state ();
-#endif
 		public unowned Clutter.Constraint? get_constraint (string name);
 		public GLib.List<weak Clutter.Constraint> get_constraints ();
 		public unowned Clutter.Content? get_content ();
@@ -4710,9 +4706,6 @@ namespace Clutter {
 		public void get_content_scaling_filters (out Clutter.ScalingFilter min_filter, out Clutter.ScalingFilter mag_filter);
 #if HAS_MUTTER47
 		public unowned Clutter.Context get_context ();
-#endif
-#if !HAS_MUTTER44
-		public unowned Clutter.PaintVolume? get_default_paint_volume ();
 #endif
 		public uint get_easing_delay ();
 		public uint get_easing_duration ();
@@ -4870,9 +4863,7 @@ namespace Clutter {
 		public void set_child_transform (Graphene.Matrix? transform);
 		public void set_clip (float xoff, float yoff, float width, float height);
 		public void set_clip_to_allocation (bool clip_set);
-#if HAS_MUTTER43
 		public void set_color_state (Clutter.ColorState? color_state);
-#endif
 		public void set_content (Clutter.Content? content);
 		public void set_content_gravity (Clutter.ContentGravity gravity);
 		public void set_content_repeat (Clutter.ContentRepeat repeat);
@@ -4947,9 +4938,7 @@ namespace Clutter {
 		[NoAccessorMethod]
 		public Graphene.Rect clip_rect { owned get; set; }
 		public bool clip_to_allocation { get; set; }
-#if HAS_MUTTER43
 		public Clutter.ColorState color_state { get; set construct; }
-#endif
 		[NoAccessorMethod]
 		public Clutter.Constraint constraints { set; }
 		public Clutter.Content content { get; set; }
@@ -5157,9 +5146,6 @@ namespace Clutter {
 	public class AnyEvent : Clutter.Event {
 #if !HAS_MUTTER45
 		public Clutter.EventFlags flags;
-#if !HAS_MUTTER43
-		public weak Clutter.Actor source;
-#endif
 		public weak Clutter.Stage stage;
 		public uint32 time;
 		public Clutter.EventType type;
@@ -5310,9 +5296,6 @@ namespace Clutter {
 		public uint32 evdev_code;
 		public Clutter.EventFlags flags;
 		public Clutter.ModifierType modifier_state;
-#if !HAS_MUTTER43
-		public weak Clutter.Actor source;
-#endif
 		public weak Clutter.Stage stage;
 		public uint32 time;
 		public Clutter.EventType type;
@@ -5399,7 +5382,6 @@ namespace Clutter {
 		public ColorNode (Clutter.Color? color);
 #endif
 	}
-#if HAS_MUTTER43
 	[CCode (cheader_filename = "clutter/clutter.h", type_id = "clutter_color_state_get_type ()")]
 	public sealed class ColorState : GLib.Object {
 		[CCode (has_construct_function = false)]
@@ -5435,7 +5417,6 @@ namespace Clutter {
 		public Clutter.TransferFunction transfer_function { get; construct; }
 #endif
 	}
-#endif
 	[CCode (cheader_filename = "clutter/clutter.h", type_id = "clutter_colorize_effect_get_type ()")]
 	public class ColorizeEffect : Clutter.OffscreenEffect {
 		[CCode (has_construct_function = false, type = "ClutterEffect*")]
@@ -5486,9 +5467,6 @@ namespace Clutter {
 		public Clutter.EventFlags flags;
 		public weak Clutter.Actor related;
 		public weak Clutter.EventSequence sequence;
-#if !HAS_MUTTER43
-		public weak Clutter.Actor source;
-#endif
 		public weak Clutter.Stage stage;
 		public uint32 time;
 		public Clutter.EventType type;
@@ -5547,9 +5525,6 @@ namespace Clutter {
 #if !HAS_MUTTER45
 		public weak Clutter.InputDevice device;
 		public Clutter.EventFlags flags;
-#if !HAS_MUTTER43
-		public weak Clutter.Actor source;
-#endif
 		public weak Clutter.Stage stage;
 		public uint32 time;
 		public Clutter.EventType type;
@@ -5730,14 +5705,9 @@ namespace Clutter {
 		public float row_spacing { get; set; }
 		public bool snap_to_grid { get; set; }
 	}
-#if HAS_MUTTER44
 	[CCode (cheader_filename = "clutter/clutter.h", ref_function = "clutter_frame_ref", type_id = "clutter_frame_get_type ()", unref_function = "clutter_frame_unref")]
-#else
-	[CCode (cheader_filename = "clutter/clutter.h", has_type_id = false)]
-#endif
 	[Compact]
 	public class Frame {
-#if HAS_MUTTER44
 		public int64 get_count ();
 #if HAS_MUTTER46
 		public bool get_frame_deadline (int64 frame_deadline_us);
@@ -5745,15 +5715,10 @@ namespace Clutter {
 		public bool get_min_render_time_allowed (int64 min_render_time_allowed_us);
 #endif
 		public bool get_target_presentation_time (int64 target_presentation_time_us);
-#endif
 		public bool has_result ();
-#if HAS_MUTTER44
 		public unowned Clutter.Frame @ref ();
-#endif
 		public void set_result (Clutter.FrameResult result);
-#if HAS_MUTTER44
 		public void unref ();
-#endif
 	}
 	[CCode (cheader_filename = "clutter/clutter.h", type_id = "clutter_frame_clock_get_type ()")]
 	public sealed class FrameClock : GLib.Object {
@@ -5890,16 +5855,11 @@ namespace Clutter {
 	[Compact]
 	public class IMEvent : Clutter.Event {
 #if !HAS_MUTTER45
-#if HAS_MUTTER44
 		public int32 anchor;
-#endif
 		public Clutter.EventFlags flags;
 		public uint32 len;
 		public Clutter.PreeditResetMode mode;
 		public int32 offset;
-#if !HAS_MUTTER43
-		public weak Clutter.Actor source;
-#endif
 		public weak Clutter.Stage stage;
 		public weak string text;
 		public uint32 time;
@@ -5923,16 +5883,12 @@ namespace Clutter {
 	public class InputDevice : GLib.Object {
 		[CCode (has_construct_function = false)]
 		protected InputDevice ();
-#if HAS_MUTTER43
 		public Clutter.InputCapabilities get_capabilities ();
-#endif
 		public Clutter.InputMode get_device_mode ();
 		public unowned string get_device_name ();
 		public unowned string get_device_node ();
 		public Clutter.InputDeviceType get_device_type ();
-#if HAS_MUTTER44
 		public virtual bool get_dimensions (out uint width, out uint height);
-#endif
 		public virtual int get_group_n_modes (int group);
 		public bool get_has_cursor ();
 		public int get_mode_switch_button_group (uint button);
@@ -5945,18 +5901,9 @@ namespace Clutter {
 		public unowned string get_product_id ();
 		public unowned Clutter.Seat get_seat ();
 		public unowned string get_vendor_id ();
-#if !HAS_MUTTER44
-		public void grab (Clutter.Actor actor);
-#endif
 		public virtual bool is_grouped (Clutter.InputDevice other_device);
 		public virtual bool is_mode_switch_button (uint group, uint button);
-#if !HAS_MUTTER44
-		[NoAccessorMethod]
-		public Clutter.Backend backend { owned get; construct; }
-#endif
-#if HAS_MUTTER43
 		public Clutter.InputCapabilities capabilities { get; construct; }
-#endif
 		public Clutter.InputMode device_mode { get; construct; }
 		public string device_node { get; construct; }
 		public Clutter.InputDeviceType device_type { get; construct; }
@@ -6011,11 +5958,7 @@ namespace Clutter {
 		public void set_cursor_location (Graphene.Rect rect);
 		public void set_input_panel_state (Clutter.InputPanelState state);
 		[NoWrapper]
-#if HAS_MUTTER44
 		public virtual void set_preedit_text (string preedit, uint cursor, uint anchor);
-#else
-		public virtual void set_preedit_text (string preedit, uint cursor);
-#endif
 		public void set_surrounding (string text, uint cursor, uint anchor);
 	}
 	[CCode (cheader_filename = "clutter/clutter.h", type_id = "clutter_input_method_get_type ()")]
@@ -6033,11 +5976,7 @@ namespace Clutter {
 		[NoWrapper]
 		public virtual void set_cursor_location (Graphene.Rect rect);
 		public void set_input_panel_state (Clutter.InputPanelState state);
-#if HAS_MUTTER44
 		public void set_preedit_text (string? preedit, uint cursor, uint anchor, Clutter.PreeditResetMode mode);
-#else
-		public void set_preedit_text (string? preedit, uint cursor, Clutter.PreeditResetMode mode);
-#endif
 		[NoWrapper]
 		public virtual void set_surrounding (string text, uint cursor, uint anchor);
 		[NoWrapper]
@@ -6102,9 +6041,7 @@ namespace Clutter {
 		public uint16 hardware_keycode;
 		public uint keyval;
 		public Clutter.ModifierType modifier_state;
-#if HAS_MUTTER43
 		public weak Clutter.Actor source;
-#endif
 		public weak Clutter.Stage stage;
 		public uint32 time;
 		public Clutter.EventType type;
@@ -6232,9 +6169,6 @@ namespace Clutter {
 		public double dy_unaccel;
 		public Clutter.EventFlags flags;
 		public Clutter.ModifierType modifier_state;
-#if !HAS_MUTTER43
-		public weak Clutter.Actor source;
-#endif
 		public weak Clutter.Stage stage;
 		public uint32 time;
 		public int64 time_us;
@@ -6273,9 +6207,6 @@ namespace Clutter {
 		public Clutter.EventFlags flags;
 		public uint32 group;
 		public uint32 mode;
-#if !HAS_MUTTER43
-		public weak Clutter.Actor source;
-#endif
 		public weak Clutter.Stage stage;
 		public uint32 time;
 		public Clutter.EventType type;
@@ -6292,9 +6223,6 @@ namespace Clutter {
 		public uint32 mode;
 		public uint32 ring_number;
 		public Clutter.InputDevicePadSource ring_source;
-#if !HAS_MUTTER43
-		public weak Clutter.Actor source;
-#endif
 		public weak Clutter.Stage stage;
 		public uint32 time;
 		public Clutter.EventType type;
@@ -6308,9 +6236,6 @@ namespace Clutter {
 		public Clutter.EventFlags flags;
 		public uint32 group;
 		public uint32 mode;
-#if !HAS_MUTTER44
-		public weak Clutter.Actor source;
-#endif
 		public weak Clutter.Stage stage;
 		public uint32 strip_number;
 		public Clutter.InputDevicePadSource strip_source;
@@ -6497,9 +6422,6 @@ namespace Clutter {
 #if !HAS_MUTTER45
 		public weak Clutter.InputDevice device;
 		public Clutter.EventFlags flags;
-#if !HAS_MUTTER43
-		public weak Clutter.Actor source;
-#endif
 		public weak Clutter.Stage stage;
 		public uint32 time;
 		public Clutter.EventType type;
@@ -6574,9 +6496,6 @@ namespace Clutter {
 		public Clutter.EventFlags flags;
 		public Clutter.ModifierType modifier_state;
 		public Clutter.ScrollSource scroll_source;
-#if !HAS_MUTTER43
-		public weak Clutter.Actor source;
-#endif
 		public weak Clutter.Stage stage;
 		public uint32 time;
 		public Clutter.EventType type;
@@ -6756,16 +6675,11 @@ namespace Clutter {
 		public bool get_capture_final_size (Cairo.RectangleInt rect, out int out_width, out int out_height, out float out_scale);
 #endif
 		public unowned Clutter.Actor? get_device_actor (Clutter.InputDevice device, Clutter.EventSequence? sequence);
-#if HAS_MUTTER43
 		public unowned Clutter.Actor? get_event_actor (Clutter.Event event);
-#endif
 		public int64 get_frame_counter ();
 		public unowned Clutter.Actor? get_grab_actor ();
 		public unowned Clutter.Actor get_key_focus ();
 		public Clutter.Perspective get_perspective ();
-#if !HAS_MUTTER44
-		public bool get_throttle_motion_events ();
-#endif
 		public unowned string get_title ();
 		public Clutter.Grab grab (Clutter.Actor actor);
 #if HAS_MUTTER47
@@ -6796,16 +6710,11 @@ namespace Clutter {
 #endif
 		public void set_key_focus (Clutter.Actor? actor);
 		public void set_minimum_size (uint width, uint height);
-#if !HAS_MUTTER44
-		public void set_throttle_motion_events (bool throttle);
-#endif
 		public void set_title (string title);
 #if HAS_MUTTER46
 		public void update_device (Clutter.InputDevice device, Clutter.EventSequence sequence, Clutter.InputDevice source_device, Graphene.Point point, uint32 time, Clutter.Actor new_actor, Mtk.Region region, bool emit_crossing);
-#elif HAS_MUTTER44
-		public void update_device (Clutter.InputDevice device, Clutter.EventSequence sequence, Clutter.InputDevice source_device, Graphene.Point point, uint32 time, Clutter.Actor new_actor, Cairo.Region region, bool emit_crossing);
 #else
-		public void update_device (Clutter.InputDevice device, Clutter.EventSequence sequence, Graphene.Point point, uint32 time, Clutter.Actor new_actor, Cairo.Region region, bool emit_crossing);
+		public void update_device (Clutter.InputDevice device, Clutter.EventSequence sequence, Clutter.InputDevice source_device, Graphene.Point point, uint32 time, Clutter.Actor new_actor, Cairo.Region region, bool emit_crossing);
 #endif
 #if HAS_MUTTER45	
 		[NoAccessorMethod]
@@ -6815,30 +6724,15 @@ namespace Clutter {
 		public Clutter.Perspective perspective { get; }
 		public string title { get; set; }
 		public virtual signal void activate ();
-#if HAS_MUTTER44
 		public signal void after_paint (Clutter.StageView view, Clutter.Frame frame);
 		public signal void after_update (Clutter.StageView view, Clutter.Frame frame);
 		public virtual signal void before_paint (Clutter.StageView view, Clutter.Frame frame);
 		public signal void before_update (Clutter.StageView view, Clutter.Frame frame);
-#else
-		public signal void after_paint (Clutter.StageView view);
-		public signal void after_update (Clutter.StageView view);
-		public virtual signal void before_paint (Clutter.StageView view);
-		public signal void before_update (Clutter.StageView view);
-#endif
 #if HAS_MUTTER45 && !HAS_MUTTER47
 		public virtual signal void deactivate ();
 #endif
-#if HAS_MUTTER44
 		public virtual signal void paint_view (Clutter.StageView view, Cairo.Region redraw_clip, Clutter.Frame frame);
 		public signal void prepare_frame (Clutter.StageView view, Clutter.Frame frame);
-#else
-		public virtual signal void deactivate ();
-		public virtual signal void paint_view (Clutter.StageView view, Cairo.Region redraw_clip);
-#if HAS_MUTTER43
-		public signal void prepare_frame (Clutter.StageView view);
-#endif
-#endif
 	}
 #if !HAS_MUTTER47
 	[CCode (cheader_filename = "clutter/clutter.h", type_id = "clutter_stage_manager_get_type ()")]
@@ -6881,9 +6775,7 @@ namespace Clutter {
 #if HAS_MUTTER47
 		public Mtk.MonitorTransform get_transform ();
 #endif
-#if HAS_MUTTER44
 		public bool has_shadowfb ();
-#endif
 		public void invalidate_offscreen_blit_pipeline ();
 #if HAS_MUTTER45
 		[NoWrapper]
@@ -7272,9 +7164,6 @@ namespace Clutter {
 		public Clutter.EventFlags flags;
 		public Clutter.ModifierType modifier_state;
 		public weak Clutter.EventSequence sequence;
-#if !HAS_MUTTER43
-		public weak Clutter.Actor source;
-#endif
 		public weak Clutter.Stage stage;
 		public uint32 time;
 		public Clutter.EventType type;
@@ -7289,9 +7178,6 @@ namespace Clutter {
 		public Clutter.EventFlags flags;
 		public uint32 n_fingers;
 		public Clutter.TouchpadGesturePhase phase;
-#if !HAS_MUTTER43
-		public weak Clutter.Actor source;
-#endif
 		public weak Clutter.Stage stage;
 		public uint32 time;
 		public Clutter.EventType type;
@@ -7312,9 +7198,6 @@ namespace Clutter {
 		public uint n_fingers;
 		public Clutter.TouchpadGesturePhase phase;
 		public float scale;
-#if !HAS_MUTTER43
-		public weak Clutter.Actor source;
-#endif
 		public weak Clutter.Stage stage;
 		public uint32 time;
 		public Clutter.EventType type;
@@ -7333,9 +7216,6 @@ namespace Clutter {
 		public Clutter.EventFlags flags;
 		public uint n_fingers;
 		public Clutter.TouchpadGesturePhase phase;
-#if !HAS_MUTTER43
-		public weak Clutter.Actor source;
-#endif
 		public weak Clutter.Stage stage;
 		public uint32 time;
 		public Clutter.EventType type;
@@ -7808,7 +7688,6 @@ namespace Clutter {
 		RELEASED,
 		PRESSED
 	}
-#if HAS_MUTTER43
 	[CCode (cheader_filename = "clutter/clutter.h", cprefix = "CLUTTER_COLORSPACE_", type_id = "clutter_colorspace_get_type ()")]
 	public enum Colorspace {
 #if HAS_MUTTER47
@@ -7819,7 +7698,6 @@ namespace Clutter {
 		SRGB,
 		BT2020
 	}
-#endif
 	[CCode (cheader_filename = "clutter/clutter.h", cprefix = "CLUTTER_CONTENT_GRAVITY_", type_id = "clutter_content_gravity_get_type ()")]
 	public enum ContentGravity {
 		TOP_LEFT,
@@ -7966,13 +7844,6 @@ namespace Clutter {
 		IM_PREEDIT,
 		EVENT_LAST
 	}
-#if !HAS_MUTTER43
-	[CCode (cheader_filename = "clutter/clutter.h", cprefix = "CLUTTER_FEATURE_", type_id = "clutter_feature_flags_get_type ()")]
-	[Flags]
-	public enum FeatureFlags {
-		SHADERS_GLSL
-	}
-#endif
 #if !HAS_MUTTER46
 	[CCode (cheader_filename = "clutter/clutter.h", cprefix = "CLUTTER_FLOW_", type_id = "clutter_flow_orientation_get_type ()")]
 	public enum FlowOrientation {
@@ -8082,7 +7953,6 @@ namespace Clutter {
 		ROTATION,
 		SLIDER
 	}
-#if HAS_MUTTER43
 	[CCode (cheader_filename = "clutter/clutter.h", cprefix = "CLUTTER_INPUT_CAPABILITY_", type_id = "clutter_input_capabilities_get_type ()")]
 	[Flags]
 	public enum InputCapabilities {
@@ -8092,13 +7962,10 @@ namespace Clutter {
 		TOUCHPAD,
 		TOUCH,
 		TABLET_TOOL,
-#if HAS_MUTTER44
 		TRACKBALL,
 		TRACKPOINT,
-#endif
 		TABLET_PAD
 	}
-#endif
 	[CCode (cheader_filename = "clutter/clutter.h", cprefix = "CLUTTER_INPUT_CONTENT_HINT_", type_id = "clutter_input_content_hint_flags_get_type ()")]
 	[Flags]
 	public enum InputContentHintFlags {
@@ -8532,13 +8399,6 @@ namespace Clutter {
 		POINTER,
 		TOUCHSCREEN
 	}
-#if !HAS_MUTTER43
-	[CCode (cheader_filename = "clutter/clutter.h", cprefix = "CLUTTER_IMAGE_ERROR_INVALID_", type_id = "clutter_image_error_get_type ()")]
-	public errordomain ImageError {
-		DATA;
-		public static GLib.Quark quark ();
-	}
-#endif
 #if !HAS_MUTTER46
 	[CCode (cheader_filename = "clutter/clutter.h", cprefix = "CLUTTER_SCRIPT_ERROR_INVALID_", type_id = "clutter_script_error_get_type ()")]
 	public errordomain ScriptError {
@@ -8556,13 +8416,8 @@ namespace Clutter {
 	[CCode (cheader_filename = "clutter/clutter.h", instance_pos = 1.9)]
 	public delegate void Callback (Clutter.Actor actor);
 #endif
-#if HAS_MUTTER43
 	[CCode (cheader_filename = "clutter/clutter.h", instance_pos = 2.9)]
 	public delegate bool EventFilterFunc (Clutter.Event event, Clutter.Actor event_actor);
-#else
-	[CCode (cheader_filename = "clutter/clutter.h", instance_pos = 1.9)]
-	public delegate bool EventFilterFunc (Clutter.Event event);
-#endif
 #if !HAS_MUTTER46
 	[CCode (cheader_filename = "clutter/clutter.h", instance_pos = 1.9)]
 	public delegate void PathCallback (Clutter.PathNode node);
@@ -8639,18 +8494,14 @@ namespace Clutter {
 	[CCode (cheader_filename = "clutter/clutter.h")]
 	public static unowned string get_script_id (GLib.Object gobject);
 #endif
-#if HAS_MUTTER44
 	[CCode (cheader_filename = "clutter/clutter.h")]
 	public static Clutter.TextDirection get_text_direction ();
-#endif
 	[CCode (cheader_filename = "clutter/clutter.h")]
 	public static uint32 keysym_to_unicode (uint keyval);
-#if HAS_MUTTER44
 	[CCode (cheader_filename = "clutter/clutter.h")]
 	public static void keyval_convert_case (uint symbol, out uint lower, out uint upper);
 	[CCode (cheader_filename = "clutter/clutter.h")]
 	public static unowned string? keyval_name (uint keyval);
-#endif
 	[CCode (cheader_filename = "clutter/clutter.h")]
 	public static uint unicode_to_keysym (uint32 wc);
 }
diff --git a/vapi/mutter-cogl.vapi b/vapi/mutter-cogl.vapi
index 5858cde7a..b75cc6bc8 100644
--- a/vapi/mutter-cogl.vapi
+++ b/vapi/mutter-cogl.vapi
@@ -226,11 +226,9 @@ namespace Cogl {
 		[CCode (cheader_filename = "cogl/cogl.h", cname = "cogl_is_pipeline")]
 		[Version (since = "2.0")]
 		public bool is_pipeline ();
-#if HAS_MUTTER43
 		[CCode (cheader_filename = "cogl/cogl.h", cname = "cogl_is_snippet")]
 		[Version (since = "1.10")]
 		public bool is_snippet ();
-#endif
 		[CCode (cheader_filename = "cogl/cogl.h", cname = "cogl_is_texture")]
 		public bool is_texture ();
 		[CCode (cheader_filename = "cogl/cogl.h", cname = "cogl_is_texture_2d")]
@@ -286,12 +284,10 @@ namespace Cogl {
 		[CCode (has_construct_function = false)]
 		[Version (since = "2.0")]
 		public Pipeline (Cogl.Context context);
-#if HAS_MUTTER43
 		[Version (since = "1.10")]
 		public void add_layer_snippet (int layer, Cogl.Snippet snippet);
 		[Version (since = "1.10")]
 		public void add_snippet (Cogl.Snippet snippet);
-#endif
 		[Version (since = "2.0")]
 		public Cogl.Pipeline copy ();
 		[Version (since = "2.0")]
@@ -306,14 +302,7 @@ namespace Cogl {
 		public Cogl.PipelineCullFaceMode get_cull_face_mode ();
 		[Version (since = "2.0")]
 		public Cogl.Winding get_front_face_winding ();
-#if HAS_MUTTER44
 		public void get_layer_filters (int layer_index, out Cogl.PipelineFilter min_filter, out Cogl.PipelineFilter mag_filter);
-#else
-		[Version (since = "1.10")]
-		public Cogl.PipelineFilter get_layer_mag_filter (int layer_index);
-		[Version (since = "1.10")]
-		public Cogl.PipelineFilter get_layer_min_filter (int layer_index);
-#endif
 		[Version (since = "2.0")]
 		public bool get_layer_point_sprite_coords_enabled (int layer_index);
 		[Version (since = "1.10")]
@@ -480,7 +469,6 @@ namespace Cogl {
 		[Version (deprecated = true, deprecated_since = "1.16")]
 		public void source (string source);
 	}
-#if HAS_MUTTER43
 	[CCode (cheader_filename = "cogl/cogl.h", type_id = "cogl_snippet_get_gtype ()")]
 	public class Snippet : Cogl.Object {
 		[CCode (has_construct_function = false)]
@@ -505,7 +493,6 @@ namespace Cogl {
 		[Version (since = "1.10")]
 		public void set_replace (string replace);
 	}
-#endif
 	[CCode (cheader_filename = "cogl/cogl.h", lower_case_csuffix = "texture_2d", type_id = "cogl_texture_2d_get_gtype ()")]
 	public class Texture2D : Cogl.Object, Cogl.Texture {
 		[CCode (has_construct_function = false)]
@@ -538,17 +525,6 @@ namespace Cogl {
 	[CCode (cheader_filename = "cogl/cogl.h", type_id = "cogl_texture_get_gtype ()")]
 	public interface Texture : Cogl.Object {
 		public bool allocate () throws GLib.Error;
-#if !HAS_MUTTER43
-		[CCode (cheader_filename = "cogl/cogl.h", cname = "cogl_texture_new_from_bitmap")]
-		[Version (deprecated = true, deprecated_since = "1.18", replacement = "Texture.new_from_bitmap", since = "1.0")]
-		public static Cogl.Texture from_bitmap (Cogl.Bitmap bitmap, Cogl.TextureFlags flags, Cogl.PixelFormat internal_format);
-		[CCode (cheader_filename = "cogl/cogl.h", cname = "cogl_texture_new_from_data")]
-		[Version (deprecated = true, deprecated_since = "1.18", replacement = "Texture.new_from_data", since = "0.8")]
-		public static Cogl.Texture from_data (int width, int height, Cogl.TextureFlags flags, Cogl.PixelFormat format, Cogl.PixelFormat internal_format, int rowstride, [CCode (array_length = false)] uint8[] data);
-		[CCode (cheader_filename = "cogl/cogl.h", cname = "cogl_texture_new_from_file")]
-		[Version (deprecated = true, deprecated_since = "1.18", replacement = "Texture.new_from_file", since = "0.8")]
-		public static Cogl.Texture from_file (string filename, Cogl.TextureFlags flags, Cogl.PixelFormat internal_format) throws GLib.Error;
-#endif
 		[Version (since = "1.18")]
 		public Cogl.TextureComponents get_components ();
 		public int get_data (Cogl.PixelFormat format, uint rowstride, [CCode (array_length = false)] uint8[] data);
@@ -559,14 +535,6 @@ namespace Cogl {
 		public bool get_premultiplied ();
 		public uint get_width ();
 		public bool is_sliced ();
-#if !HAS_MUTTER43
-		[Version (deprecated = true, deprecated_since = "1.18", since = "1.0")]
-		public static Cogl.Texture new_from_bitmap (Cogl.Bitmap bitmap, Cogl.TextureFlags flags, Cogl.PixelFormat internal_format);
-		[Version (deprecated = true, deprecated_since = "1.18", since = "0.8")]
-		public static Cogl.Texture new_from_data (int width, int height, Cogl.TextureFlags flags, Cogl.PixelFormat format, Cogl.PixelFormat internal_format, int rowstride, [CCode (array_length = false)] uint8[] data);
-		[Version (deprecated = true, deprecated_since = "1.18", since = "0.8")]
-		public static Cogl.Texture new_from_file (string filename, Cogl.TextureFlags flags, Cogl.PixelFormat internal_format) throws GLib.Error;
-#endif
 		[Version (since = "1.18")]
 		public void set_components (Cogl.TextureComponents components);
 		public bool set_data (Cogl.PixelFormat format, int rowstride, [CCode (array_length = false)] uint8[] data, int level) throws GLib.Error;
@@ -969,7 +937,6 @@ namespace Cogl {
 		VERTEX,
 		FRAGMENT
 	}
-#if HAS_MUTTER43
 	[CCode (cheader_filename = "cogl/cogl.h", cprefix = "COGL_SNIPPET_HOOK_", has_type_id = false)]
 	[Version (since = "1.10")]
 	public enum SnippetHook {
@@ -983,7 +950,6 @@ namespace Cogl {
 		LAYER_FRAGMENT,
 		TEXTURE_LOOKUP
 	}
-#endif
 	[CCode (cheader_filename = "cogl/cogl.h", cprefix = "COGL_STEREO_", has_type_id = false)]
 	public enum StereoMode {
 		BOTH,
@@ -999,17 +965,6 @@ namespace Cogl {
 		RGBA,
 		DEPTH
 	}
-#if !HAS_MUTTER43
-	[CCode (cheader_filename = "cogl/cogl.h", cprefix = "COGL_TEXTURE_", has_type_id = false)]
-	[Flags]
-	[Version (since = "1.0")]
-	public enum TextureFlags {
-		NONE,
-		NO_AUTO_MIPMAP,
-		NO_SLICING,
-		NO_ATLAS
-	}
-#endif
 	[CCode (cheader_filename = "cogl/cogl.h", cprefix = "COGL_VERTICES_MODE_", has_type_id = false)]
 	[Version (since = "1.0")]
 	public enum VerticesMode {
@@ -1137,11 +1092,6 @@ namespace Cogl {
 	[CCode (cheader_filename = "cogl/cogl.h")]
 	[Version (since = "1.0")]
 	public static void flush ();
-#if !HAS_MUTTER44
-	[CCode (cheader_filename = "cogl/cogl.h")]
-	[Version (deprecated = true, deprecated_since = "1.16", since = "1.0")]
-	public static GLib.OptionGroup get_option_group ();
-#endif
 #if HAS_MUTTER45
 	[CCode (cheader_filename = "cogl/cogl.h")]
 	public static bool is_tracing ();

From fbbe57eace04d0de3aaa12736d5b17c25b166e05 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Danielle=20For=C3=A9?= <danielle@elementary.io>
Date: Sun, 10 Nov 2024 12:39:41 -0800
Subject: [PATCH 3/5] removing ifdef 45

---
 vapi/mutter-clutter.vapi | 404 +--------------------------------------
 vapi/mutter-cogl.vapi    |  21 --
 2 files changed, 2 insertions(+), 423 deletions(-)

diff --git a/vapi/mutter-clutter.vapi b/vapi/mutter-clutter.vapi
index 820c59f5e..96c23c520 100644
--- a/vapi/mutter-clutter.vapi
+++ b/vapi/mutter-clutter.vapi
@@ -4755,9 +4755,7 @@ namespace Clutter {
 		public virtual void get_preferred_width (float for_height, out float min_width_p, out float natural_width_p);
 		public unowned Clutter.Actor? get_previous_sibling ();
 		public bool get_reactive ();
-#if HAS_MUTTER45
 		public Graphene.Matrix get_relative_transformation_matrix (Clutter.Actor? ancestor);
-#endif
 		public Clutter.RequestMode get_request_mode ();
 		public float get_resource_scale ();
 		public double get_rotation_angle (Clutter.RotateAxis axis);
@@ -4814,9 +4812,7 @@ namespace Clutter {
 		public virtual void map ();
 		public void move_by (float dx, float dy);
 		public bool needs_expand (Clutter.Orientation orientation);
-#if HAS_MUTTER45
 		public void notify_transform_invalid ();
-#endif
 		public virtual void paint (Clutter.PaintContext paint_context);
 		[NoWrapper]
 #if HAS_MUTTER47
@@ -4827,11 +4823,7 @@ namespace Clutter {
 		public unowned GLib.List<Clutter.StageView> peek_stage_views ();
 		public void pick_box (Clutter.PickContext pick_context, Clutter.ActorBox box);
 		public void queue_redraw ();
-#if HAS_MUTTER45
 		public void queue_redraw_with_clip (Mtk.Rectangle? clip);
-#else
-		public void queue_redraw_with_clip (Cairo.RectangleInt? clip);
-#endif
 		public void remove_action (Clutter.Action action);
 		public void remove_action_by_name (string name);
 		public void remove_all_children ();
@@ -5036,13 +5028,8 @@ namespace Clutter {
 		public Clutter.ActorAlign y_align { get; set; }
 		public bool y_expand { get; set; }
 		public float z_position { get; set; }
-#if HAS_MUTTER45
 		public virtual signal bool button_press_event (Clutter.Event event);
 		public virtual signal bool button_release_event (Clutter.Event event);
-#else
-		public virtual signal bool button_press_event (Clutter.ButtonEvent event);
-		public virtual signal bool button_release_event (Clutter.ButtonEvent event);
-#endif
 		public virtual signal bool captured_event (Clutter.Event event);
 #if HAS_MUTTER46
 		public virtual signal void child_added (Clutter.Actor child);
@@ -5052,27 +5039,16 @@ namespace Clutter {
 #endif
 		[HasEmitter]
 		public virtual signal void destroy ();
-#if HAS_MUTTER45
 		public virtual signal bool enter_event (Clutter.Event event);
-#else
-		public virtual signal bool enter_event (Clutter.CrossingEvent event);
-#endif
 		public virtual signal bool event (Clutter.Event event);
 		[HasEmitter]
 		public virtual signal void hide ();
 		public virtual signal void key_focus_in ();
 		public virtual signal void key_focus_out ();
-#if HAS_MUTTER45
 		public virtual signal bool key_press_event (Clutter.Event event);
 		public virtual signal bool key_release_event (Clutter.Event event);
 		public virtual signal bool leave_event (Clutter.Event event);
 		public virtual signal bool motion_event (Clutter.Event event);
-#else
-		public virtual signal bool key_press_event (Clutter.KeyEvent event);
-		public virtual signal bool key_release_event (Clutter.KeyEvent event);
-		public virtual signal bool leave_event (Clutter.CrossingEvent event);
-		public virtual signal bool motion_event (Clutter.MotionEvent event);
-#endif
 		public virtual signal void parent_set (Clutter.Actor? old_parent);
 		[HasEmitter]
 		public virtual signal void pick (Clutter.PickContext pick_context);
@@ -5082,11 +5058,7 @@ namespace Clutter {
 		[Version (deprecated = true, deprecated_since = "1.16")]
 		public virtual signal void realize ();
 		public virtual signal void resource_scale_changed ();
-#if HAS_MUTTER45
 		public virtual signal bool scroll_event (Clutter.Event event);
-#else
-		public virtual signal bool scroll_event (Clutter.ScrollEvent event);
-#endif
 		[HasEmitter]
 		public virtual signal void show ();
 		public signal void stage_views_changed ();
@@ -5144,12 +5116,6 @@ namespace Clutter {
 	[CCode (cheader_filename = "clutter/clutter.h", has_type_id = false)]
 	[Compact]
 	public class AnyEvent : Clutter.Event {
-#if !HAS_MUTTER45
-		public Clutter.EventFlags flags;
-		public weak Clutter.Stage stage;
-		public uint32 time;
-		public Clutter.EventType type;
-#endif
 	}
 	[CCode (cheader_filename = "clutter/clutter.h", type_id = "clutter_backend_get_type ()")]
 	public abstract class Backend : GLib.Object {
@@ -5243,24 +5209,12 @@ namespace Clutter {
 		public BoxLayout ();
 		public bool get_homogeneous ();
 		public Clutter.Orientation get_orientation ();
-#if !HAS_MUTTER45
-		[Version (deprecated = true)]
-		public bool get_pack_start ();
-#endif
 		public uint get_spacing ();
 		public void set_homogeneous (bool homogeneous);
 		public void set_orientation (Clutter.Orientation orientation);
-#if !HAS_MUTTER45
-		[Version (deprecated = true)]
-		public void set_pack_start (bool pack_start);
-#endif
 		public void set_spacing (uint spacing);
 		public bool homogeneous { get; set; }
 		public Clutter.Orientation orientation { get; set; }
-#if !HAS_MUTTER45
-		[Version (deprecated = true)]
-		public bool pack_start { get; set; }
-#endif
 		public uint spacing { get; set; }
 	}
 	[CCode (cheader_filename = "clutter/clutter.h", type_id = "clutter_brightness_contrast_effect_get_type ()")]
@@ -5289,19 +5243,6 @@ namespace Clutter {
 	[CCode (cheader_filename = "clutter/clutter.h", has_type_id = false)]
 	[Compact]
 	public class ButtonEvent : Clutter.Event {
-#if !HAS_MUTTER45
-		public double axes;
-		public uint32 button;
-		public weak Clutter.InputDevice device;
-		public uint32 evdev_code;
-		public Clutter.EventFlags flags;
-		public Clutter.ModifierType modifier_state;
-		public weak Clutter.Stage stage;
-		public uint32 time;
-		public Clutter.EventType type;
-		public float x;
-		public float y;
-#endif
 	}
 #if !HAS_MUTTER46
 	[CCode (cheader_filename = "clutter/clutter.h", type_id = "clutter_canvas_get_type ()")]
@@ -5462,17 +5403,6 @@ namespace Clutter {
 	[CCode (cheader_filename = "clutter/clutter.h", has_type_id = false)]
 	[Compact]
 	public class CrossingEvent : Clutter.Event {
-#if !HAS_MUTTER45
-		public weak Clutter.InputDevice device;
-		public Clutter.EventFlags flags;
-		public weak Clutter.Actor related;
-		public weak Clutter.EventSequence sequence;
-		public weak Clutter.Stage stage;
-		public uint32 time;
-		public Clutter.EventType type;
-		public float x;
-		public float y;
-#endif
 	}
 	[CCode (cheader_filename = "clutter/clutter.h", type_id = "clutter_deform_effect_get_type ()")]
 	public abstract class DeformEffect : Clutter.OffscreenEffect {
@@ -5522,13 +5452,6 @@ namespace Clutter {
 	[CCode (cheader_filename = "clutter/clutter.h", has_type_id = false)]
 	[Compact]
 	public class DeviceEvent : Clutter.Event {
-#if !HAS_MUTTER45
-		public weak Clutter.InputDevice device;
-		public Clutter.EventFlags flags;
-		public weak Clutter.Stage stage;
-		public uint32 time;
-		public Clutter.EventType type;
-#endif
 	}
 	[CCode (cheader_filename = "clutter/clutter.h", type_id = "clutter_effect_get_type ()")]
 	public abstract class Effect : Clutter.ActorMeta {
@@ -5551,9 +5474,6 @@ namespace Clutter {
 	[CCode (cheader_filename = "clutter/clutter.h", copy_function = "g_boxed_copy", free_function = "g_boxed_free", type_id = "clutter_event_get_type ()")]
 	[Compact]
 	public class Event {
-#if !HAS_MUTTER45
-		public Clutter.EventType type;
-#endif
 #if !HAS_MUTTER46
 		[CCode (has_construct_function = false)]
 		public Event (Clutter.EventType type);
@@ -5578,12 +5498,10 @@ namespace Clutter {
 		public Clutter.TouchpadGesturePhase get_gesture_phase ();
 		public double get_gesture_pinch_angle_delta ();
 		public double get_gesture_pinch_scale ();
-#if HAS_MUTTER45
 		public uint32 get_im_delete_length ();
 		public bool get_im_location (int32 offset, int32 anchor);
 		public Clutter.PreeditResetMode get_im_preedit_reset_mode ();
 		public unowned string get_im_text ();
-#endif
 		public uint16 get_key_code ();
 #if HAS_MUTTER46
 		public void get_key_state (out Clutter.ModifierType pressed, out Clutter.ModifierType latched, out Clutter.ModifierType locked);
@@ -5591,18 +5509,10 @@ namespace Clutter {
 		public uint get_key_symbol ();
 		public unichar get_key_unicode ();
 		public uint get_mode_group ();
-#if HAS_MUTTER45
 		public bool get_pad_details (out uint number, out uint mode, out Clutter.InputDevicePadSource source, out double value);
-#else
-		public bool get_pad_event_details (out uint number, out uint mode, out double value);
-#endif
 		public Graphene.Point get_position ();
 		public unowned Clutter.Actor get_related ();
-#if HAS_MUTTER45
 		public bool get_relative_motion (double dx, double dy, double dx_unaccel, double dy_unaccel, double dx_constrained, double dy_constrained);
-#else
-		public bool get_relative_motion (double dx, double dy, double dx_unaccel, double dy_unaccel);
-#endif
 		public void get_scroll_delta (out double dx, out double dy);
 		public Clutter.ScrollDirection get_scroll_direction ();
 		public Clutter.ScrollFinishFlags get_scroll_finish_flags ();
@@ -5611,13 +5521,7 @@ namespace Clutter {
 		public unowned Clutter.Actor get_source ();
 #endif
 		public unowned Clutter.InputDevice get_source_device ();
-#if !HAS_MUTTER45
-		public unowned Clutter.Stage get_stage ();
-#endif
 		public Clutter.ModifierType get_state ();
-#if !HAS_MUTTER45
-		public void get_state_full (out Clutter.ModifierType button_state, out Clutter.ModifierType base_state, out Clutter.ModifierType latched_state, out Clutter.ModifierType locked_state, out Clutter.ModifierType effective_state);
-#endif
 		public uint32 get_time ();
 		public int64 get_time_us ();
 		public uint get_touchpad_gesture_finger_count ();
@@ -5628,24 +5532,6 @@ namespace Clutter {
 		public bool is_pointer_emulated ();
 		public void put ();
 		public static void remove_filter (uint id);
-#if !HAS_MUTTER45
-		public void set_button (uint32 button);
-		public void set_coords (float x, float y);
-		public void set_device (Clutter.InputDevice? device);
-		public void set_device_tool (Clutter.InputDeviceTool? tool);
-		public void set_flags (Clutter.EventFlags flags);
-		public void set_key_code (uint16 key_code);
-		public void set_key_symbol (uint key_sym);
-		public void set_key_unicode (unichar key_unicode);
-		public void set_related (Clutter.Actor? actor);
-		public void set_scroll_delta (double dx, double dy);
-		public void set_scroll_direction (Clutter.ScrollDirection direction);
-		public void set_source (Clutter.Actor? actor);
-		public void set_source_device (Clutter.InputDevice? device);
-		public void set_stage (Clutter.Stage? stage);
-		public void set_state (Clutter.ModifierType state);
-		public void set_time (uint32 time_);
-#endif
 	}
 	[CCode (cheader_filename = "clutter/clutter.h", copy_function = "g_boxed_copy", free_function = "g_boxed_free", type_id = "clutter_event_sequence_get_type ()")]
 	[Compact]
@@ -5711,7 +5597,7 @@ namespace Clutter {
 		public int64 get_count ();
 #if HAS_MUTTER46
 		public bool get_frame_deadline (int64 frame_deadline_us);
-#elif HAS_MUTTER45
+#else
 		public bool get_min_render_time_allowed (int64 min_render_time_allowed_us);
 #endif
 		public bool get_target_presentation_time (int64 target_presentation_time_us);
@@ -5854,28 +5740,13 @@ namespace Clutter {
 	[CCode (cheader_filename = "clutter/clutter.h", has_type_id = false)]
 	[Compact]
 	public class IMEvent : Clutter.Event {
-#if !HAS_MUTTER45
-		public int32 anchor;
-		public Clutter.EventFlags flags;
-		public uint32 len;
-		public Clutter.PreeditResetMode mode;
-		public int32 offset;
-		public weak Clutter.Stage stage;
-		public weak string text;
-		public uint32 time;
-		public Clutter.EventType type;
-#endif
 	}
 	[CCode (cheader_filename = "clutter/clutter.h", type_id = "clutter_image_get_type ()")]
 	public class Image : GLib.Object, Clutter.Content {
 		[CCode (has_construct_function = false, type = "ClutterContent*")]
 		public Image ();
 		public unowned Cogl.Texture get_texture ();
-#if HAS_MUTTER45
 		public bool set_area ([CCode (array_length = false)] uint8[] data, Cogl.PixelFormat pixel_format, Mtk.Rectangle rect, uint row_stride) throws GLib.Error;
-#else
-		public bool set_area ([CCode (array_length = false)] uint8[] data, Cogl.PixelFormat pixel_format, Cairo.RectangleInt rect, uint row_stride) throws GLib.Error;
-#endif
 		public bool set_bytes (GLib.Bytes data, Cogl.PixelFormat pixel_format, uint width, uint height, uint row_stride) throws GLib.Error;
 		public bool set_data ([CCode (array_length = false)] uint8[] data, Cogl.PixelFormat pixel_format, uint width, uint height, uint row_stride) throws GLib.Error;
 	}
@@ -5946,9 +5817,7 @@ namespace Clutter {
 		[NoWrapper]
 		public virtual void focus_out ();
 		public bool is_focused ();
-#if HAS_MUTTER45
 		public bool process_event (Clutter.Event event);
-#endif
 		[NoWrapper]
 		public virtual void request_surrounding ();
 		public void reset ();
@@ -6034,19 +5903,6 @@ namespace Clutter {
 	[CCode (cheader_filename = "clutter/clutter.h", has_type_id = false)]
 	[Compact]
 	public class KeyEvent : Clutter.Event {
-#if !HAS_MUTTER45
-		public weak Clutter.InputDevice device;
-		public uint32 evdev_code;
-		public Clutter.EventFlags flags;
-		public uint16 hardware_keycode;
-		public uint keyval;
-		public Clutter.ModifierType modifier_state;
-		public weak Clutter.Actor source;
-		public weak Clutter.Stage stage;
-		public uint32 time;
-		public Clutter.EventType type;
-		public unichar unicode_value;
-#endif
 	}
 	[CCode (cheader_filename = "clutter/clutter.h", type_id = "clutter_keyframe_transition_get_type ()")]
 #if HAS_MUTTER46
@@ -6160,22 +6016,6 @@ namespace Clutter {
 	[CCode (cheader_filename = "clutter/clutter.h", has_type_id = false)]
 	[Compact]
 	public class MotionEvent : Clutter.Event {
-#if !HAS_MUTTER45
-		public double axes;
-		public weak Clutter.InputDevice device;
-		public double dx;
-		public double dx_unaccel;
-		public double dy;
-		public double dy_unaccel;
-		public Clutter.EventFlags flags;
-		public Clutter.ModifierType modifier_state;
-		public weak Clutter.Stage stage;
-		public uint32 time;
-		public int64 time_us;
-		public Clutter.EventType type;
-		public float x;
-		public float y;
-#endif
 	}
 	[CCode (cheader_filename = "clutter/clutter.h", type_id = "clutter_offscreen_effect_get_type ()")]
 	public abstract class OffscreenEffect : Clutter.Effect {
@@ -6201,48 +6041,14 @@ namespace Clutter {
 	[CCode (cheader_filename = "clutter/clutter.h", has_type_id = false)]
 	[Compact]
 	public class PadButtonEvent : Clutter.Event {
-#if !HAS_MUTTER45
-		public uint32 button;
-		public weak Clutter.InputDevice device;
-		public Clutter.EventFlags flags;
-		public uint32 group;
-		public uint32 mode;
-		public weak Clutter.Stage stage;
-		public uint32 time;
-		public Clutter.EventType type;
-#endif
 	}
 	[CCode (cheader_filename = "clutter/clutter.h", has_type_id = false)]
 	[Compact]
 	public class PadRingEvent : Clutter.Event {
-#if !HAS_MUTTER45
-		public double angle;
-		public weak Clutter.InputDevice device;
-		public Clutter.EventFlags flags;
-		public uint32 group;
-		public uint32 mode;
-		public uint32 ring_number;
-		public Clutter.InputDevicePadSource ring_source;
-		public weak Clutter.Stage stage;
-		public uint32 time;
-		public Clutter.EventType type;
-#endif
 	}
 	[CCode (cheader_filename = "clutter/clutter.h", has_type_id = false)]
 	[Compact]
 	public class PadStripEvent : Clutter.Event {
-#if !HAS_MUTTER45
-		public weak Clutter.InputDevice device;
-		public Clutter.EventFlags flags;
-		public uint32 group;
-		public uint32 mode;
-		public weak Clutter.Stage stage;
-		public uint32 strip_number;
-		public Clutter.InputDevicePadSource strip_source;
-		public uint32 time;
-		public Clutter.EventType type;
-		public double value;
-#endif
 	}
 	[CCode (cheader_filename = "clutter/clutter.h", type_id = "clutter_page_turn_effect_get_type ()")]
 	public class PageTurnEffect : Clutter.DeformEffect {
@@ -6329,9 +6135,6 @@ namespace Clutter {
 	public class Path : GLib.InitiallyUnowned {
 		[CCode (has_construct_function = false)]
 		public Path ();
-#if !HAS_MUTTER45
-		public void add_cairo_path (Cairo.Path cpath);
-#endif
 		public void add_close ();
 		public void add_curve_to (int x_1, int y_1, int x_2, int y_2, int x_3, int y_3);
 		public void add_line_to (int x, int y);
@@ -6353,9 +6156,6 @@ namespace Clutter {
 		public void remove_node (uint index_);
 		public void replace_node (uint index_, Clutter.PathNode node);
 		public bool set_description (string str);
-#if !HAS_MUTTER45
-		public void to_cairo_path (Cairo.Context cr);
-#endif
 		[CCode (has_construct_function = false)]
 		public Path.with_description (string desc);
 		public string description { owned get; set; }
@@ -6419,13 +6219,6 @@ namespace Clutter {
 	[CCode (cheader_filename = "clutter/clutter.h", has_type_id = false)]
 	[Compact]
 	public class ProximityEvent : Clutter.Event {
-#if !HAS_MUTTER45
-		public weak Clutter.InputDevice device;
-		public Clutter.EventFlags flags;
-		public weak Clutter.Stage stage;
-		public uint32 time;
-		public Clutter.EventType type;
-#endif
 	}
 	[CCode (cheader_filename = "clutter/clutter.h", type_id = "clutter_root_node_get_type ()")]
 	public class RootNode : Clutter.PaintNode {
@@ -6488,20 +6281,6 @@ namespace Clutter {
 	[CCode (cheader_filename = "clutter/clutter.h", has_type_id = false)]
 	[Compact]
 	public class ScrollEvent : Clutter.Event {
-#if !HAS_MUTTER45
-		public double axes;
-		public weak Clutter.InputDevice device;
-		public Clutter.ScrollDirection direction;
-		public Clutter.ScrollFinishFlags finish_flags;
-		public Clutter.EventFlags flags;
-		public Clutter.ModifierType modifier_state;
-		public Clutter.ScrollSource scroll_source;
-		public weak Clutter.Stage stage;
-		public uint32 time;
-		public Clutter.EventType type;
-		public float x;
-		public float y;
-#endif
 	}
 	[CCode (cheader_filename = "clutter/clutter.h", type_id = "clutter_seat_get_type ()")]
 	public abstract class Seat : GLib.Object {
@@ -6515,9 +6294,7 @@ namespace Clutter {
 #endif
 		public virtual unowned Clutter.InputDevice get_keyboard ();
 		public virtual unowned Clutter.Keymap get_keymap ();
-#if HAS_MUTTER45
 		public unowned string get_name ();
-#endif
 		public virtual unowned Clutter.InputDevice get_pointer ();
 		public void get_pointer_a11y_settings (Clutter.PointerA11ySettings settings);
 		public bool get_touch_mode ();
@@ -6525,10 +6302,8 @@ namespace Clutter {
 		public virtual Clutter.GrabState grab (uint32 time);
 		public virtual bool handle_event_post (Clutter.Event event);
 		public void inhibit_unfocus ();
-#if HAS_MUTTER45
 		[NoWrapper]
 		public virtual void init_pointer_position (float x, float y);
-#endif
 		public bool is_unfocus_inhibited ();
 		public GLib.List<weak Clutter.InputDevice> list_devices ();
 		public virtual bool query_state (Clutter.InputDevice device, Clutter.EventSequence? sequence, out Graphene.Point coords, out Clutter.ModifierType modifiers);
@@ -6541,9 +6316,7 @@ namespace Clutter {
 #if HAS_MUTTER47
 		public Clutter.Context context { get; construct; }
 #endif
-#if HAS_MUTTER45
 		public string name { get; construct; }
-#endif
 		public bool touch_mode { get; }
 		public signal void device_added (Clutter.InputDevice object);
 		public signal void device_removed (Clutter.InputDevice object);
@@ -6559,11 +6332,6 @@ namespace Clutter {
 		[CCode (has_construct_function = false)]
 		protected Settings ();
 		public static unowned Clutter.Settings get_default ();
-#if !HAS_MUTTER45
-		[NoAccessorMethod]
-		[Version (deprecated = true, deprecated_since = "1.10")]
-		public Clutter.Backend backend { construct; }
-#endif
 		[NoAccessorMethod]
 		public int dnd_drag_threshold { get; set; }
 		[NoAccessorMethod]
@@ -6657,23 +6425,11 @@ namespace Clutter {
 #endif
 		[CCode (has_construct_function = false)]
 		protected Stage ();
-#if HAS_MUTTER45
 		public void capture_view_into (Clutter.StageView view, Mtk.Rectangle rect, uint8 data, int stride);
-#else
-		public void capture_view_into (Clutter.StageView view, Cairo.RectangleInt rect, uint8 data, int stride);
-#endif
 		public void clear_stage_views ();
-#if !HAS_MUTTER45
-		[CCode (cname = "clutter_stage_event")]
-		public bool emit_event (Clutter.Event event);
-#endif
 		public void ensure_viewport ();
 		public unowned Clutter.Actor get_actor_at_pos (Clutter.PickMode pick_mode, float x, float y);
-#if HAS_MUTTER45
 		public bool get_capture_final_size (Mtk.Rectangle rect, out int out_width, out int out_height, out float out_scale);
-#else
-		public bool get_capture_final_size (Cairo.RectangleInt rect, out int out_width, out int out_height, out float out_scale);
-#endif
 		public unowned Clutter.Actor? get_device_actor (Clutter.InputDevice device, Clutter.EventSequence? sequence);
 		public unowned Clutter.Actor? get_event_actor (Clutter.Event event);
 		public int64 get_frame_counter ();
@@ -6685,22 +6441,14 @@ namespace Clutter {
 #if HAS_MUTTER47
 		public Clutter.Grab grab_inactive (Clutter.Actor actor);
 #endif
-#if HAS_MUTTER45
 		public void handle_event (Clutter.Event event);
-#endif
 #if HAS_MUTTER47
 		public bool is_active ();
 #endif
-#if HAS_MUTTER45
 		public bool paint_to_buffer (Mtk.Rectangle rect, float scale, [CCode (array_length = false)] uint8[] data, int stride, Cogl.PixelFormat format, Clutter.PaintFlag paint_flags) throws GLib.Error;
 		public Clutter.Content paint_to_content (Mtk.Rectangle rect, float scale, Clutter.PaintFlag paint_flags) throws GLib.Error;
 		public void paint_to_framebuffer (Cogl.Framebuffer framebuffer, Mtk.Rectangle rect, float scale, Clutter.PaintFlag paint_flags);
 		public bool pointing_input_foreach (Clutter.StageInputForeachFunc func);
-#else
-		public bool paint_to_buffer (Cairo.RectangleInt rect, float scale, [CCode (array_length = false)] uint8[] data, int stride, Cogl.PixelFormat format, Clutter.PaintFlag paint_flags) throws GLib.Error;
-		public Clutter.Content paint_to_content (Cairo.RectangleInt rect, float scale, Clutter.PaintFlag paint_flags) throws GLib.Error;
-		public void paint_to_framebuffer (Cogl.Framebuffer framebuffer, Cairo.RectangleInt rect, float scale, Clutter.PaintFlag paint_flags);
-#endif
 		[CCode (array_length = false)]
 		public uint8[] read_pixels (int x, int y, int width = -1, int height = -1);
 		public void repick_device (Clutter.InputDevice device);
@@ -6716,10 +6464,8 @@ namespace Clutter {
 #else
 		public void update_device (Clutter.InputDevice device, Clutter.EventSequence sequence, Clutter.InputDevice source_device, Graphene.Point point, uint32 time, Clutter.Actor new_actor, Cairo.Region region, bool emit_crossing);
 #endif
-#if HAS_MUTTER45	
 		[NoAccessorMethod]
 		public bool is_grabbed { get; }
-#endif
 		public Clutter.Actor key_focus { get; set; }
 		public Clutter.Perspective perspective { get; }
 		public string title { get; set; }
@@ -6728,7 +6474,7 @@ namespace Clutter {
 		public signal void after_update (Clutter.StageView view, Clutter.Frame frame);
 		public virtual signal void before_paint (Clutter.StageView view, Clutter.Frame frame);
 		public signal void before_update (Clutter.StageView view, Clutter.Frame frame);
-#if HAS_MUTTER45 && !HAS_MUTTER47
+#if !HAS_MUTTER47
 		public virtual signal void deactivate ();
 #endif
 		public virtual signal void paint_view (Clutter.StageView view, Cairo.Region redraw_clip, Clutter.Frame frame);
@@ -6753,17 +6499,9 @@ namespace Clutter {
 		[CCode (has_construct_function = false)]
 		protected StageView ();
 		public void assign_next_scanout (Cogl.Scanout scanout);
-#if HAS_MUTTER45
 		public virtual Clutter.PaintFlag get_default_paint_flags ();
-#else
-		public void destroy ();
-#endif
 		public unowned Cogl.Framebuffer get_framebuffer ();
-#if HAS_MUTTER45	
 		public void get_layout (Mtk.Rectangle rect);
-#else
-		public void get_layout (Cairo.RectangleInt rect);
-#endif
 #if HAS_MUTTER47
 		public void get_offscreen_transformation_matrix (Graphene.Matrix matrix);
 #else
@@ -6777,7 +6515,6 @@ namespace Clutter {
 #endif
 		public bool has_shadowfb ();
 		public void invalidate_offscreen_blit_pipeline ();
-#if HAS_MUTTER45
 		[NoWrapper]
 		public virtual Clutter.Frame new_frame ();
 #if HAS_MUTTER47
@@ -6785,7 +6522,6 @@ namespace Clutter {
 		public virtual void schedule_update ();
 #endif
 		public void schedule_update_now ();
-#endif
 #if !HAS_MUTTER47
 		[NoWrapper]
 #if HAS_MUTTER46
@@ -6794,11 +6530,7 @@ namespace Clutter {
 		public virtual void setup_offscreen_blit_pipeline (Cogl.Pipeline pipeline);
 #endif
 		[NoWrapper]
-#if HAS_MUTTER45	
 		public virtual void transform_rect_to_onscreen (Mtk.Rectangle src_rect, int dst_width, int dst_height, Mtk.Rectangle dst_rect);
-#else
-		public virtual void transform_rect_to_onscreen (Cairo.RectangleInt src_rect, int dst_width, int dst_height, Cairo.RectangleInt dst_rect);
-#endif
 #endif
 #if HAS_MUTTER47
 		[NoAccessorMethod]
@@ -6828,10 +6560,8 @@ namespace Clutter {
 		public bool use_shadowfb { get; construct; }
 		[NoAccessorMethod]
 		public int64 vblank_duration_us { get; construct; }
-#if HAS_MUTTER45
 		[HasEmitter]
 		public signal void destroy ();
-#endif
 	}
 	[CCode (cheader_filename = "clutter/clutter.h", type_id = "clutter_swipe_action_get_type ()")]
 	public class SwipeAction : Clutter.GestureAction {
@@ -7068,11 +6798,7 @@ namespace Clutter {
 		[CCode (has_construct_function = false)]
 		protected TextureContent ();
 		[CCode (has_construct_function = false, type = "ClutterContent*")]
-#if HAS_MUTTER45
 		public TextureContent.from_texture (Cogl.Texture texture, Mtk.Rectangle? clip);
-#else
-		public TextureContent.from_texture (Cogl.Texture texture, Cairo.RectangleInt? clip);
-#endif
 		public unowned Cogl.Texture get_texture ();
 	}
 	[CCode (cheader_filename = "clutter/clutter.h", type_id = "clutter_texture_node_get_type ()")]
@@ -7158,70 +6884,18 @@ namespace Clutter {
 	[CCode (cheader_filename = "clutter/clutter.h", has_type_id = false)]
 	[Compact]
 	public class TouchEvent : Clutter.Event {
-#if !HAS_MUTTER45
-		public double axes;
-		public weak Clutter.InputDevice device;
-		public Clutter.EventFlags flags;
-		public Clutter.ModifierType modifier_state;
-		public weak Clutter.EventSequence sequence;
-		public weak Clutter.Stage stage;
-		public uint32 time;
-		public Clutter.EventType type;
-		public float x;
-		public float y;
-#endif
 	}
 	[CCode (cheader_filename = "clutter/clutter.h", has_type_id = false)]
 	[Compact]
 	public class TouchpadHoldEvent : Clutter.Event {
-#if !HAS_MUTTER45
-		public Clutter.EventFlags flags;
-		public uint32 n_fingers;
-		public Clutter.TouchpadGesturePhase phase;
-		public weak Clutter.Stage stage;
-		public uint32 time;
-		public Clutter.EventType type;
-		public float x;
-		public float y;
-#endif
 	}
 	[CCode (cheader_filename = "clutter/clutter.h", has_type_id = false)]
 	[Compact]
 	public class TouchpadPinchEvent : Clutter.Event {
-#if !HAS_MUTTER45
-		public float angle_delta;
-		public float dx;
-		public float dx_unaccel;
-		public float dy;
-		public float dy_unaccel;
-		public Clutter.EventFlags flags;
-		public uint n_fingers;
-		public Clutter.TouchpadGesturePhase phase;
-		public float scale;
-		public weak Clutter.Stage stage;
-		public uint32 time;
-		public Clutter.EventType type;
-		public float x;
-		public float y;
-#endif
 	}
 	[CCode (cheader_filename = "clutter/clutter.h", has_type_id = false)]
 	[Compact]
 	public class TouchpadSwipeEvent : Clutter.Event {
-#if !HAS_MUTTER45
-		public float dx;
-		public float dx_unaccel;
-		public float dy;
-		public float dy_unaccel;
-		public Clutter.EventFlags flags;
-		public uint n_fingers;
-		public Clutter.TouchpadGesturePhase phase;
-		public weak Clutter.Stage stage;
-		public uint32 time;
-		public Clutter.EventType type;
-		public float x;
-		public float y;
-#endif
 	}
 	[CCode (cheader_filename = "clutter/clutter.h", type_id = "clutter_transform_node_get_type ()")]
 	public class TransformNode : Clutter.PaintNode {
@@ -7399,11 +7073,7 @@ namespace Clutter {
 	public struct Capture {
 #if !HAS_MUTTER46
 		public Cairo.ImageSurface image;
-#if HAS_MUTTER45
 		public Mtk.Rectangle rect;
-#else
-		public Cairo.RectangleInt rect;
-#endif
 #endif
 	}
 #if !HAS_MUTTER47
@@ -7749,12 +7419,10 @@ namespace Clutter {
 		CLIPPING,
 		OOB_TRANSFORMS,
 		FRAME_TIMINGS,
-#if HAS_MUTTER45
 		GRABS,
 		FRAME_CLOCK,
 #if HAS_MUTTER47
 		GESTURES,
-#endif
 #endif
 		DETAILED_TRACE
 	}
@@ -7803,9 +7471,7 @@ namespace Clutter {
 		FLAG_INPUT_METHOD,
 		FLAG_REPEATED,
 		FLAG_RELATIVE_MOTION,
-#if HAS_MUTTER45
 		FLAG_POINTER_EMULATED,
-#endif
 		FLAG_GRAB_NOTIFY
 	}
 	[CCode (cheader_filename = "clutter/clutter.h", cprefix = "CLUTTER_PHASE_", type_id = "clutter_event_phase_get_type ()")]
@@ -7902,22 +7568,6 @@ namespace Clutter {
 		KEYBOARD,
 		ALL
 	}
-#if !HAS_MUTTER45
-	[CCode (cheader_filename = "clutter/clutter.h", cprefix = "CLUTTER_GRAVITY_", type_id = "clutter_gravity_get_type ()")]
-	[Version (deprecated = true, deprecated_since = "1.22")]
-	public enum Gravity {
-		NONE,
-		NORTH,
-		NORTH_EAST,
-		EAST,
-		SOUTH_EAST,
-		SOUTH,
-		SOUTH_WEST,
-		WEST,
-		NORTH_WEST,
-		CENTER
-	}
-#endif
 	[CCode (cheader_filename = "clutter/clutter.h", cprefix = "CLUTTER_GRID_POSITION_", type_id = "clutter_grid_position_get_type ()")]
 	public enum GridPosition {
 		LEFT,
@@ -8045,14 +7695,6 @@ namespace Clutter {
 		ON,
 		TOGGLE
 	}
-#if !HAS_MUTTER45
-	[CCode (cheader_filename = "clutter/clutter.h", cprefix = "CLUTTER_INTERPOLATION_", type_id = "clutter_interpolation_get_type ()")]
-	[Version (deprecated = true, deprecated_since = "1.22")]
-	public enum Interpolation {
-		LINEAR,
-		CUBIC
-	}
-#endif
 	[CCode (cheader_filename = "clutter/clutter.h", cprefix = "CLUTTER_KEY_STATE_", type_id = "clutter_key_state_get_type ()")]
 	public enum KeyState {
 		RELEASED,
@@ -8214,14 +7856,6 @@ namespace Clutter {
 		Y_AXIS,
 		Z_AXIS
 	}
-#if !HAS_MUTTER45
-	[CCode (cheader_filename = "clutter/clutter.h", cprefix = "CLUTTER_ROTATE_", type_id = "clutter_rotate_direction_get_type ()")]
-	[Version (deprecated = true, deprecated_since = "1.22")]
-	public enum RotateDirection {
-		CW,
-		CCW
-	}
-#endif
 	[CCode (cheader_filename = "clutter/clutter.h", cprefix = "CLUTTER_SCALING_FILTER_", type_id = "clutter_scaling_filter_get_type ()")]
 	public enum ScalingFilter {
 		LINEAR,
@@ -8341,24 +7975,6 @@ namespace Clutter {
 		LTR,
 		RTL
 	}
-#if !HAS_MUTTER45
-	[CCode (cheader_filename = "clutter/clutter.h", cprefix = "CLUTTER_TEXTURE_", type_id = "clutter_texture_flags_get_type ()")]
-	[Flags]
-	[Version (deprecated = true, deprecated_since = "1.22")]
-	public enum TextureFlags {
-		NONE,
-		RGB_FLAG_BGR,
-		RGB_FLAG_PREMULT,
-		YUV_FLAG_YUV2
-	}
-	[CCode (cheader_filename = "clutter/clutter.h", cprefix = "CLUTTER_TEXTURE_QUALITY_", type_id = "clutter_texture_quality_get_type ()")]
-	[Version (deprecated = true, deprecated_since = "1.22")]
-	public enum TextureQuality {
-		LOW,
-		MEDIUM,
-		HIGH
-	}
-#endif
 	[CCode (cheader_filename = "clutter/clutter.h", cprefix = "CLUTTER_TIMELINE_", type_id = "clutter_timeline_direction_get_type ()")]
 	public enum TimelineDirection {
 		FORWARD,
@@ -8428,28 +8044,16 @@ namespace Clutter {
 	[CCode (cheader_filename = "clutter/clutter.h", instance_pos = 6.9)]
 	public delegate void ScriptConnectFunc (Clutter.Script script, GLib.Object object, string signal_name, string handler_name, GLib.Object connect_object, GLib.ConnectFlags flags);
 #endif
-#if HAS_MUTTER45
 	[CCode (cheader_filename = "clutter/clutter.h", instance_pos = 3.9)]
 	public delegate bool StageInputForeachFunc (Clutter.Stage stage, Clutter.InputDevice device, Clutter.EventSequence sequence);
-#endif
 	[CCode (cheader_filename = "clutter/clutter.h", instance_pos = 3.9)]
 	public delegate double TimelineProgressFunc (Clutter.Timeline timeline, double elapsed, double total);
-#if !HAS_MUTTER45
-	[CCode (cheader_filename = "clutter/clutter.h", cname = "CLUTTER_COGL")]
-	[Version (deprecated = true, deprecated_since = "1.10")]
-	public const string COGL;
-#endif
 	[CCode (cheader_filename = "clutter/clutter.h", cname = "CLUTTER_CURRENT_TIME")]
 	public const int CURRENT_TIME;
 	[CCode (cheader_filename = "clutter/clutter.h", cname = "CLUTTER_EVENT_PROPAGATE")]
 	public const bool EVENT_PROPAGATE;
 	[CCode (cheader_filename = "clutter/clutter.h", cname = "CLUTTER_EVENT_STOP")]
 	public const bool EVENT_STOP;
-#if !HAS_MUTTER45
-	[CCode (cheader_filename = "clutter/clutter.h", cname = "CLUTTER_FLAVOUR")]
-	[Version (deprecated = true, deprecated_since = "1.10")]
-	public const string FLAVOUR;
-#endif
 #if !HAS_MUTTER46
 	[CCode (cheader_filename = "clutter/clutter.h", cname = "CLUTTER_PATH_RELATIVE")]
 	public const int PATH_RELATIVE;
@@ -8467,10 +8071,6 @@ namespace Clutter {
 #if !HAS_MUTTER47
 	[CCode (cheader_filename = "clutter/clutter.h")]
 	public static void disable_accessibility ();
-#endif
-#if !HAS_MUTTER45
-	[CCode (cheader_filename = "clutter/clutter.h")]
-	public static void do_event (Clutter.Event event);
 #endif
 	[CCode (cheader_filename = "clutter/clutter.h")]
 	public static bool events_pending ();
diff --git a/vapi/mutter-cogl.vapi b/vapi/mutter-cogl.vapi
index b75cc6bc8..634484b92 100644
--- a/vapi/mutter-cogl.vapi
+++ b/vapi/mutter-cogl.vapi
@@ -866,21 +866,13 @@ namespace Cogl {
 		RG_88,
 		RGB_888,
 		BGR_888,
-#if HAS_MUTTER45
 		RGBX_8888,
-#endif
 		RGBA_8888,
-#if HAS_MUTTER45
 		BGRX_8888,
-#endif
 		BGRA_8888,
-#if HAS_MUTTER45
 		XRGB_8888,
-#endif
 		ARGB_8888,
-#if HAS_MUTTER45
 		XBGR_8888,
-#endif
 		ABGR_8888,
 		RGBA_1010102,
 		BGRA_1010102,
@@ -888,13 +880,9 @@ namespace Cogl {
 		ARGB_2101010,
 		XBGR_2101010,
 		ABGR_2101010,
-#if HAS_MUTTER45
 		RGBX_FP_16161616,
-#endif
 		RGBA_FP_16161616,
-#if HAS_MUTTER45
 		BGRX_FP_16161616,
-#endif
 		BGRA_FP_16161616,
 		XRGB_FP_16161616,
 		ARGB_FP_16161616,
@@ -1092,13 +1080,10 @@ namespace Cogl {
 	[CCode (cheader_filename = "cogl/cogl.h")]
 	[Version (since = "1.0")]
 	public static void flush ();
-#if HAS_MUTTER45
 	[CCode (cheader_filename = "cogl/cogl.h")]
 	public static bool is_tracing ();
-#endif
 	[CCode (cheader_filename = "cogl/cogl.h")]
 	public static void set_tracing_disabled_on_thread (GLib.MainContext main_context);
-#if HAS_MUTTER45
 	[CCode (cheader_filename = "cogl/cogl.h")]
 	public static void set_tracing_enabled_on_thread (GLib.MainContext main_context, string group);
 	[CCode (cheader_filename = "cogl/cogl.h")]
@@ -1107,12 +1092,6 @@ namespace Cogl {
 	public static bool start_tracing_with_path (string filename) throws GLib.Error;
 	[CCode (cheader_filename = "cogl/cogl.h")]
 	public static void stop_tracing ();
-#else
-	[CCode (cheader_filename = "cogl/cogl.h")]
-	public static void set_tracing_enabled_on_thread (GLib.MainContext main_context, string group, string filename);
-	[CCode (cheader_filename = "cogl/cogl.h")]
-	public static void set_tracing_enabled_on_thread_with_fd (GLib.MainContext main_context, string group, int fd);
-#endif
 	[CCode (cheader_filename = "cogl/cogl.h")]
 	public static void trace_describe (Cogl.TraceHead head, string description);
 	[CCode (cheader_filename = "cogl/cogl.h")]

From d3815e151bce9c51158dee3ec2f65bda17037817 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Danielle=20For=C3=A9?= <danielle@elementary.io>
Date: Sun, 10 Nov 2024 12:44:29 -0800
Subject: [PATCH 4/5] Rest of 45 ifdef

---
 vapi/libmutter.vapi | 206 +-------------------------------------------
 1 file changed, 1 insertion(+), 205 deletions(-)

diff --git a/vapi/libmutter.vapi b/vapi/libmutter.vapi
index c531f6f35..308c71e91 100644
--- a/vapi/libmutter.vapi
+++ b/vapi/libmutter.vapi
@@ -59,10 +59,8 @@ namespace Meta {
 		public static bool get_gnome_animations ();
 		[CCode (cheader_filename = "meta/prefs.h")]
 		public static Meta.KeyBindingAction get_keybinding_action (string name);
-#if HAS_MUTTER45
 		[CCode (cheader_filename = "meta/prefs.h")]
 		public static string? get_keybinding_label (string name);
-#endif
 		[CCode (cheader_filename = "meta/prefs.h")]
 		public static int get_mouse_button_menu ();
 		[CCode (cheader_filename = "meta/prefs.h")]
@@ -75,10 +73,6 @@ namespace Meta {
 		public static bool get_raise_on_click ();
 		[CCode (cheader_filename = "meta/prefs.h")]
 		public static bool get_show_fallback_app_menu ();
-#if !HAS_MUTTER45
-		[CCode (cheader_filename = "meta/prefs.h")]
-		public static unowned Pango.FontDescription get_titlebar_font ();
-#endif
 		[CCode (cheader_filename = "meta/prefs.h")]
 		public static bool get_visual_bell ();
 		[CCode (cheader_filename = "meta/prefs.h")]
@@ -321,9 +315,7 @@ namespace Meta {
 		public unowned Meta.DebugControl get_debug_control ();
 #endif
 		public unowned Meta.Display get_display ();
-#if HAS_MUTTER45
 		public unowned Meta.WaylandCompositor? get_wayland_compositor ();
-#endif
 		public bool is_replacing ();
 		public void notify_ready ();
 		public bool raise_rlimit_nofile () throws GLib.Error;
@@ -407,11 +399,7 @@ namespace Meta {
 		public unowned Meta.Window get_focus_window ();
 		public uint get_keybinding_action (uint keycode, ulong mask);
 		public uint32 get_last_user_time ();
-#if HAS_MUTTER45
 		public Mtk.Rectangle get_monitor_geometry (int monitor);
-#else
-		public Meta.Rectangle get_monitor_geometry (int monitor);
-#endif
 		public bool get_monitor_in_fullscreen (int monitor);
 		public int get_monitor_index_for_rect (Mtk.Rectangle rect);
 		public int get_monitor_neighbor_index (int which_monitor, Meta.DisplayDirection dir);
@@ -484,11 +472,7 @@ namespace Meta {
 		public signal bool restart ();
 		public signal void show_osd (int object, string p0, string p1);
 		public signal unowned Clutter.Actor? show_pad_osd (Clutter.InputDevice pad, GLib.Settings settings, string layout_path, bool edition_mode, int monitor_idx);
-#if HAS_MUTTER45
 		public signal bool show_resize_popup (bool object, Mtk.Rectangle p0, int p1, int p2);
-#else
-		public signal bool show_resize_popup (bool object, Meta.Rectangle p0, int p1, int p2);
-#endif
 		public signal bool show_restart_message (string? message);
 		public signal void showing_desktop_changed ();
 		public signal void window_created (Meta.Window object);
@@ -591,10 +575,8 @@ namespace Meta {
 		public void switch_config (Meta.MonitorSwitchConfigType config_type);
 		[NoAccessorMethod]
 		public Meta.Backend backend { owned get; construct; }
-#if HAS_MUTTER45
 		[NoAccessorMethod]
 		public string experimental_hdr { owned get; set; }
-#endif
 		[NoAccessorMethod]
 		public bool has_builtin_panel { get; }
 		[NoAccessorMethod]
@@ -603,13 +585,8 @@ namespace Meta {
 		public signal void confirm_display_change ();
 		public signal void monitors_changed ();
 		public signal void monitors_changed_internal ();
-#if HAS_MUTTER45
 		public signal void power_save_mode_changed (Meta.PowerSaveChangeReason object);
-#else
-		public signal void power_save_mode_changed ();
-#endif
 	}
-#if HAS_MUTTER45
 	[CCode (cheader_filename = "meta/meta-multi-texture.h", type_id = "meta_multi_texture_get_type ()")]
 	public class MultiTexture : GLib.Object {
 		[CCode (has_construct_function = false)]
@@ -624,7 +601,6 @@ namespace Meta {
 		public MultiTexture.simple (owned Cogl.Texture plane);
 		public string to_string ();
 	}
-#endif
 #if HAS_MUTTER47
 	[CCode (cheader_filename = "meta/meta-orientation-manager.h", type_id = "meta_orientation_manager_get_type ()")]
 	public class OrientationManager : GLib.Object {
@@ -672,23 +648,13 @@ namespace Meta {
 		[NoWrapper]
 		public virtual unowned Meta.PluginInfo? plugin_info ();
 		[NoWrapper]
-#if HAS_MUTTER45
 		public virtual void show_tile_preview (Meta.Window window, Mtk.Rectangle tile_rect, int tile_monitor_number);
-#else
-		public virtual void show_tile_preview (Meta.Window window, Meta.Rectangle tile_rect, int tile_monitor_number);
-#endif
 		[NoWrapper]
 		public virtual void show_window_menu (Meta.Window window, Meta.WindowMenuType menu, int x, int y);
 		[NoWrapper]
-#if HAS_MUTTER45
 		public virtual void show_window_menu_for_rect (Meta.Window window, Meta.WindowMenuType menu, Mtk.Rectangle rect);
 		[NoWrapper]
 		public virtual void size_change (Meta.WindowActor actor, Meta.SizeChange which_change, Mtk.Rectangle old_frame_rect, Mtk.Rectangle old_buffer_rect);
-#else
-		public virtual void show_window_menu_for_rect (Meta.Window window, Meta.WindowMenuType menu, Meta.Rectangle rect);
-		[NoWrapper]
-		public virtual void size_change (Meta.WindowActor actor, Meta.SizeChange which_change, Meta.Rectangle old_frame_rect, Meta.Rectangle old_buffer_rect);
-#endif
 		public void size_change_completed (Meta.WindowActor actor);
 		[NoWrapper]
 		public virtual void size_changed (Meta.WindowActor actor);
@@ -762,11 +728,7 @@ namespace Meta {
 	[CCode (cheader_filename = "meta/meta-shadow-factory.h", ref_function = "meta_shadow_ref", type_id = "meta_shadow_get_type ()", unref_function = "meta_shadow_unref")]
 	[Compact]
 	public class Shadow {
-#if HAS_MUTTER45
 		public void get_bounds (int window_x, int window_y, int window_width, int window_height, Mtk.Rectangle bounds);
-#else
-		public void get_bounds (int window_x, int window_y, int window_width, int window_height, Cairo.RectangleInt bounds);
-#endif
 #if HAS_MUTTER46
 		public void paint (Cogl.Framebuffer framebuffer, int window_x, int window_y, int window_width, int window_height, uint8 opacity, Mtk.Region? clip, bool clip_strictly);
 #else
@@ -790,13 +752,8 @@ namespace Meta {
 	public sealed class ShapedTexture : GLib.Object, Clutter.Content {
 		[CCode (has_construct_function = false)]
 		protected ShapedTexture ();
-#if HAS_MUTTER45
 		public Cairo.Surface? get_image (Mtk.Rectangle? clip);
 		public unowned Meta.MultiTexture get_texture ();
-#else
-		public Cairo.Surface? get_image (Cairo.RectangleInt? clip);
-		public unowned Cogl.Texture get_texture ();
-#endif
 		public void set_create_mipmaps (bool create_mipmaps);
 		public void set_mask_texture (Cogl.Texture mask_texture);
 #if HAS_MUTTER47
@@ -822,9 +779,6 @@ namespace Meta {
 #endif
 		[CCode (has_construct_function = false)]
 		protected Stage ();
-#if !HAS_MUTTER45
-		public signal void actors_painted ();
-#endif
 	}
 	[CCode (cheader_filename = "meta/meta-startup-notification.h", type_id = "meta_startup_notification_get_type ()")]
 	public sealed class StartupNotification : GLib.Object {
@@ -861,25 +815,12 @@ namespace Meta {
 		public signal void complete ();
 		public signal void timeout ();
 	}
-#if !HAS_MUTTER45
-	[CCode (cheader_filename = "meta/theme.h", has_type_id = false)]
-	[Compact]
-	public class Theme {
-		public void free ();
-		[CCode (cheader_filename = "meta/theme.h")]
-		public static unowned Meta.Theme get_default ();
-		[CCode (cheader_filename = "meta/theme.h")]
-		public static unowned Meta.Theme @new ();
-	}
-#endif
 	[CCode (cheader_filename = "meta/meta-wayland-client.h", type_id = "meta_wayland_client_get_type ()")]
 	public sealed class WaylandClient : GLib.Object {
 		[CCode (has_construct_function = false)]
 		public WaylandClient (Meta.Context context, GLib.SubprocessLauncher launcher) throws GLib.Error;
 		public void hide_from_window_list (Meta.Window window);
-#if HAS_MUTTER45
 		public void make_desktop (Meta.Window window);
-#endif
 #if HAS_MUTTER46
 		public void make_dock (Meta.Window window);
 #endif
@@ -889,7 +830,6 @@ namespace Meta {
 		public GLib.Subprocess spawnv (Meta.Display display, [CCode (array_length = false, array_null_terminated = true)] string[] argv) throws GLib.Error;
 		public signal void client_destroyed ();
 	}
-#if HAS_MUTTER45
 	[CCode (cheader_filename = "meta/meta-wayland-compositor.h", type_id = "meta_wayland_compositor_get_type ()")]
 	public class WaylandCompositor : GLib.Object {
 		[CCode (has_construct_function = false)]
@@ -897,7 +837,6 @@ namespace Meta {
 		public void* get_wayland_display ();
 		public signal void prepare_shutdown ();
 	}
-#endif
 #if HAS_MUTTER46
 	[CCode (cheader_filename = "meta/main.h", type_id = "meta_wayland_surface_get_type ()")]
 	public class WaylandSurface : GLib.Object {
@@ -931,17 +870,10 @@ namespace Meta {
 		public bool can_close ();
 		public bool can_maximize ();
 		public bool can_minimize ();
-#if !HAS_MUTTER45
-		public bool can_shade ();
-#endif
 		public void change_workspace (Meta.Workspace workspace);
 		public void change_workspace_by_index (int space_index, bool append);
 		public void check_alive (uint32 timestamp);
-#if HAS_MUTTER45
 		public Mtk.Rectangle client_rect_to_frame_rect (Mtk.Rectangle client_rect);
-#else
-		public Meta.Rectangle client_rect_to_frame_rect (Meta.Rectangle client_rect);
-#endif
 #if !HAS_MUTTER46
 		public void compute_group ();
 #endif
@@ -950,13 +882,8 @@ namespace Meta {
 		public void focus (uint32 timestamp);
 		public void foreach_ancestor (Meta.WindowForeachFunc func);
 		public void foreach_transient (Meta.WindowForeachFunc func);
-#if HAS_MUTTER45
 		public Mtk.Rectangle frame_rect_to_client_rect (Mtk.Rectangle frame_rect);
 		public Mtk.Rectangle get_buffer_rect ();
-#else
-		public Meta.Rectangle frame_rect_to_client_rect (Meta.Rectangle frame_rect);
-		public Meta.Rectangle get_buffer_rect ();
-#endif
 #if !HAS_MUTTER46
 		public unowned string? get_client_machine ();
 #endif
@@ -972,11 +899,7 @@ namespace Meta {
 #else
 		public unowned Cairo.Region? get_frame_bounds ();
 #endif
-#if HAS_MUTTER45
 		public Mtk.Rectangle get_frame_rect ();
-#else
-		public Meta.Rectangle get_frame_rect ();
-#endif
 		public Meta.FrameType get_frame_type ();
 #if !HAS_MUTTER46
 		public unowned Meta.Group? get_group ();
@@ -988,11 +911,7 @@ namespace Meta {
 		public unowned string? get_gtk_theme_variant ();
 		public unowned string? get_gtk_unique_bus_name ();
 		public unowned string? get_gtk_window_object_path ();
-#if HAS_MUTTER45
 		public bool get_icon_geometry (out Mtk.Rectangle rect);
-#else
-		public bool get_icon_geometry (out Meta.Rectangle rect);
-#endif
 		public uint64 get_id ();
 		public Meta.StackLayer get_layer ();
 		public Meta.MaximizeFlags get_maximized ();
@@ -1010,15 +929,9 @@ namespace Meta {
 		public Meta.WindowType get_window_type ();
 		public unowned string? get_wm_class ();
 		public unowned string? get_wm_class_instance ();
-#if HAS_MUTTER45
 		public Mtk.Rectangle get_work_area_all_monitors ();
 		public Mtk.Rectangle get_work_area_current_monitor ();
 		public Mtk.Rectangle get_work_area_for_monitor (int which_monitor);
-#else
-		public Meta.Rectangle get_work_area_all_monitors ();
-		public Meta.Rectangle get_work_area_current_monitor ();
-		public Meta.Rectangle get_work_area_for_monitor (int which_monitor);
-#endif
 		public unowned Meta.Workspace get_workspace ();
 #if !HAS_MUTTER46
 		public X.Window get_xwindow ();
@@ -1026,9 +939,7 @@ namespace Meta {
 #endif
 		public bool has_attached_dialogs ();
 		public bool has_focus ();
-#if HAS_MUTTER45
 		public bool has_pointer ();
-#endif
 		public bool is_above ();
 		public bool is_always_on_all_workspaces ();
 		public bool is_ancestor_of_transient (Meta.Window transient);
@@ -1044,9 +955,6 @@ namespace Meta {
 		public bool is_override_redirect ();
 		public bool is_remote ();
 		public bool is_screen_sized ();
-#if !HAS_MUTTER45
-		public bool is_shaded ();
-#endif
 		public bool is_skip_taskbar ();
 		public void kill ();
 		public bool located_on_workspace (Meta.Workspace workspace);
@@ -1065,17 +973,12 @@ namespace Meta {
 		public void raise ();
 #if HAS_MUTTER46
 		public void raise_and_make_recent_on_workspace (Meta.Workspace workspace);
-#elif HAS_MUTTER45
+#else
 		public void raise_and_make_recent ();
 #endif
 		public void set_compositor_private (GLib.Object priv);
 		public void set_demands_attention ();
-#if HAS_MUTTER45
 		public void set_icon_geometry (Mtk.Rectangle? rect);
-#else
-		public void set_icon_geometry (Meta.Rectangle? rect);
-		public void shade (uint32 timestamp);
-#endif
 #if !HAS_MUTTER47
 		public void shove_titlebar_onscreen ();
 #endif
@@ -1093,9 +996,6 @@ namespace Meta {
 		public void unmaximize (Meta.MaximizeFlags directions);
 		public void unminimize ();
 		public void unset_demands_attention ();
-#if !HAS_MUTTER45
-		public void unshade (uint32 timestamp);
-#endif
 		public void unstick ();
 #if HAS_MUTTER46
 #if HAS_MUTTER47
@@ -1160,9 +1060,7 @@ namespace Meta {
 #endif
 		[CCode (cname = "focus")]
 		public signal void focused ();
-#if HAS_MUTTER45
 		public signal void highest_scale_monitor_changed ();
-#endif
 		public signal void position_changed ();
 		public signal void raised ();
 		public signal void shown ();
@@ -1180,19 +1078,11 @@ namespace Meta {
 		[CCode (has_construct_function = false)]
 		protected WindowActor ();
 		public void freeze ();
-#if HAS_MUTTER45
 		public Cairo.Surface? get_image (Mtk.Rectangle? clip);
-#else
-		public Cairo.Surface? get_image (Cairo.RectangleInt? clip);
-#endif
 		public unowned Meta.Window? get_meta_window ();
 		public unowned Meta.ShapedTexture? get_texture ();
 		public bool is_destroyed ();
-#if HAS_MUTTER45
 		public Clutter.Content? paint_to_content (Mtk.Rectangle? clip) throws GLib.Error;
-#else
-		public Clutter.Content? paint_to_content (Meta.Rectangle? clip) throws GLib.Error;
-#endif
 		public void sync_visibility ();
 		public void thaw ();
 		public Meta.Window meta_window { get; construct; }
@@ -1240,13 +1130,8 @@ namespace Meta {
 		public void activate_with_focus (Meta.Window focus_this, uint32 timestamp);
 		public unowned Meta.Display get_display ();
 		public unowned Meta.Workspace get_neighbor (Meta.MotionDirection direction);
-#if HAS_MUTTER45
 		public Mtk.Rectangle get_work_area_all_monitors ();
 		public Mtk.Rectangle get_work_area_for_monitor (int which_monitor);
-#else
-		public Meta.Rectangle get_work_area_all_monitors ();
-		public Meta.Rectangle get_work_area_for_monitor (int which_monitor);
-#endif
 		public int index ();
 		public GLib.List<weak Meta.Window> list_windows ();
 		public void set_builtin_struts (GLib.SList<Meta.Strut?> struts);
@@ -1303,38 +1188,19 @@ namespace Meta {
 		public int error_trap_pop_with_return ();
 		[CCode (cheader_filename = "meta/meta-x11-errors.h", cname = "meta_x11_error_trap_push")]
 		public void error_trap_push ();
-#endif
-#if !HAS_MUTTER45
-		public int get_damage_event_base ();
-		public int get_screen_number ();
-		public int get_shape_event_base ();
 #endif
 		public unowned X.Display get_xdisplay ();
-#if !HAS_MUTTER45
-		public int get_xinput_opcode ();
-#endif
 		public X.Window get_xroot ();
-#if !HAS_MUTTER45
-		public bool has_shape ();
-#endif
 		public unowned Meta.Group lookup_group (X.Window group_leader);
 #if HAS_MUTTER46
 		public X.Window lookup_xwindow (Meta.Window window);
 #endif
-#if HAS_MUTTER45
 		public void redirect_windows (Meta.Display display);
 		public void remove_event_func (uint id);
-#endif
-#if !HAS_MUTTER45
-		public void set_cm_selection ();
-#endif
 #if HAS_MUTTER47
 		public void set_stage_input_region ([CCode (array_length_cname = "n_rects", array_length_pos = 1.1, type = "XRectangle*")] X.Xrectangle[] rects);
 #else
 		public void set_stage_input_region (X.XserverRegion region);
-#endif
-#if !HAS_MUTTER45
-		public bool xwindow_is_a_no_focus_window (X.Window xwindow);
 #endif
 	}
 	[CCode (cheader_filename = "meta/meta-close-dialog.h", type_cname = "MetaCloseDialogInterface", type_id = "meta_close_dialog_get_type ()")]
@@ -1370,11 +1236,7 @@ namespace Meta {
 	}
 	[CCode (cheader_filename = "meta/boxes.h", has_type_id = false)]
 	public struct Edge {
-#if HAS_MUTTER45
 		public Mtk.Rectangle rect;
-#else
-		public Meta.Rectangle rect;
-#endif
 		public Meta.Side side_type;
 		public Meta.EdgeType edge_type;
 	}
@@ -1400,26 +1262,6 @@ namespace Meta {
 		public weak string license;
 		public weak string description;
 	}
-#if !HAS_MUTTER45
-	[CCode (cheader_filename = "meta/boxes.h", copy_function = "g_boxed_copy", free_function = "g_boxed_free", type_id = "meta_rectangle_get_type ()")]
-	public struct Rectangle {
-		public int x;
-		public int y;
-		public int width;
-		public int height;
-		public int area ();
-		public bool contains_rect (Meta.Rectangle inner_rect);
-		public Meta.Rectangle? copy ();
-		public bool could_fit_rect (Meta.Rectangle inner_rect);
-		public bool equal (Meta.Rectangle src2);
-		public void free ();
-		public bool horiz_overlap (Meta.Rectangle rect2);
-		public bool intersect (Meta.Rectangle src2, out Meta.Rectangle dest);
-		public bool overlap (Meta.Rectangle rect2);
-		public Meta.Rectangle union (Meta.Rectangle rect2);
-		public bool vert_overlap (Meta.Rectangle rect2);
-	}
-#endif
 #if !HAS_MUTTER47
 	[CCode (cheader_filename = "meta/meta-shadow-factory.h", has_type_id = false)]
 	public struct ShadowParams {
@@ -1432,11 +1274,7 @@ namespace Meta {
 #endif
 	[CCode (cheader_filename = "meta/boxes.h", has_type_id = false)]
 	public struct Strut {
-#if HAS_MUTTER45
 		public Mtk.Rectangle rect;
-#else
-		public Meta.Rectangle rect;
-#endif
 		public Meta.Side side;
 	}
 	[CCode (cheader_filename = "meta/main.h", cprefix = "META_BACKEND_CAPABILITY_", type_id = "meta_backend_capabilities_get_type ()")]
@@ -1453,14 +1291,12 @@ namespace Meta {
 		NEGATIVE_X,
 		NEGATIVE_Y
 	}
-#if HAS_MUTTER45
 	[CCode (cheader_filename = "meta/barrier.h", cprefix = "META_BARRIER_FLAG_", type_id = "meta_barrier_flags_get_type ()")]
 	[Flags]
 	public enum BarrierFlags {
 		NONE,
 		STICKY
 	}
-#endif
 	[CCode (cheader_filename = "meta/common.h", cprefix = "META_BUTTON_FUNCTION_", type_id = "meta_button_function_get_type ()")]
 	public enum ButtonFunction {
 		MENU,
@@ -1551,10 +1387,8 @@ namespace Meta {
 		REMOTE_DESKTOP,
 		BACKEND,
 		COLOR,
-#if HAS_MUTTER45
 		INPUT_EVENTS,
 		EIS,
-#endif
 #if HAS_MUTTER47
 		KMS_DEADLINE,
 		SESSION_MANAGEMENT,
@@ -1600,28 +1434,6 @@ namespace Meta {
 		SUCCESS,
 		ERROR
 	}
-#if !HAS_MUTTER45
-	[CCode (cheader_filename = "meta/common.h", cprefix = "META_FRAME_", type_id = "meta_frame_flags_get_type ()")]
-	[Flags]
-	public enum FrameFlags {
-		ALLOWS_DELETE,
-		ALLOWS_MENU,
-		ALLOWS_MINIMIZE,
-		ALLOWS_MAXIMIZE,
-		ALLOWS_VERTICAL_RESIZE,
-		ALLOWS_HORIZONTAL_RESIZE,
-		HAS_FOCUS,
-		SHADED,
-		STUCK,
-		MAXIMIZED,
-		ALLOWS_SHADE,
-		ALLOWS_MOVE,
-		FULLSCREEN,
-		ABOVE,
-		TILED_LEFT,
-		TILED_RIGHT
-	}
-#endif
 	[CCode (cheader_filename = "meta/common.h", cprefix = "META_FRAME_TYPE_", type_id = "meta_frame_type_get_type ()")]
 	public enum FrameType {
 		NORMAL,
@@ -1785,9 +1597,7 @@ namespace Meta {
 		IS_REVERSED,
 		NON_MASKABLE,
 		IGNORE_AUTOREPEAT,
-#if HAS_MUTTER45
 		CUSTOM_TRIGGER,
-#endif
 #if HAS_MUTTER47
 		TRIGGER_RELEASE,
 #endif
@@ -1853,7 +1663,6 @@ namespace Meta {
 		DOWN_LEFT,
 		DOWN_RIGHT
 	}
-#if HAS_MUTTER45
 	[CCode (cheader_filename = "meta/meta-multi-texture-format.h", cprefix = "META_MULTI_TEXTURE_FORMAT_", type_id = "meta_multi_texture_format_get_type ()")]
 	public enum MultiTextureFormat {
 		INVALID,
@@ -1888,21 +1697,11 @@ namespace Meta {
 		RING,
 		STRIP
 	}
-#else
-	[CCode (cheader_filename = "meta/display.h", cprefix = "META_PAD_ACTION_", type_id = "meta_pad_action_type_get_type ()")]
-	public enum PadActionType {
-		BUTTON,
-		RING,
-		STRIP
-	}
-#endif
-#if HAS_MUTTER45
 	[CCode (cheader_filename = "meta/meta-monitor-manager.h", cprefix = "META_POWER_SAVE_CHANGE_REASON_", type_id = "meta_power_save_change_reason_get_type ()")]
 	public enum PowerSaveChangeReason {
 		MODE_CHANGE,
 		HOTPLUG
 	}
-#endif
 	[CCode (cheader_filename = "meta/prefs.h", cprefix = "META_PREF_", type_id = "meta_preference_get_type ()")]
 	public enum Preference {
 		MOUSE_BUTTON_MODS,
@@ -1916,9 +1715,6 @@ namespace Meta {
 		AUTO_RAISE,
 		AUTO_RAISE_DELAY,
 		FOCUS_CHANGE_ON_POINTER_REST,
-#if !HAS_MUTTER45
-		TITLEBAR_FONT,
-#endif
 		NUM_WORKSPACES,
 		DYNAMIC_WORKSPACES,
 		KEYBINDINGS,

From e28c298f259384083a7eec5f3db300a9d1a8608e Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Corentin=20No=C3=ABl?= <corentin.noel@collabora.com>
Date: Tue, 10 Jun 2025 09:19:40 +0200
Subject: [PATCH 5/5] Fix symlinks

---
 vapi/libmutter-13.deps         | 2 +-
 vapi/libmutter-13.vapi         | 2 +-
 vapi/mutter-clutter-13.vapi    | 2 +-
 vapi/mutter-cogl-13.deps       | 2 +-
 vapi/mutter-cogl-13.vapi       | 2 +-
 vapi/mutter-cogl-pango-13.vapi | 2 +-
 6 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/vapi/libmutter-13.deps b/vapi/libmutter-13.deps
index a072e118a..7782137a6 120000
--- a/vapi/libmutter-13.deps
+++ b/vapi/libmutter-13.deps
@@ -1 +1 @@
-libmutter-12.deps
\ No newline at end of file
+libmutter.deps
\ No newline at end of file
diff --git a/vapi/libmutter-13.vapi b/vapi/libmutter-13.vapi
index f19d0131b..12f9cc52d 120000
--- a/vapi/libmutter-13.vapi
+++ b/vapi/libmutter-13.vapi
@@ -1 +1 @@
-libmutter-12.vapi
\ No newline at end of file
+libmutter.vapi
\ No newline at end of file
diff --git a/vapi/mutter-clutter-13.vapi b/vapi/mutter-clutter-13.vapi
index 8471a954c..e1b7159f2 120000
--- a/vapi/mutter-clutter-13.vapi
+++ b/vapi/mutter-clutter-13.vapi
@@ -1 +1 @@
-mutter-clutter-12.vapi
\ No newline at end of file
+mutter-clutter.vapi
\ No newline at end of file
diff --git a/vapi/mutter-cogl-13.deps b/vapi/mutter-cogl-13.deps
index a587f313a..ca8dd2a93 120000
--- a/vapi/mutter-cogl-13.deps
+++ b/vapi/mutter-cogl-13.deps
@@ -1 +1 @@
-mutter-cogl-12.deps
\ No newline at end of file
+mutter-cogl.deps
\ No newline at end of file
diff --git a/vapi/mutter-cogl-13.vapi b/vapi/mutter-cogl-13.vapi
index 96930f03b..7e33c18b1 120000
--- a/vapi/mutter-cogl-13.vapi
+++ b/vapi/mutter-cogl-13.vapi
@@ -1 +1 @@
-mutter-cogl-12.vapi
\ No newline at end of file
+mutter-cogl.vapi
\ No newline at end of file
diff --git a/vapi/mutter-cogl-pango-13.vapi b/vapi/mutter-cogl-pango-13.vapi
index 1fa954891..b099ea404 120000
--- a/vapi/mutter-cogl-pango-13.vapi
+++ b/vapi/mutter-cogl-pango-13.vapi
@@ -1 +1 @@
-mutter-cogl-pango-12.vapi
\ No newline at end of file
+mutter-cogl-pango.vapi
\ No newline at end of file
